--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.14
-- Dumped by pg_dump version 10.5 (Ubuntu 10.5-0ubuntu0.18.04)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: postgres; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE postgres WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8';


ALTER DATABASE postgres OWNER TO postgres;

\connect postgres

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- Name: atomic; Type: SCHEMA; Schema: -; Owner: sparta
--

CREATE SCHEMA atomic;


ALTER SCHEMA atomic OWNER TO sparta;

--
-- Name: recipes_basic; Type: SCHEMA; Schema: -; Owner: sparta
--

CREATE SCHEMA recipes_basic;


ALTER SCHEMA recipes_basic OWNER TO sparta;

--
-- Name: scratch; Type: SCHEMA; Schema: -; Owner: sparta
--

CREATE SCHEMA scratch;


ALTER SCHEMA scratch OWNER TO sparta;

--
-- Name: sparta; Type: SCHEMA; Schema: -; Owner: sparta
--

CREATE SCHEMA sparta;


ALTER SCHEMA sparta OWNER TO sparta;

--
-- Name: web; Type: SCHEMA; Schema: -; Owner: sparta
--

CREATE SCHEMA web;


ALTER SCHEMA web OWNER TO sparta;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: com_snowplowanalytics_snowplow_ua_parser_context_1; Type: TABLE; Schema: atomic; Owner: sparta
--

CREATE TABLE atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (
    schema_vendor character varying(128),
    schema_name character varying(128),
    schema_format character varying(128),
    schema_version character varying(128),
    root_id character(36) NOT NULL,
    root_tstamp timestamp without time zone,
    ref_root character varying(255),
    ref_tree character varying(1500),
    ref_parent character varying(255),
    useragent_family character varying(255) NOT NULL,
    useragent_major character varying(64),
    useragent_minor character varying(64),
    useragent_patch character varying(64),
    useragent_version character varying(255) NOT NULL,
    os_family character varying(255) NOT NULL,
    os_major character varying(64),
    os_minor character varying(64),
    os_patch character varying(64),
    os_patch_minor character varying(64),
    os_version character varying(255) NOT NULL,
    device_family character varying(255) NOT NULL
);


ALTER TABLE atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 OWNER TO sparta;

--
-- Name: com_snowplowanalytics_snowplow_web_page_1; Type: TABLE; Schema: atomic; Owner: sparta
--

CREATE TABLE atomic.com_snowplowanalytics_snowplow_web_page_1 (
    schema_vendor character varying(128),
    schema_name character varying(128),
    schema_format character varying(128),
    schema_version character varying(128),
    root_id character(36) NOT NULL,
    root_tstamp timestamp without time zone,
    ref_root character varying(255),
    ref_tree character varying(1500),
    ref_parent character varying(255),
    id character(36) NOT NULL
);


ALTER TABLE atomic.com_snowplowanalytics_snowplow_web_page_1 OWNER TO sparta;

--
-- Name: events; Type: TABLE; Schema: atomic; Owner: sparta
--

CREATE TABLE atomic.events (
    app_id character varying(255),
    platform character varying(255),
    etl_tstamp timestamp without time zone,
    collector_tstamp timestamp without time zone NOT NULL,
    dvce_created_tstamp timestamp without time zone,
    event character varying(128),
    event_id character(36) NOT NULL,
    txn_id integer,
    name_tracker character varying(128),
    v_tracker character varying(100),
    v_collector character varying(100) NOT NULL,
    v_etl character varying(100) NOT NULL,
    user_id character varying(255),
    user_ipaddress character varying(45),
    user_fingerprint character varying(50),
    domain_userid character varying(36),
    domain_sessionidx smallint,
    network_userid character varying(38),
    geo_country character(2),
    geo_region character(2),
    geo_city character varying(75),
    geo_zipcode character varying(15),
    geo_latitude double precision,
    geo_longitude double precision,
    geo_region_name character varying(100),
    ip_isp character varying(100),
    ip_organization character varying(100),
    ip_domain character varying(100),
    ip_netspeed character varying(100),
    page_url text,
    page_title character varying(2000),
    page_referrer text,
    page_urlscheme character varying(16),
    page_urlhost character varying(255),
    page_urlport integer,
    page_urlpath character varying(3000),
    page_urlquery character varying(6000),
    page_urlfragment character varying(3000),
    refr_urlscheme character varying(16),
    refr_urlhost character varying(255),
    refr_urlport integer,
    refr_urlpath character varying(6000),
    refr_urlquery character varying(6000),
    refr_urlfragment character varying(3000),
    refr_medium character varying(25),
    refr_source character varying(50),
    refr_term character varying(255),
    mkt_medium character varying(255),
    mkt_source character varying(255),
    mkt_term character varying(255),
    mkt_content character varying(500),
    mkt_campaign character varying(255),
    se_category character varying(1000),
    se_action character varying(1000),
    se_label character varying(1000),
    se_property character varying(1000),
    se_value double precision,
    tr_orderid character varying(255),
    tr_affiliation character varying(255),
    tr_total numeric(18,2),
    tr_tax numeric(18,2),
    tr_shipping numeric(18,2),
    tr_city character varying(255),
    tr_state character varying(255),
    tr_country character varying(255),
    ti_orderid character varying(255),
    ti_sku character varying(255),
    ti_name character varying(255),
    ti_category character varying(255),
    ti_price numeric(18,2),
    ti_quantity integer,
    pp_xoffset_min integer,
    pp_xoffset_max integer,
    pp_yoffset_min integer,
    pp_yoffset_max integer,
    useragent character varying(1000),
    br_name character varying(50),
    br_family character varying(50),
    br_version character varying(50),
    br_type character varying(50),
    br_renderengine character varying(50),
    br_lang character varying(255),
    br_features_pdf boolean,
    br_features_flash boolean,
    br_features_java boolean,
    br_features_director boolean,
    br_features_quicktime boolean,
    br_features_realplayer boolean,
    br_features_windowsmedia boolean,
    br_features_gears boolean,
    br_features_silverlight boolean,
    br_cookies boolean,
    br_colordepth character varying(12),
    br_viewwidth integer,
    br_viewheight integer,
    os_name character varying(50),
    os_family character varying(50),
    os_manufacturer character varying(50),
    os_timezone character varying(50),
    dvce_type character varying(50),
    dvce_ismobile boolean,
    dvce_screenwidth integer,
    dvce_screenheight integer,
    doc_charset character varying(128),
    doc_width integer,
    doc_height integer,
    tr_currency character(3),
    tr_total_base numeric(18,2),
    tr_tax_base numeric(18,2),
    tr_shipping_base numeric(18,2),
    ti_currency character(3),
    ti_price_base numeric(18,2),
    base_currency character(3),
    geo_timezone character varying(64),
    mkt_clickid character varying(128),
    mkt_network character varying(64),
    etl_tags character varying(500),
    dvce_sent_tstamp timestamp without time zone,
    refr_domain_userid character varying(36),
    refr_dvce_tstamp timestamp without time zone,
    domain_sessionid character(36),
    derived_tstamp timestamp without time zone,
    event_vendor character varying(1000),
    event_name character varying(1000),
    event_format character varying(128),
    event_version character varying(128),
    event_fingerprint character varying(128),
    true_tstamp timestamp without time zone
);


ALTER TABLE atomic.events OWNER TO sparta;

--
-- Name: org_w3_performance_timing_1; Type: TABLE; Schema: atomic; Owner: sparta
--

CREATE TABLE atomic.org_w3_performance_timing_1 (
    schema_vendor character varying(128),
    schema_name character varying(128),
    schema_format character varying(128),
    schema_version character varying(128),
    root_id character(36) NOT NULL,
    root_tstamp timestamp without time zone,
    ref_root character varying(255),
    ref_tree character varying(1500),
    ref_parent character varying(255),
    navigation_start bigint,
    redirect_start bigint,
    redirect_end bigint,
    fetch_start bigint,
    domain_lookup_start bigint,
    domain_lookup_end bigint,
    secure_connection_start bigint,
    connect_start bigint,
    connect_end bigint,
    request_start bigint,
    response_start bigint,
    response_end bigint,
    unload_event_start bigint,
    unload_event_end bigint,
    dom_loading bigint,
    dom_interactive bigint,
    dom_content_loaded_event_start bigint,
    dom_content_loaded_event_end bigint,
    dom_complete bigint,
    load_event_start bigint,
    load_event_end bigint,
    ms_first_paint bigint,
    chrome_first_paint bigint
);


ALTER TABLE atomic.org_w3_performance_timing_1 OWNER TO sparta;

--
-- Name: avg_visit_duration_by_day; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.avg_visit_duration_by_day AS
 SELECT date_trunc('day'::text, v.start_time) AS "Date",
    date_part('epoch'::text, avg(v.duration)) AS average_visit_duration_seconds
   FROM ( SELECT events.domain_userid,
            events.domain_sessionidx,
            min(events.collector_tstamp) AS start_time,
            max(events.collector_tstamp) AS finish_time,
            (max(events.collector_tstamp) - min(events.collector_tstamp)) AS duration
           FROM atomic.events
          WHERE (events.collector_tstamp > (('now'::text)::date - 31))
          GROUP BY events.domain_userid, events.domain_sessionidx) v
  GROUP BY (date_trunc('day'::text, v.start_time))
  ORDER BY (date_trunc('day'::text, v.start_time));


ALTER TABLE recipes_basic.avg_visit_duration_by_day OWNER TO sparta;

--
-- Name: behavior_frequency; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.behavior_frequency AS
 SELECT events.domain_sessionidx AS "Number of visits",
    count(DISTINCT events.domain_userid) AS "Frequency"
   FROM atomic.events
  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY events.domain_sessionidx
  ORDER BY events.domain_sessionidx;


ALTER TABLE recipes_basic.behavior_frequency OWNER TO sparta;

--
-- Name: behavior_recency; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.behavior_recency AS
 SELECT t."Days between visits",
    count(*) AS "Number of visits"
   FROM ( SELECT n.domain_userid,
            n.domain_sessionidx,
            ((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) AS days_between_visits,
                CASE
                    WHEN (n.domain_sessionidx = 1) THEN '0'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (1)::double precision) THEN '1'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (2)::double precision) THEN '2'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (3)::double precision) THEN '3'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (4)::double precision) THEN '4'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (5)::double precision) THEN '5'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (10)::double precision) THEN '6-10'::text
                    WHEN (((date_part('epoch'::text, (n.time_first_touch - p.time_first_touch)) / (3600)::double precision) / (24)::double precision) < (25)::double precision) THEN '11-25'::text
                    ELSE '25+'::text
                END AS "Days between visits"
           FROM (( SELECT events.domain_userid,
                    events.domain_sessionidx,
                    (events.domain_sessionidx - 1) AS previous_domain_sessionidx,
                    min(events.collector_tstamp) AS time_first_touch
                   FROM atomic.events
                  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
                  GROUP BY events.domain_userid, events.domain_sessionidx) n
             LEFT JOIN ( SELECT events.domain_userid,
                    events.domain_sessionidx,
                    min(events.collector_tstamp) AS time_first_touch
                   FROM atomic.events
                  GROUP BY events.domain_userid, events.domain_sessionidx) p ON (((n.previous_domain_sessionidx = p.domain_sessionidx) AND ((n.domain_userid)::text = (p.domain_userid)::text))))) t
  GROUP BY t."Days between visits"
  ORDER BY t."Days between visits";


ALTER TABLE recipes_basic.behavior_recency OWNER TO sparta;

--
-- Name: bounce_rate_by_day; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.bounce_rate_by_day AS
 SELECT date_trunc('day'::text, v.time_first_touch) AS "Date",
    ((sum(v.bounces))::real / (count(*))::double precision) AS "Bounce rate"
   FROM ( SELECT events.domain_userid,
            events.domain_sessionidx,
            min(events.collector_tstamp) AS time_first_touch,
            count(*) AS number_of_events,
                CASE
                    WHEN (count(*) = 1) THEN 1
                    ELSE 0
                END AS bounces
           FROM atomic.events
          WHERE (events.collector_tstamp > (('now'::text)::date - 31))
          GROUP BY events.domain_userid, events.domain_sessionidx) v
  GROUP BY (date_trunc('day'::text, v.time_first_touch))
  ORDER BY (date_trunc('day'::text, v.time_first_touch));


ALTER TABLE recipes_basic.bounce_rate_by_day OWNER TO sparta;

--
-- Name: engagement_pageviews_per_visit; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.engagement_pageviews_per_visit AS
 SELECT t."Page views per visit",
    count(*) AS "Number of visits"
   FROM ( SELECT events.domain_userid,
            events.domain_sessionidx,
            count(*) AS "Page views per visit"
           FROM atomic.events
          WHERE ((events.collector_tstamp > (('now'::text)::date - 31)) AND ((events.event)::text = 'page_view'::text))
          GROUP BY events.domain_userid, events.domain_sessionidx) t
  GROUP BY t."Page views per visit"
  ORDER BY t."Page views per visit";


ALTER TABLE recipes_basic.engagement_pageviews_per_visit OWNER TO sparta;

--
-- Name: engagement_visit_duration; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.engagement_visit_duration AS
 SELECT t."Visit duration",
    count(*) AS "Number of visits"
   FROM ( SELECT events.domain_userid,
            events.domain_sessionidx,
                CASE
                    WHEN (date_part('epoch'::text, (max(events.dvce_created_tstamp) - min(events.dvce_created_tstamp))) > (1800)::double precision) THEN 'g. 1801+ seconds'::text
                    WHEN (date_part('epoch'::text, (max(events.dvce_created_tstamp) - min(events.dvce_created_tstamp))) > (600)::double precision) THEN 'f. 601-1800 seconds'::text
                    WHEN (date_part('epoch'::text, (max(events.dvce_created_tstamp) - min(events.dvce_created_tstamp))) > (180)::double precision) THEN 'e. 181-600 seconds'::text
                    WHEN (date_part('epoch'::text, (max(events.dvce_created_tstamp) - min(events.dvce_created_tstamp))) > (60)::double precision) THEN 'd. 61 - 180 seconds'::text
                    WHEN (date_part('epoch'::text, (max(events.dvce_created_tstamp) - min(events.dvce_created_tstamp))) > (30)::double precision) THEN 'c. 31-60 seconds'::text
                    WHEN (date_part('epoch'::text, (max(events.dvce_created_tstamp) - min(events.dvce_created_tstamp))) > (10)::double precision) THEN 'b. 11-30 seconds'::text
                    ELSE 'a. 0-10 seconds'::text
                END AS "Visit duration"
           FROM atomic.events
          WHERE (events.collector_tstamp > (('now'::text)::date - 31))
          GROUP BY events.domain_userid, events.domain_sessionidx) t
  GROUP BY t."Visit duration"
  ORDER BY t."Visit duration";


ALTER TABLE recipes_basic.engagement_visit_duration OWNER TO sparta;

--
-- Name: events_by_day; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.events_by_day AS
 SELECT date_trunc('day'::text, events.collector_tstamp) AS "Date",
    events.event,
    count(*) AS "Number"
   FROM atomic.events
  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY (date_trunc('day'::text, events.collector_tstamp)), events.event
  ORDER BY (date_trunc('day'::text, events.collector_tstamp)), events.event;


ALTER TABLE recipes_basic.events_by_day OWNER TO sparta;

--
-- Name: fraction_new_visits_by_day; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.fraction_new_visits_by_day AS
 SELECT date_trunc('day'::text, v.time_first_touch) AS "Date",
    ((sum(v.first_visit))::real / (count(*))::double precision) AS fraction_of_visits_that_are_new
   FROM ( SELECT min(events.collector_tstamp) AS time_first_touch,
            events.domain_userid,
            events.domain_sessionidx,
                CASE
                    WHEN (events.domain_sessionidx = 1) THEN 1
                    ELSE 0
                END AS first_visit
           FROM atomic.events
          WHERE (events.collector_tstamp > (('now'::text)::date - 31))
          GROUP BY events.domain_userid, events.domain_sessionidx) v
  GROUP BY (date_trunc('day'::text, v.time_first_touch))
  ORDER BY (date_trunc('day'::text, v.time_first_touch));


ALTER TABLE recipes_basic.fraction_new_visits_by_day OWNER TO sparta;

--
-- Name: new_vs_returning; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.new_vs_returning AS
 SELECT date_trunc('day'::text, v.time_first_touch) AS "Date",
    ((sum(v.first_visit))::real / (count(*))::double precision) AS fraction_of_visits_that_are_new
   FROM ( SELECT min(events.collector_tstamp) AS time_first_touch,
            events.domain_userid,
            events.domain_sessionidx,
                CASE
                    WHEN (events.domain_sessionidx = 1) THEN 1
                    ELSE 0
                END AS first_visit
           FROM atomic.events
          WHERE (events.collector_tstamp > (('now'::text)::date - 31))
          GROUP BY events.domain_userid, events.domain_sessionidx) v
  GROUP BY (date_trunc('day'::text, v.time_first_touch))
  ORDER BY (date_trunc('day'::text, v.time_first_touch));


ALTER TABLE recipes_basic.new_vs_returning OWNER TO sparta;

--
-- Name: pages_per_visit; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.pages_per_visit AS
 SELECT page_view_per_visit.pages_visited,
    count(*) AS frequency
   FROM ( SELECT (((events.domain_userid)::text || '-'::text) || events.domain_sessionidx) AS session,
            count(*) AS pages_visited
           FROM atomic.events
          WHERE (((events.event)::text = 'page_view'::text) AND (events.collector_tstamp > (('now'::text)::date - 31)))
          GROUP BY (((events.domain_userid)::text || '-'::text) || events.domain_sessionidx)) page_view_per_visit
  GROUP BY page_view_per_visit.pages_visited
  ORDER BY page_view_per_visit.pages_visited;


ALTER TABLE recipes_basic.pages_per_visit OWNER TO sparta;

--
-- Name: pageviews_by_day; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.pageviews_by_day AS
 SELECT date_trunc('day'::text, events.collector_tstamp) AS "Date",
    count(*) AS page_views
   FROM atomic.events
  WHERE ((events.collector_tstamp > (('now'::text)::date - 31)) AND ((events.event)::text = 'page_view'::text))
  GROUP BY (date_trunc('day'::text, events.collector_tstamp))
  ORDER BY (date_trunc('day'::text, events.collector_tstamp));


ALTER TABLE recipes_basic.pageviews_by_day OWNER TO sparta;

--
-- Name: technology_browser; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.technology_browser AS
 SELECT a.useragent_family AS "Browser",
    count(DISTINCT ((b.domain_userid)::text || b.domain_sessionidx)) AS "Visits"
   FROM (atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 a
     JOIN atomic.events b ON ((a.root_id = b.event_id)))
  WHERE (b.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY a.useragent_family
  ORDER BY (count(DISTINCT ((b.domain_userid)::text || b.domain_sessionidx))) DESC;


ALTER TABLE recipes_basic.technology_browser OWNER TO sparta;

--
-- Name: technology_mobile; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.technology_mobile AS
 SELECT
        CASE
            WHEN (events.dvce_ismobile = true) THEN 'mobile'::text
            ELSE 'desktop'::text
        END AS "Device type",
    count(DISTINCT ((events.domain_userid)::text || events.domain_sessionidx)) AS "Visits"
   FROM atomic.events
  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY
        CASE
            WHEN (events.dvce_ismobile = true) THEN 'mobile'::text
            ELSE 'desktop'::text
        END;


ALTER TABLE recipes_basic.technology_mobile OWNER TO sparta;

--
-- Name: technology_os; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.technology_os AS
 SELECT a.os_family AS "OS",
    count(DISTINCT ((b.domain_userid)::text || b.domain_sessionidx)) AS "Visits"
   FROM (atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 a
     JOIN atomic.events b ON ((a.root_id = b.event_id)))
  WHERE (b.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY a.os_family
  ORDER BY (count(DISTINCT ((b.domain_userid)::text || b.domain_sessionidx))) DESC;


ALTER TABLE recipes_basic.technology_os OWNER TO sparta;

--
-- Name: uniques_and_visits_by_day; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.uniques_and_visits_by_day AS
 SELECT date_trunc('day'::text, events.collector_tstamp) AS "Date",
    count(DISTINCT events.domain_userid) AS "Uniques",
    count(DISTINCT (((events.domain_userid)::text || '-'::text) || events.domain_sessionidx)) AS "Visits"
   FROM atomic.events
  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY (date_trunc('day'::text, events.collector_tstamp))
  ORDER BY (date_trunc('day'::text, events.collector_tstamp));


ALTER TABLE recipes_basic.uniques_and_visits_by_day OWNER TO sparta;

--
-- Name: visitors_by_language; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.visitors_by_language AS
 SELECT events.br_lang,
    count(DISTINCT events.domain_userid) AS visitors
   FROM atomic.events
  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY events.br_lang
  ORDER BY (count(DISTINCT events.domain_userid)) DESC;


ALTER TABLE recipes_basic.visitors_by_language OWNER TO sparta;

--
-- Name: visits_by_country; Type: VIEW; Schema: recipes_basic; Owner: sparta
--

CREATE VIEW recipes_basic.visits_by_country AS
 SELECT events.geo_country AS "Country",
    count(DISTINCT events.domain_userid) AS "Visitors"
   FROM atomic.events
  WHERE (events.collector_tstamp > (('now'::text)::date - 31))
  GROUP BY events.geo_country
  ORDER BY (count(DISTINCT events.domain_userid)) DESC;


ALTER TABLE recipes_basic.visits_by_country OWNER TO sparta;

--
-- Name: web_events; Type: TABLE; Schema: scratch; Owner: sparta
--

CREATE TABLE scratch.web_events (
    user_id character varying(255),
    domain_userid character varying(36),
    network_userid character varying(38),
    domain_sessionid character(36),
    domain_sessionidx smallint,
    page_view_id character(36),
    page_title character varying(2000),
    page_urlscheme character varying(16),
    page_urlhost character varying(255),
    page_urlport integer,
    page_urlpath character varying(3000),
    page_urlquery character varying(6000),
    page_urlfragment character varying(3000),
    refr_urlscheme character varying(16),
    refr_urlhost character varying(255),
    refr_urlport integer,
    refr_urlpath character varying(6000),
    refr_urlquery character varying(6000),
    refr_urlfragment character varying(3000),
    refr_medium character varying(25),
    refr_source character varying(50),
    refr_term character varying(255),
    mkt_medium character varying(255),
    mkt_source character varying(255),
    mkt_term character varying(255),
    mkt_content character varying(500),
    mkt_campaign character varying(255),
    mkt_clickid character varying(128),
    mkt_network character varying(64),
    geo_country character(2),
    geo_region character(2),
    geo_region_name character varying(100),
    geo_city character varying(75),
    geo_zipcode character varying(15),
    geo_latitude double precision,
    geo_longitude double precision,
    geo_timezone character varying(64),
    user_ipaddress character varying(45),
    ip_isp character varying(100),
    ip_organization character varying(100),
    ip_domain character varying(100),
    ip_netspeed character varying(100),
    app_id character varying(255),
    useragent character varying(1000),
    br_name character varying(50),
    br_family character varying(50),
    br_version character varying(50),
    br_type character varying(50),
    br_renderengine character varying(50),
    br_lang character varying(255),
    dvce_type character varying(50),
    dvce_ismobile boolean,
    os_name character varying(50),
    os_family character varying(50),
    os_manufacturer character varying(50),
    os_timezone character varying(50),
    name_tracker character varying(128),
    dvce_created_tstamp timestamp without time zone,
    n bigint
);


ALTER TABLE scratch.web_events OWNER TO sparta;

--
-- Name: web_events_scroll_depth; Type: TABLE; Schema: scratch; Owner: sparta
--

CREATE TABLE scratch.web_events_scroll_depth (
    page_view_id character(36),
    doc_width integer,
    doc_height integer,
    br_viewwidth integer,
    br_viewheight integer,
    hmin integer,
    hmax integer,
    vmin integer,
    vmax integer,
    relative_hmin double precision,
    relative_hmax double precision,
    relative_vmin double precision,
    relative_vmax double precision
);


ALTER TABLE scratch.web_events_scroll_depth OWNER TO sparta;

--
-- Name: web_events_time; Type: TABLE; Schema: scratch; Owner: sparta
--

CREATE TABLE scratch.web_events_time (
    page_view_id character(36),
    min_tstamp timestamp without time zone,
    max_tstamp timestamp without time zone,
    pv_count bigint,
    pp_count bigint,
    time_engaged_in_s bigint
);


ALTER TABLE scratch.web_events_time OWNER TO sparta;

--
-- Name: web_page_context; Type: TABLE; Schema: scratch; Owner: sparta
--

CREATE TABLE scratch.web_page_context (
    root_id character(36),
    page_view_id character(36)
);


ALTER TABLE scratch.web_page_context OWNER TO sparta;

--
-- Name: web_timing_context; Type: TABLE; Schema: scratch; Owner: sparta
--

CREATE TABLE scratch.web_timing_context (
    page_view_id character(36),
    redirect_time_in_ms bigint,
    unload_time_in_ms bigint,
    app_cache_time_in_ms bigint,
    dns_time_in_ms bigint,
    tcp_time_in_ms bigint,
    request_time_in_ms bigint,
    response_time_in_ms bigint,
    processing_time_in_ms bigint,
    dom_loading_to_interactive_time_in_ms bigint,
    dom_interactive_to_complete_time_in_ms bigint,
    onload_time_in_ms bigint,
    total_time_in_ms bigint
);


ALTER TABLE scratch.web_timing_context OWNER TO sparta;

--
-- Name: web_ua_parser_context; Type: TABLE; Schema: scratch; Owner: sparta
--

CREATE TABLE scratch.web_ua_parser_context (
    page_view_id character(36),
    useragent_family character varying(255),
    useragent_major character varying(64),
    useragent_minor character varying(64),
    useragent_patch character varying(64),
    useragent_version character varying(255),
    os_family character varying(255),
    os_major character varying(64),
    os_minor character varying(64),
    os_patch character varying(64),
    os_patch_minor character varying(64),
    os_version character varying(255),
    device_family character varying(255)
);


ALTER TABLE scratch.web_ua_parser_context OWNER TO sparta;

--
-- Name: debug; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.debug (
    debug_id character varying NOT NULL,
    workflow_original character varying NOT NULL,
    workflow_debug character varying,
    result character varying NOT NULL
);


ALTER TABLE sparta.debug OWNER TO sparta;

--
-- Name: debug_step_data; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.debug_step_data (
    id character varying NOT NULL,
    workflow_id character varying NOT NULL,
    step character varying NOT NULL,
    num_events integer NOT NULL,
    schema character varying,
    data character varying
);


ALTER TABLE sparta.debug_step_data OWNER TO sparta;

--
-- Name: global_parameters; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.global_parameters (
    name character varying NOT NULL,
    value character varying
);


ALTER TABLE sparta.global_parameters OWNER TO sparta;

--
-- Name: groups; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.groups (
    group_id character varying NOT NULL,
    name character varying NOT NULL
);


ALTER TABLE sparta.groups OWNER TO sparta;

--
-- Name: lookup_pageview; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.lookup_pageview (
    pageview_id character(36),
    time_spent_seconds bigint,
    max_pp_yoffset_max integer,
    max_doc_height integer,
    scroll_depth_percent double precision
);


ALTER TABLE sparta.lookup_pageview OWNER TO sparta;

--
-- Name: parameter_list; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.parameter_list (
    name character varying NOT NULL,
    id character varying NOT NULL,
    parameters character varying NOT NULL,
    tags character varying NOT NULL,
    description character varying,
    creation_date timestamp without time zone,
    last_update_date timestamp without time zone,
    parent character varying,
    "versionSparta" character varying
);


ALTER TABLE sparta.parameter_list OWNER TO sparta;

--
-- Name: template; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.template (
    id character varying NOT NULL,
    template_type character varying NOT NULL,
    name character varying NOT NULL,
    description character varying,
    class_name character varying NOT NULL,
    class_pretty_name character varying NOT NULL,
    configuration character varying NOT NULL,
    creation_date timestamp without time zone,
    last_update_date timestamp without time zone,
    supported_engines character varying NOT NULL,
    execution_engine character varying,
    version_sparta character varying
);


ALTER TABLE sparta.template OWNER TO sparta;

--
-- Name: workflow; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.workflow (
    workflow_id character varying NOT NULL,
    name character varying NOT NULL,
    description character varying NOT NULL,
    settings character varying NOT NULL,
    pipeline_graph character varying NOT NULL,
    execution_engine character varying NOT NULL,
    ui_settings character varying,
    creation_date timestamp without time zone,
    last_update_date timestamp without time zone,
    version bigint NOT NULL,
    "group" character varying NOT NULL,
    tags character varying,
    debug_mode boolean,
    version_sparta character varying,
    parameters_used_in_execution character varying,
    execution_id character varying,
    group_id character varying
);


ALTER TABLE sparta.workflow OWNER TO sparta;

--
-- Name: workflow_execution; Type: TABLE; Schema: sparta; Owner: sparta
--

CREATE TABLE sparta.workflow_execution (
    workflow_execution_id character varying NOT NULL,
    execution_status character varying NOT NULL,
    generic_data_execution character varying NOT NULL,
    spark_submit_execution character varying NOT NULL,
    spark_execution character varying NOT NULL,
    spark_dispatcher_execution character varying NOT NULL,
    marathon_execution character varying NOT NULL,
    local_execution character varying NOT NULL,
    archived boolean
);


ALTER TABLE sparta.workflow_execution OWNER TO sparta;

--
-- Name: page_views_tmp; Type: TABLE; Schema: web; Owner: sparta
--

CREATE TABLE web.page_views_tmp (
    user_custom_id character varying(255),
    user_snowplow_domain_id character varying(36),
    user_snowplow_crossdomain_id character varying(38),
    session_id character(36),
    session_index smallint,
    page_view_id character(36),
    page_view_index bigint,
    page_view_in_session_index bigint,
    page_view_start timestamp without time zone,
    page_view_end timestamp without time zone,
    page_view_time text,
    page_view_minute text,
    page_view_hour text,
    page_view_date text,
    page_view_week text,
    page_view_month text,
    page_view_quarter text,
    page_view_year integer,
    page_view_start_local timestamp without time zone,
    page_view_end_local timestamp without time zone,
    page_view_local_time text,
    page_view_local_time_of_day text,
    page_view_local_hour_of_day integer,
    page_view_local_day_of_week text,
    page_view_local_day_of_week_index integer,
    time_engaged_in_s bigint,
    time_engaged_in_s_tier text,
    horizontal_pixels_scrolled integer,
    vertical_pixels_scrolled integer,
    horizontal_percentage_scrolled double precision,
    vertical_percentage_scrolled double precision,
    vertical_percentage_scrolled_tier text,
    user_bounced boolean,
    user_engaged boolean,
    page_url text,
    page_url_scheme character varying(16),
    page_url_host character varying(255),
    page_url_port integer,
    page_url_path character varying(3000),
    page_url_query character varying(6000),
    page_url_fragment character varying(3000),
    page_title character varying(2000),
    page_width integer,
    page_height integer,
    referer_url text,
    referer_url_scheme character varying(16),
    referer_url_host character varying(255),
    referer_url_port integer,
    referer_url_path character varying(6000),
    referer_url_query character varying(6000),
    referer_url_fragment character varying(3000),
    referer_medium character varying,
    referer_source character varying(50),
    referer_term character varying(255),
    marketing_medium character varying(255),
    marketing_source character varying(255),
    marketing_term character varying(255),
    marketing_content character varying(500),
    marketing_campaign character varying(255),
    marketing_click_id character varying(128),
    marketing_network character varying(64),
    geo_country character(2),
    geo_region character(2),
    geo_region_name character varying(100),
    geo_city character varying(75),
    geo_zipcode character varying(15),
    geo_latitude double precision,
    geo_longitude double precision,
    geo_timezone character varying(64),
    ip_address character varying(45),
    ip_isp character varying(100),
    ip_organization character varying(100),
    ip_domain character varying(100),
    ip_net_speed character varying(100),
    app_id character varying(255),
    browser character varying(255),
    browser_name character varying(255),
    browser_major_version character varying(64),
    browser_minor_version character varying(64),
    browser_build_version character varying(64),
    browser_engine character varying(50),
    browser_window_width integer,
    browser_window_height integer,
    browser_language character varying(255),
    os character varying(255),
    os_name character varying(255),
    os_major_version character varying(64),
    os_minor_version character varying(64),
    os_build_version character varying(64),
    os_manufacturer character varying(50),
    os_timezone character varying(50),
    device character varying(255),
    device_type character varying(50),
    device_is_mobile boolean,
    redirect_time_in_ms bigint,
    unload_time_in_ms bigint,
    app_cache_time_in_ms bigint,
    dns_time_in_ms bigint,
    tcp_time_in_ms bigint,
    request_time_in_ms bigint,
    response_time_in_ms bigint,
    processing_time_in_ms bigint,
    dom_loading_to_interactive_time_in_ms bigint,
    dom_interactive_to_complete_time_in_ms bigint,
    onload_time_in_ms bigint,
    total_time_in_ms bigint
);


ALTER TABLE web.page_views_tmp OWNER TO sparta;

--
-- Name: sessions_tmp; Type: TABLE; Schema: web; Owner: sparta
--

CREATE TABLE web.sessions_tmp (
    user_custom_id character varying(255),
    user_snowplow_domain_id character varying(36),
    user_snowplow_crossdomain_id character varying(38),
    session_id character(36),
    session_index smallint,
    session_start timestamp without time zone,
    session_end timestamp without time zone,
    session_time text,
    session_minute text,
    session_hour text,
    session_date text,
    session_week text,
    session_month text,
    session_quarter text,
    session_year integer,
    session_start_local timestamp without time zone,
    session_end_local timestamp without time zone,
    session_local_time text,
    session_local_time_of_day text,
    session_local_hour_of_day integer,
    session_local_day_of_week text,
    session_local_day_of_week_index integer,
    page_views bigint,
    bounced_page_views bigint,
    engaged_page_views bigint,
    time_engaged_in_s numeric,
    time_engaged_in_s_tier text,
    user_bounced boolean,
    user_engaged boolean,
    first_page_url text,
    first_page_url_scheme character varying(16),
    first_page_url_host character varying(255),
    first_page_url_port integer,
    first_page_url_path character varying(3000),
    first_page_url_query character varying(6000),
    first_page_url_fragment character varying(3000),
    first_page_title character varying(2000),
    referer_url text,
    referer_url_scheme character varying(16),
    referer_url_host character varying(255),
    referer_url_port integer,
    referer_url_path character varying(6000),
    referer_url_query character varying(6000),
    referer_url_fragment character varying(3000),
    referer_medium character varying,
    referer_source character varying(50),
    referer_term character varying(255),
    marketing_medium character varying(255),
    marketing_source character varying(255),
    marketing_term character varying(255),
    marketing_content character varying(500),
    marketing_campaign character varying(255),
    marketing_click_id character varying(128),
    marketing_network character varying(64),
    geo_country character(2),
    geo_region character(2),
    geo_region_name character varying(100),
    geo_city character varying(75),
    geo_zipcode character varying(15),
    geo_latitude double precision,
    geo_longitude double precision,
    geo_timezone character varying(64),
    ip_address character varying(45),
    ip_isp character varying(100),
    ip_organization character varying(100),
    ip_domain character varying(100),
    ip_net_speed character varying(100),
    app_id character varying(255),
    browser character varying(255),
    browser_name character varying(255),
    browser_major_version character varying(64),
    browser_minor_version character varying(64),
    browser_build_version character varying(64),
    browser_engine character varying(50),
    browser_language character varying(255),
    os character varying(255),
    os_name character varying(255),
    os_major_version character varying(64),
    os_minor_version character varying(64),
    os_build_version character varying(64),
    os_manufacturer character varying(50),
    os_timezone character varying(50),
    device character varying(255),
    device_type character varying(50),
    device_is_mobile boolean
);


ALTER TABLE web.sessions_tmp OWNER TO sparta;

--
-- Name: users_tmp; Type: TABLE; Schema: web; Owner: sparta
--

CREATE TABLE web.users_tmp (
    user_custom_id character varying(255),
    user_snowplow_domain_id character varying(36),
    user_snowplow_crossdomain_id character varying(38),
    first_session_start timestamp without time zone,
    first_session_time text,
    first_session_minute text,
    first_session_hour text,
    first_session_date text,
    first_session_week text,
    first_session_month text,
    first_session_quarter text,
    first_session_year integer,
    first_session_start_local timestamp without time zone,
    first_session_local_time text,
    first_session_local_time_of_day text,
    first_session_local_hour_of_day integer,
    first_session_local_day_of_week text,
    first_session_local_day_of_week_index integer,
    last_session_end timestamp without time zone,
    page_views numeric,
    sessions bigint,
    time_engaged_in_s numeric,
    first_page_url text,
    first_page_url_scheme character varying(16),
    first_page_url_host character varying(255),
    first_page_url_port integer,
    first_page_url_path character varying(3000),
    first_page_url_query character varying(6000),
    first_page_url_fragment character varying(3000),
    first_page_title character varying(2000),
    referer_url text,
    referer_url_scheme character varying(16),
    referer_url_host character varying(255),
    referer_url_port integer,
    referer_url_path character varying(6000),
    referer_url_query character varying(6000),
    referer_url_fragment character varying(3000),
    referer_medium character varying,
    referer_source character varying(50),
    referer_term character varying(255),
    marketing_medium character varying(255),
    marketing_source character varying(255),
    marketing_term character varying(255),
    marketing_content character varying(500),
    marketing_campaign character varying(255),
    marketing_click_id character varying(128),
    marketing_network character varying(64),
    app_id character varying(255)
);


ALTER TABLE web.users_tmp OWNER TO sparta;

--
-- Data for Name: com_snowplowanalytics_snowplow_ua_parser_context_1; Type: TABLE DATA; Schema: atomic; Owner: sparta
--

INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'd062cae8-90f8-43da-bad3-57e562f40290', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'f1c4290e-5745-4c61-b2c2-bba0491aede4', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '94bc5a20-b040-4ffa-b41d-d16b3e1a02fe', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '5278c8fb-50ea-4361-9a34-bb3e53141462', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '9501e701-85ef-454d-92e2-f496169812de', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '274d602e-1059-472b-a75a-e5c4c1c8d9bc', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'c54ef0d0-9625-4465-a7ba-a79e8c74c289', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '43595997-ab6b-46b7-8939-7afd9f782e38', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '9362e6f7-b4cc-40fb-a960-0c43f228c334', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '5a02d6ed-81ca-42de-ab58-c1caf8d603d2', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '77590000-fc10-4831-8b4f-b573bbc6e492', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'f22e6f71-4b7e-42b4-9e8a-305a68abf0a7', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '18456522-fc42-4660-b1cd-036be27963ae', NULL, NULL, NULL, NULL, 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '02dadea0-b68c-40c4-bac9-7c06bcca6c4e', NULL, NULL, NULL, NULL, 'Chrome', '70', '0', NULL, 'Chrome 70.0.3538', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'f9d66465-0dc4-4926-8c59-71b223e319b8', NULL, NULL, NULL, NULL, 'Chrome', '70', '0', NULL, 'Chrome 70.0.3538', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'ee8ad6b2-d8f2-402d-ad7e-cc913c44da30', NULL, NULL, NULL, NULL, 'Chrome', '70', '0', NULL, 'Chrome 70.0.3538', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '9b47ccb3-e194-4a42-b25a-cc1839cabbb6', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', NULL, 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '7848b545-a78c-44e0-96e4-ccd0b22ab28c', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', NULL, 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'dd006f30-0334-4e17-bb9e-0556ccbdf65c', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', NULL, 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '08a904b9-657c-4ade-9490-8981521d44d4', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '2919f98c-b0b1-40bb-9d63-b0d6a5ff77be', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '8f5a6cbd-20b0-41db-94f8-8a6f5a503c7f', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'd697bae4-1f1b-4a12-b004-f74326e3e981', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '37380818-b3b2-40f3-933e-9f66f69947c5', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'bcc34edc-45df-4be9-b521-6e3072b93000', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '9a264895-4f98-41a7-abd9-4f46f9d481d4', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '050ecace-dd6d-40fd-9631-da4b7f03dcd4', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'cb67129d-dd7d-4d98-9c66-331090368aac', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, 'a7fa88de-8f75-4167-80cc-21ad23d5822a', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '4bf1706c-ca16-4f63-8324-7f9dfdd4bc21', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '9f4f2f9b-41e3-4bb5-b708-ab5ad43c3766', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '9ff02c3d-9d23-486c-bd4b-505df953cfdc', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '56050fa2-33ff-4c8b-97aa-7f40c67a50d8', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');
INSERT INTO atomic.com_snowplowanalytics_snowplow_ua_parser_context_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES (NULL, NULL, NULL, NULL, '0fb2536a-e85b-48ee-8114-e2a88718cb20', NULL, NULL, NULL, NULL, 'Chrome', '69', '0', '3497', 'Chrome 69.0.3497', 'Linux', NULL, NULL, NULL, NULL, 'Linux', 'Other');


--
-- Data for Name: com_snowplowanalytics_snowplow_web_page_1; Type: TABLE DATA; Schema: atomic; Owner: sparta
--

INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'd062cae8-90f8-43da-bad3-57e562f40290', NULL, NULL, NULL, NULL, 'ecb0f20b-0f08-4ca5-9d61-14f15c26ba61');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'f1c4290e-5745-4c61-b2c2-bba0491aede4', NULL, NULL, NULL, NULL, '32c1cd2e-ba56-4579-8cd0-74ded027f1c7');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '94bc5a20-b040-4ffa-b41d-d16b3e1a02fe', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '5278c8fb-50ea-4361-9a34-bb3e53141462', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '9501e701-85ef-454d-92e2-f496169812de', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '274d602e-1059-472b-a75a-e5c4c1c8d9bc', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'c54ef0d0-9625-4465-a7ba-a79e8c74c289', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '43595997-ab6b-46b7-8939-7afd9f782e38', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '9362e6f7-b4cc-40fb-a960-0c43f228c334', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '5a02d6ed-81ca-42de-ab58-c1caf8d603d2', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '77590000-fc10-4831-8b4f-b573bbc6e492', NULL, NULL, NULL, NULL, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'f22e6f71-4b7e-42b4-9e8a-305a68abf0a7', NULL, NULL, NULL, NULL, '55183b93-0978-4731-b681-1cc0350cc951');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '18456522-fc42-4660-b1cd-036be27963ae', NULL, NULL, NULL, NULL, '55183b93-0978-4731-b681-1cc0350cc951');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '08a904b9-657c-4ade-9490-8981521d44d4', NULL, NULL, NULL, NULL, 'a2a192cb-8efa-4343-b235-28db59b29396');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '2919f98c-b0b1-40bb-9d63-b0d6a5ff77be', NULL, NULL, NULL, NULL, 'a2a192cb-8efa-4343-b235-28db59b29396');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '8f5a6cbd-20b0-41db-94f8-8a6f5a503c7f', NULL, NULL, NULL, NULL, 'a2a192cb-8efa-4343-b235-28db59b29396');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'd697bae4-1f1b-4a12-b004-f74326e3e981', NULL, NULL, NULL, NULL, 'b0b2d413-c3c5-4c5a-b405-53f981bfa872');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '37380818-b3b2-40f3-933e-9f66f69947c5', NULL, NULL, NULL, NULL, '34a038b4-5c67-4452-ba6e-84cbac0830a2');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'bcc34edc-45df-4be9-b521-6e3072b93000', NULL, NULL, NULL, NULL, '889a9d9e-b680-40dc-ad33-d1a399317b08');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '9a264895-4f98-41a7-abd9-4f46f9d481d4', NULL, NULL, NULL, NULL, 'd70f7a4b-4bb6-4ae1-a5d0-35da9ac1fc68');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '050ecace-dd6d-40fd-9631-da4b7f03dcd4', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'cb67129d-dd7d-4d98-9c66-331090368aac', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, 'a7fa88de-8f75-4167-80cc-21ad23d5822a', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '4bf1706c-ca16-4f63-8324-7f9dfdd4bc21', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '9f4f2f9b-41e3-4bb5-b708-ab5ad43c3766', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '9ff02c3d-9d23-486c-bd4b-505df953cfdc', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');
INSERT INTO atomic.com_snowplowanalytics_snowplow_web_page_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, id) VALUES (NULL, NULL, NULL, NULL, '56050fa2-33ff-4c8b-97aa-7f40c67a50d8', NULL, NULL, NULL, NULL, '6ef016df-ff99-41bd-9517-3f705122934f');


--
-- Data for Name: events; Type: TABLE DATA; Schema: atomic; Owner: sparta
--

INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:26.782', '2018-10-31 14:00:26.779', '2018-10-31 14:00:26.724', 'page_ping', 'd062cae8-90f8-43da-bad3-57e562f40290', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:26.726', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:26.777', 'com.snowplowanalytics.snowplow', 'page_ping', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:28.044', '2018-10-31 14:00:28.04', '2018-10-31 14:00:28.026', 'page_view', 'f1c4290e-5745-4c61-b2c2-bba0491aede4', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:28.028', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:28.038', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:29.905', '2018-10-31 14:00:29.901', '2018-10-31 14:00:29.894', 'page_view', '94bc5a20-b040-4ffa-b41d-d16b3e1a02fe', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:29.896', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:29.899', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:31.46', '2018-10-31 14:00:31.457', '2018-10-31 14:00:31.372', 'struct', '5278c8fb-50ea-4361-9a34-bb3e53141462', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mixes', 'Play', 'MRC/fabric-0503-mix', NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:31.373', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:31.456', 'com.google.analytics', 'event', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:33.446', '2018-10-31 14:00:33.444', '2018-10-31 14:00:33.437', 'transaction', '9501e701-85ef-454d-92e2-f496169812de', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'order-123', NULL, 8000.00, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, 'JPY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:33.439', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:33.442', 'com.snowplowanalytics.snowplow', 'transaction', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:33.461', '2018-10-31 14:00:33.458', '2018-10-31 14:00:33.44', 'transaction_item', '274d602e-1059-472b-a75a-e5c4c1c8d9bc', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'order-123', '1002', 'Red shoes', NULL, 4000.00, 1, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, 'JPY', NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:33.451', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:33.447', 'com.snowplowanalytics.snowplow', 'transaction_item', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:34.689', '2018-10-31 14:00:34.686', '2018-10-31 14:00:34.678', 'unstruct', 'c54ef0d0-9625-4465-a7ba-a79e8c74c289', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:34.679', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:34.685', 'com.snowplowanalytics.snowplow', 'change_form', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:36.196', '2018-10-31 14:00:36.194', '2018-10-31 14:00:36.183', 'unstruct', '43595997-ab6b-46b7-8939-7afd9f782e38', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:36.185', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:36.192', 'com.snowplowanalytics.snowplow', 'change_form', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:39.624', '2018-10-31 14:00:39.621', '2018-10-31 14:00:39.613', 'unstruct', '9362e6f7-b4cc-40fb-a960-0c43f228c334', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:39.615', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:39.619', 'com.snowplowanalytics.snowplow', 'change_form', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:39.729', '2018-10-31 14:00:39.727', '2018-10-31 14:00:39.719', 'unstruct', '5a02d6ed-81ca-42de-ab58-c1caf8d603d2', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:39.722', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:39.724', 'com.snowplowanalytics.snowplow', 'submit_form', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:39.905', '2018-10-31 14:00:39.903', '2018-10-31 14:00:39.898', 'page_ping', '77590000-fc10-4831-8b4f-b573bbc6e492', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:39.898', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:39.903', 'com.snowplowanalytics.snowplow', 'page_ping', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:44.029', '2018-10-31 14:00:44.026', '2018-10-31 14:00:44.019', 'page_view', 'f22e6f71-4b7e-42b4-9e8a-305a68abf0a7', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:44.021', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:44.024', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:54.032', '2018-10-31 14:00:54.029', '2018-10-31 14:00:54.024', 'page_ping', '18456522-fc42-4660-b1cd-036be27963ae', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '2536032505', '05508805-07cb-480c-93c4-f8ed074fb1cf', 13, '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', false, true, false, false, false, false, false, false, false, true, '24', 1920, 936, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 936, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:54.025', NULL, NULL, 'b592b4d0-36dd-4e7d-955a-ac348e017086', '2018-10-31 14:00:54.028', 'com.snowplowanalytics.snowplow', 'page_ping', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:56.898', '2018-10-31 14:00:56.895', '2018-10-31 14:00:56.887', 'page_view', '02dadea0-b68c-40c4-bac9-7c06bcca6c4e', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '24212466', 'a8778c40-912f-4106-8cdf-14f29ba6df16', 2, '43a81c91-4a52-4e77-bca7-fffb40f1cfa2', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', NULL, 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'en-US', true, false, false, false, false, false, false, false, false, true, '24', 1920, 918, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 918, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:56.888', NULL, NULL, '6cc1c14c-d4c4-4d3d-a5cc-025f719d243f', '2018-10-31 14:00:56.894', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:00:58.86', '2018-10-31 14:00:58.857', '2018-10-31 14:00:58.851', 'page_view', 'f9d66465-0dc4-4926-8c59-71b223e319b8', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '24212466', 'a8778c40-912f-4106-8cdf-14f29ba6df16', 2, '43a81c91-4a52-4e77-bca7-fffb40f1cfa2', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', NULL, 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'en-US', true, false, false, false, false, false, false, false, false, true, '24', 1920, 918, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 918, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:00:58.854', NULL, NULL, '6cc1c14c-d4c4-4d3d-a5cc-025f719d243f', '2018-10-31 14:00:58.854', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-10-31 14:01:08.864', '2018-10-31 14:01:08.861', '2018-10-31 14:01:08.856', 'page_ping', 'ee8ad6b2-d8f2-402d-ad7e-cc913c44da30', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '24212466', 'a8778c40-912f-4106-8cdf-14f29ba6df16', 2, '43a81c91-4a52-4e77-bca7-fffb40f1cfa2', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html?enableActivityTracking=true', 'TouchAI Test', NULL, 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'en-US', true, false, false, false, false, false, false, false, false, true, '24', 1920, 918, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 918, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-10-31 14:01:08.857', NULL, NULL, '6cc1c14c-d4c4-4d3d-a5cc-025f719d243f', '2018-10-31 14:01:08.86', 'com.snowplowanalytics.snowplow', 'page_ping', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:18:13.135', '2018-11-05 14:18:13.129', '2018-11-05 14:18:13.119', 'unstruct', '9b47ccb3-e194-4a42-b25a-cc1839cabbb6', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 1920, 922, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 922, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:18:13.122', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:18:13.126', 'com.snowplowanalytics.snowplow', 'link_click', 'jsonschema', '1-0-1', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:18:13.182', '2018-11-05 14:18:13.154', '2018-11-05 14:18:13.124', 'struct', '7848b545-a78c-44e0-96e4-ccd0b22ab28c', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mixes', 'Play', 'MRC/fabric-0503-mix', NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 1920, 922, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 922, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:18:13.146', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:18:13.132', 'com.google.analytics', 'event', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:19:09.991', '2018-11-05 14:19:09.988', '2018-11-05 14:19:09.983', 'page_view', 'dd006f30-0334-4e17-bb9e-0556ccbdf65c', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Javascript Tracker Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 1920, 475, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 475, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:19:09.986', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:19:09.985', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:23:09.781', '2018-11-05 14:23:09.778', '2018-11-05 14:23:09.763', 'page_view', '08a904b9-657c-4ade-9490-8981521d44d4', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Javascript Tracker Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 527, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 528, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:23:09.766', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:23:09.775', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:23:12.478', '2018-11-05 14:23:12.476', '2018-11-05 14:23:12.471', 'unstruct', '2919f98c-b0b1-40bb-9d63-b0d6a5ff77be', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 527, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 528, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:23:12.473', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:23:12.474', 'com.snowplowanalytics.snowplow', 'link_click', 'jsonschema', '1-0-1', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:23:12.491', '2018-11-05 14:23:12.488', '2018-11-05 14:23:12.475', 'struct', '8f5a6cbd-20b0-41db-94f8-8a6f5a503c7f', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mixes', 'Play', 'MRC/fabric-0503-mix', NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 527, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 528, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:23:12.485', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:23:12.478', 'com.google.analytics', 'event', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('snowplowsmall', 'mob', '2018-11-05 14:54:41.089', '2018-11-05 14:54:41.085', '2018-11-05 14:54:41.079', 'page_view', 'd697bae4-1f1b-4a12-b004-f74326e3e981', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Javascript Tracker Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 527, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 528, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 14:54:41.081', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 14:54:41.083', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:47.208', '2018-11-05 15:04:09.634', '2018-11-05 15:04:09.539', 'page_view', '37380818-b3b2-40f3-933e-9f66f69947c5', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:09.54', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:09.633', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.505', '2018-11-05 15:04:11.095', '2018-11-05 15:04:11.088', 'page_view', 'bcc34edc-45df-4be9-b521-6e3072b93000', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:11.089', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:11.094', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.519', '2018-11-05 15:04:28.361', '2018-11-05 15:04:28.356', 'page_view', '9a264895-4f98-41a7-abd9-4f46f9d481d4', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:28.356', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:28.361', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.53', '2018-11-05 15:04:29.48', '2018-11-05 15:04:29.476', 'page_view', '050ecace-dd6d-40fd-9631-da4b7f03dcd4', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', 'TouchAI Test', 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:29.477', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:29.479', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.541', '2018-11-05 15:04:30.768', '2018-11-05 15:04:30.748', 'transaction', 'cb67129d-dd7d-4d98-9c66-331090368aac', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'order-123', NULL, 8000.00, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, 'JPY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:30.753', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:30.763', 'com.snowplowanalytics.snowplow', 'transaction', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.552', '2018-11-05 15:04:30.786', '2018-11-05 15:04:30.754', 'transaction_item', 'a7fa88de-8f75-4167-80cc-21ad23d5822a', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'order-123', '1002', 'Red shoes', NULL, 4000.00, 1, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, 'JPY', NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:30.779', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:30.761', 'com.snowplowanalytics.snowplow', 'transaction_item', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.563', '2018-11-05 15:04:34.907', '2018-11-05 15:04:34.89', 'unstruct', '4bf1706c-ca16-4f63-8324-7f9dfdd4bc21', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:34.894', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:34.903', 'com.snowplowanalytics.snowplow', 'change_form', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:49.884', '2018-11-05 15:04:36.39', '2018-11-05 15:04:36.384', 'unstruct', '9f4f2f9b-41e3-4bb5-b708-ab5ad43c3766', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:36.385', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:36.389', 'com.snowplowanalytics.snowplow', 'submit_form', 'jsonschema', '1-0-0', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:04:50.227', '2018-11-05 15:04:38.302', '2018-11-05 15:04:38.295', 'unstruct', '9ff02c3d-9d23-486c-bd4b-505df953cfdc', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:04:38.297', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:04:38.3', 'com.snowplowanalytics.snowplow', 'link_click', 'jsonschema', '1-0-1', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:05:09.718', '2018-11-05 15:05:09.691', '2018-11-05 15:05:09.675', 'unstruct', '56050fa2-33ff-4c8b-97aa-7f40c67a50d8', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', 'b79cc757-ec9d-43f4-8635-f7f46824cf4c', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://0.0.0.0:8080/test.html#', NULL, 'http://0.0.0.0:8080/', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'http', '0.0.0.0', 8080, '/', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 2133, 1024, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 2133, 1024, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:05:09.679', NULL, NULL, '1265cae6-aebd-4ca2-b8e9-47246b0a7367', '2018-11-05 15:05:09.687', 'com.snowplowanalytics.snowplow', 'link_click', 'jsonschema', '1-0-1', NULL, NULL);
INSERT INTO atomic.events (app_id, platform, etl_tstamp, collector_tstamp, dvce_created_tstamp, event, event_id, txn_id, name_tracker, v_tracker, v_collector, v_etl, user_id, user_ipaddress, user_fingerprint, domain_userid, domain_sessionidx, network_userid, geo_country, geo_region, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_region_name, ip_isp, ip_organization, ip_domain, ip_netspeed, page_url, page_title, page_referrer, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, se_category, se_action, se_label, se_property, se_value, tr_orderid, tr_affiliation, tr_total, tr_tax, tr_shipping, tr_city, tr_state, tr_country, ti_orderid, ti_sku, ti_name, ti_category, ti_price, ti_quantity, pp_xoffset_min, pp_xoffset_max, pp_yoffset_min, pp_yoffset_max, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, br_features_pdf, br_features_flash, br_features_java, br_features_director, br_features_quicktime, br_features_realplayer, br_features_windowsmedia, br_features_gears, br_features_silverlight, br_cookies, br_colordepth, br_viewwidth, br_viewheight, os_name, os_family, os_manufacturer, os_timezone, dvce_type, dvce_ismobile, dvce_screenwidth, dvce_screenheight, doc_charset, doc_width, doc_height, tr_currency, tr_total_base, tr_tax_base, tr_shipping_base, ti_currency, ti_price_base, base_currency, geo_timezone, mkt_clickid, mkt_network, etl_tags, dvce_sent_tstamp, refr_domain_userid, refr_dvce_tstamp, domain_sessionid, derived_tstamp, event_vendor, event_name, event_format, event_version, event_fingerprint, true_tstamp) VALUES ('touchai-test', 'web', '2018-11-05 15:10:24.682', '2018-11-05 15:10:24.675', '2018-11-05 15:10:24.448', 'page_view', '0fb2536a-e85b-48ee-8114-e2a88718cb20', NULL, 'cf', 'js-0.1.0-SNAPSHOT', 'ssc-0.14.0-kafka', 'stream-enrich-0.18.0-common-0.34.0', 'alex123', '192.100.11.1', '695536893', '4a68aa7a-a315-4a3b-b7f9-885c8e8218c0', 1, '4ad7ebd8-620f-4899-aabe-27082519caa7', 'US', NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, NULL, NULL, NULL, NULL, 'http://site1:8080/test.html#', 'TouchAI Test', NULL, 'http', 'site1', 8080, '/test.html', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36', NULL, NULL, NULL, NULL, NULL, 'es-ES', true, false, false, false, false, false, false, false, false, true, '24', 1920, 922, NULL, NULL, NULL, 'Europe/Berlin', NULL, NULL, 1920, 1080, 'UTF-8', 1920, 922, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '2018-11-05 15:10:24.451', NULL, NULL, 'c6dccf02-72ef-4bfa-ad7d-62784a54a8c9', '2018-11-05 15:10:24.672', 'com.snowplowanalytics.snowplow', 'page_view', 'jsonschema', '1-0-0', NULL, NULL);


--
-- Data for Name: org_w3_performance_timing_1; Type: TABLE DATA; Schema: atomic; Owner: sparta
--

INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'd062cae8-90f8-43da-bad3-57e562f40290', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540993926616, 0, 0, 1540993926617, 1540993926624, 1540993926624, 0, 1540993926624, 1540993926624, 1540993926624, 1540993926632, 1540993926632, 1540993926639, 1540993926640, 1540993926639, 1540993926671, 1540993926673, 1540993926677, 1540993926727, 1540993926727, 1540993926731, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'f1c4290e-5745-4c61-b2c2-bba0491aede4', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994427932, 0, 0, 1540994427933, 1540994427943, 1540994427943, 0, 1540994427943, 1540994427944, 1540994427944, 1540994427944, 1540994427944, 1540994427950, 1540994427950, 1540994427950, 1540994427976, 1540994427979, 1540994427981, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '94bc5a20-b040-4ffa-b41d-d16b3e1a02fe', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '5278c8fb-50ea-4361-9a34-bb3e53141462', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '9501e701-85ef-454d-92e2-f496169812de', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '274d602e-1059-472b-a75a-e5c4c1c8d9bc', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'c54ef0d0-9625-4465-a7ba-a79e8c74c289', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '43595997-ab6b-46b7-8939-7afd9f782e38', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '9362e6f7-b4cc-40fb-a960-0c43f228c334', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '5a02d6ed-81ca-42de-ab58-c1caf8d603d2', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '77590000-fc10-4831-8b4f-b573bbc6e492', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994429814, 0, 0, 1540994429816, 1540994429816, 1540994429816, 0, 1540994429816, 1540994429816, 1540994429828, 1540994429828, 1540994429828, 1540994429833, 1540994429834, 1540994429833, 1540994429858, 1540994429861, 1540994429863, 1540994429927, 1540994429927, 1540994429929, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'f22e6f71-4b7e-42b4-9e8a-305a68abf0a7', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994443940, 0, 0, 1540994443940, 1540994443940, 1540994443940, 0, 1540994443940, 1540994443940, 1540994443945, 1540994443945, 1540994443945, 1540994443949, 1540994443949, 1540994443949, 1540994443973, 1540994443974, 1540994443976, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '18456522-fc42-4660-b1cd-036be27963ae', '2018-10-31 14:00:26', NULL, NULL, NULL, 1540994443940, 0, 0, 1540994443940, 1540994443940, 1540994443940, 0, 1540994443940, 1540994443940, 1540994443945, 1540994443945, 1540994443945, 1540994443949, 1540994443949, 1540994443949, 1540994443973, 1540994443974, 1540994443976, 1540994444037, 1540994444037, 1540994444039, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '37380818-b3b2-40f3-933e-9f66f69947c5', NULL, NULL, NULL, NULL, 1541430249438, 0, 0, 1541430249443, 1541430249443, 1541430249443, 0, 1541430249443, 1541430249443, 1541430249450, 1541430249452, 1541430249455, 1541430249458, 1541430249458, 1541430249466, 1541430249476, 1541430249476, 1541430249476, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'bcc34edc-45df-4be9-b521-6e3072b93000', NULL, NULL, NULL, NULL, 1541430251018, 0, 0, 1541430251024, 1541430251024, 1541430251024, 0, 1541430251024, 1541430251024, 1541430251027, 1541430251028, 1541430251034, 1541430251034, 1541430251034, 1541430251043, 1541430251051, 1541430251051, 1541430251051, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '9a264895-4f98-41a7-abd9-4f46f9d481d4', NULL, NULL, NULL, NULL, 1541430268271, 0, 0, 1541430268277, 1541430268277, 1541430268277, 0, 1541430268277, 1541430268277, 1541430268280, 1541430268282, 1541430268285, 1541430268286, 1541430268286, 1541430268292, 1541430268297, 1541430268297, 1541430268297, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '050ecace-dd6d-40fd-9631-da4b7f03dcd4', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 0, 0, 0, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'cb67129d-dd7d-4d98-9c66-331090368aac', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 1541430269487, 1541430269487, 1541430269488, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, 'a7fa88de-8f75-4167-80cc-21ad23d5822a', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 1541430269487, 1541430269487, 1541430269488, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '4bf1706c-ca16-4f63-8324-7f9dfdd4bc21', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 1541430269487, 1541430269487, 1541430269488, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '9f4f2f9b-41e3-4bb5-b708-ab5ad43c3766', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 1541430269487, 1541430269487, 1541430269488, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '9ff02c3d-9d23-486c-bd4b-505df953cfdc', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 1541430269487, 1541430269487, 1541430269488, NULL, NULL);
INSERT INTO atomic.org_w3_performance_timing_1 (schema_vendor, schema_name, schema_format, schema_version, root_id, root_tstamp, ref_root, ref_tree, ref_parent, navigation_start, redirect_start, redirect_end, fetch_start, domain_lookup_start, domain_lookup_end, secure_connection_start, connect_start, connect_end, request_start, response_start, response_end, unload_event_start, unload_event_end, dom_loading, dom_interactive, dom_content_loaded_event_start, dom_content_loaded_event_end, dom_complete, load_event_start, load_event_end, ms_first_paint, chrome_first_paint) VALUES (NULL, NULL, NULL, NULL, '56050fa2-33ff-4c8b-97aa-7f40c67a50d8', NULL, NULL, NULL, NULL, 1541430269406, 0, 0, 1541430269413, 1541430269413, 1541430269413, 0, 1541430269413, 1541430269413, 1541430269415, 1541430269417, 1541430269420, 1541430269423, 1541430269423, 1541430269432, 1541430269440, 1541430269440, 1541430269440, 1541430269487, 1541430269487, 1541430269488, NULL, NULL);


--
-- Data for Name: web_events; Type: TABLE DATA; Schema: scratch; Owner: sparta
--

INSERT INTO scratch.web_events (user_id, domain_userid, network_userid, domain_sessionid, domain_sessionidx, page_view_id, page_title, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, mkt_clickid, mkt_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, user_ipaddress, ip_isp, ip_organization, ip_domain, ip_netspeed, app_id, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, dvce_type, dvce_ismobile, os_name, os_family, os_manufacturer, os_timezone, name_tracker, dvce_created_tstamp, n) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '32c1cd2e-ba56-4579-8cd0-74ded027f1c7', 'TouchAI Test', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', NULL, NULL, NULL, NULL, NULL, 'Europe/Berlin', 'cf', '2018-10-31 14:00:28.026', 1);
INSERT INTO scratch.web_events (user_id, domain_userid, network_userid, domain_sessionid, domain_sessionidx, page_view_id, page_title, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, mkt_clickid, mkt_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, user_ipaddress, ip_isp, ip_organization, ip_domain, ip_netspeed, app_id, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, dvce_type, dvce_ismobile, os_name, os_family, os_manufacturer, os_timezone, name_tracker, dvce_created_tstamp, n) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '55183b93-0978-4731-b681-1cc0350cc951', 'TouchAI Test', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', NULL, NULL, NULL, NULL, NULL, 'Europe/Berlin', 'cf', '2018-10-31 14:00:44.019', 1);
INSERT INTO scratch.web_events (user_id, domain_userid, network_userid, domain_sessionid, domain_sessionidx, page_view_id, page_title, page_urlscheme, page_urlhost, page_urlport, page_urlpath, page_urlquery, page_urlfragment, refr_urlscheme, refr_urlhost, refr_urlport, refr_urlpath, refr_urlquery, refr_urlfragment, refr_medium, refr_source, refr_term, mkt_medium, mkt_source, mkt_term, mkt_content, mkt_campaign, mkt_clickid, mkt_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, user_ipaddress, ip_isp, ip_organization, ip_domain, ip_netspeed, app_id, useragent, br_name, br_family, br_version, br_type, br_renderengine, br_lang, dvce_type, dvce_ismobile, os_name, os_family, os_manufacturer, os_timezone, name_tracker, dvce_created_tstamp, n) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809', 'TouchAI Test', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0', NULL, NULL, NULL, NULL, NULL, 'es-ES', NULL, NULL, NULL, NULL, NULL, 'Europe/Berlin', 'cf', '2018-10-31 14:00:29.894', 1);


--
-- Data for Name: web_events_scroll_depth; Type: TABLE DATA; Schema: scratch; Owner: sparta
--

INSERT INTO scratch.web_events_scroll_depth (page_view_id, doc_width, doc_height, br_viewwidth, br_viewheight, hmin, hmax, vmin, vmax, relative_hmin, relative_hmax, relative_vmin, relative_vmax) VALUES ('32c1cd2e-ba56-4579-8cd0-74ded027f1c7', 1920, 936, 1920, 936, 0, 0, 0, 0, 0, 100, 0, 100);
INSERT INTO scratch.web_events_scroll_depth (page_view_id, doc_width, doc_height, br_viewwidth, br_viewheight, hmin, hmax, vmin, vmax, relative_hmin, relative_hmax, relative_vmin, relative_vmax) VALUES ('ecb0f20b-0f08-4ca5-9d61-14f15c26ba61', 1920, 936, 1920, 936, 0, 0, 0, 0, 0, 100, 0, 100);
INSERT INTO scratch.web_events_scroll_depth (page_view_id, doc_width, doc_height, br_viewwidth, br_viewheight, hmin, hmax, vmin, vmax, relative_hmin, relative_hmax, relative_vmin, relative_vmax) VALUES ('861f1ef6-1fd8-4fee-86e6-a0e3d16bc809', 1920, 936, 1920, 936, 0, 0, 0, 0, 0, 100, 0, 100);
INSERT INTO scratch.web_events_scroll_depth (page_view_id, doc_width, doc_height, br_viewwidth, br_viewheight, hmin, hmax, vmin, vmax, relative_hmin, relative_hmax, relative_vmin, relative_vmax) VALUES ('55183b93-0978-4731-b681-1cc0350cc951', 1920, 936, 1920, 936, 0, 0, 0, 0, 0, 100, 0, 100);


--
-- Data for Name: web_events_time; Type: TABLE DATA; Schema: scratch; Owner: sparta
--

INSERT INTO scratch.web_events_time (page_view_id, min_tstamp, max_tstamp, pv_count, pp_count, time_engaged_in_s) VALUES ('32c1cd2e-ba56-4579-8cd0-74ded027f1c7', '2018-10-31 14:00:28.038', '2018-10-31 14:00:28.038', 1, 0, 0);
INSERT INTO scratch.web_events_time (page_view_id, min_tstamp, max_tstamp, pv_count, pp_count, time_engaged_in_s) VALUES ('55183b93-0978-4731-b681-1cc0350cc951', '2018-10-31 14:00:44.024', '2018-10-31 14:00:54.028', 1, 1, 10);
INSERT INTO scratch.web_events_time (page_view_id, min_tstamp, max_tstamp, pv_count, pp_count, time_engaged_in_s) VALUES ('861f1ef6-1fd8-4fee-86e6-a0e3d16bc809', '2018-10-31 14:00:29.899', '2018-10-31 14:00:39.903', 1, 1, 10);
INSERT INTO scratch.web_events_time (page_view_id, min_tstamp, max_tstamp, pv_count, pp_count, time_engaged_in_s) VALUES ('ecb0f20b-0f08-4ca5-9d61-14f15c26ba61', '2018-10-31 14:00:26.777', '2018-10-31 14:00:26.777', 0, 1, 0);


--
-- Data for Name: web_page_context; Type: TABLE DATA; Schema: scratch; Owner: sparta
--

INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('f22e6f71-4b7e-42b4-9e8a-305a68abf0a7', '55183b93-0978-4731-b681-1cc0350cc951');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('94bc5a20-b040-4ffa-b41d-d16b3e1a02fe', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('9362e6f7-b4cc-40fb-a960-0c43f228c334', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('274d602e-1059-472b-a75a-e5c4c1c8d9bc', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('d062cae8-90f8-43da-bad3-57e562f40290', 'ecb0f20b-0f08-4ca5-9d61-14f15c26ba61');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('9501e701-85ef-454d-92e2-f496169812de', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('18456522-fc42-4660-b1cd-036be27963ae', '55183b93-0978-4731-b681-1cc0350cc951');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('77590000-fc10-4831-8b4f-b573bbc6e492', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('f1c4290e-5745-4c61-b2c2-bba0491aede4', '32c1cd2e-ba56-4579-8cd0-74ded027f1c7');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('43595997-ab6b-46b7-8939-7afd9f782e38', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('5a02d6ed-81ca-42de-ab58-c1caf8d603d2', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('c54ef0d0-9625-4465-a7ba-a79e8c74c289', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');
INSERT INTO scratch.web_page_context (root_id, page_view_id) VALUES ('5278c8fb-50ea-4361-9a34-bb3e53141462', '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809');


--
-- Data for Name: web_timing_context; Type: TABLE DATA; Schema: scratch; Owner: sparta
--

INSERT INTO scratch.web_timing_context (page_view_id, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('32c1cd2e-ba56-4579-8cd0-74ded027f1c7', NULL, 0, 10, 0, 1, 0, 0, NULL, 26, NULL, NULL, NULL);
INSERT INTO scratch.web_timing_context (page_view_id, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('ecb0f20b-0f08-4ca5-9d61-14f15c26ba61', NULL, 1, 7, 0, 0, 8, 0, 88, 32, 56, 4, 115);
INSERT INTO scratch.web_timing_context (page_view_id, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('861f1ef6-1fd8-4fee-86e6-a0e3d16bc809', NULL, 1, 0, 0, 0, 0, 0, 94, 25, 69, 2, 115);
INSERT INTO scratch.web_timing_context (page_view_id, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('55183b93-0978-4731-b681-1cc0350cc951', NULL, 0, 0, 0, 0, 0, 0, 88, 24, 64, 2, 99);


--
-- Data for Name: web_ua_parser_context; Type: TABLE DATA; Schema: scratch; Owner: sparta
--

INSERT INTO scratch.web_ua_parser_context (page_view_id, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES ('32c1cd2e-ba56-4579-8cd0-74ded027f1c7', 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO scratch.web_ua_parser_context (page_view_id, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES ('861f1ef6-1fd8-4fee-86e6-a0e3d16bc809', 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO scratch.web_ua_parser_context (page_view_id, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES ('ecb0f20b-0f08-4ca5-9d61-14f15c26ba61', 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');
INSERT INTO scratch.web_ua_parser_context (page_view_id, useragent_family, useragent_major, useragent_minor, useragent_patch, useragent_version, os_family, os_major, os_minor, os_patch, os_patch_minor, os_version, device_family) VALUES ('55183b93-0978-4731-b681-1cc0350cc951', 'Firefox', '63', '0', NULL, 'Firefox 63.0', 'Ubuntu', NULL, NULL, NULL, NULL, 'Ubuntu', 'Other');


--
-- Data for Name: debug; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.debug (debug_id, workflow_original, workflow_debug, result) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db', '{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:12:04Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"versionSparta":"2.4.0-SNAPSHOT"}', '{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres-debug","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"120000ms","blockInterval":"120000ms","stopGracefully":true,"stopGracefulTimeout":"10000","checkpointSettings":{"checkpointPath":"file:///tmp/debug-checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":false,"sparkDataStoreTls":true,"sparkMesosSecurity":false,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":false,"sendInputData":false}}},"pipelineGraph":{"nodes":[{"name":"Kafka","stepType":"Input","className":"DummyDebugInputStepStreaming","classPrettyName":"DummyDebug","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"a_output_debug_Kafka","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"a_output_debug_discards_Kafka","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aa_output_debug_Csv","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aa_output_debug_discards_Csv","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaa_output_debug_Json_contexts","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaa_output_debug_discards_Json_contexts","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaa_output_debug_Json_derived_contexts","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaa_output_debug_discards_Json_derived_contexts","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaa_output_debug_SelectColumns","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaa_output_debug_discards_SelectColumns","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaa_output_debug_Explode","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaa_output_debug_discards_Explode","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaa_output_debug_Explode_1","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaa_output_debug_discards_Explode_1","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaaa_output_debug_Trigger","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaaa_output_debug_discards_Trigger","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaaaa_output_debug_Trigger_1_1","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaaaa_output_debug_discards_Trigger_1_1","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaaaaa_output_debug_Trigger_1","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]},{"name":"aaaaaaaaaa_output_debug_discards_Trigger_1","stepType":"output","className":"DebugOutputStep","classPrettyName":"Debug","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"configuration":{},"supportedEngines":[],"executionEngine":"Streaming","lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Kafka","destination":"a_output_debug_Kafka","dataType":"ValidData"},{"origin":"Csv","destination":"aa_output_debug_Csv","dataType":"ValidData"},{"origin":"Csv","destination":"aa_output_debug_discards_Csv","dataType":"DiscardedData"},{"origin":"Json_contexts","destination":"aaa_output_debug_Json_contexts","dataType":"ValidData"},{"origin":"Json_contexts","destination":"aaa_output_debug_discards_Json_contexts","dataType":"DiscardedData"},{"origin":"Json_derived_contexts","destination":"aaaa_output_debug_Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"aaaa_output_debug_discards_Json_derived_contexts","dataType":"DiscardedData"},{"origin":"SelectColumns","destination":"aaaaa_output_debug_SelectColumns","dataType":"ValidData"},{"origin":"Explode","destination":"aaaaaa_output_debug_Explode","dataType":"ValidData"},{"origin":"Explode_1","destination":"aaaaaaa_output_debug_Explode_1","dataType":"ValidData"},{"origin":"Trigger","destination":"aaaaaaaa_output_debug_Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"aaaaaaaa_output_debug_discards_Trigger","dataType":"DiscardedData"},{"origin":"Trigger_1_1","destination":"aaaaaaaaa_output_debug_Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"aaaaaaaaa_output_debug_discards_Trigger_1_1","dataType":"DiscardedData"},{"origin":"Trigger_1","destination":"aaaaaaaaaa_output_debug_Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"aaaaaaaaaa_output_debug_discards_Trigger_1","dataType":"DiscardedData"}]},"executionEngine":"Streaming","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":true}', '{"debugSuccessful":true,"stepResults":{},"stepErrors":{},"endExecutionDate":"2018-11-05T14:14:03Z"}');


--
-- Data for Name: debug_step_data; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Kafka', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Kafka', 1, '{"type":"struct","fields":[{"name":"raw","type":"string","nullable":true,"metadata":{}}]}', '["{\"raw\":\"touchai-test\\tweb\\t2018-10-31 13:26:15.823\\t2018-10-31 13:26:15.819\\t2018-10-31 13:26:15.811\\tpage_view\\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\\t\\tcf\\tjs-0.1.0-SNAPSHOT\\tssc-0.14.0-kafka\\tstream-enrich-0.18.0-common-0.34.0\\talex123\\t192.100.11.1\\t2536032505\\t05508805-07cb-480c-93c4-f8ed074fb1cf\\t13\\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\\tUS\\t\\t\\t\\t37.751\\t-97.822\\t\\t\\t\\t\\t\\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\\tTouchAI Test\\thttp://0.0.0.0:8080/test.html\\thttp\\t0.0.0.0\\t8080\\t/test.html\\tenableActivityTracking=true\\t\\thttp\\t0.0.0.0\\t8080\\t/test.html\\t\\t\\tinternal\\t\\t\\t\\t\\t\\t\\t\\t{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\\t\\t\\t\\t\\t\\tes-ES\\t0\\t1\\t0\\t0\\t0\\t0\\t0\\t0\\t0\\t1\\t24\\t1920\\t677\\t\\t\\t\\tEurope/Berlin\\t\\t\\t1920\\t1080\\tUTF-8\\t1906\\t772\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t2018-10-31 13:26:15.812\\t\\t\\t{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\\tb592b4d0-36dd-4e7d-955a-ac348e017086\\t2018-10-31 13:26:15.818\\tcom.snowplowanalytics.snowplow\\tpage_view\\tjsonschema\\t1-0-0\\t\\t0\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Csv', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Csv', 1, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}}]}', '["{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Json_contexts', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Json_contexts', 1, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"data","type":{"type":"array","elementType":{"type":"struct","fields":[{"name":"data","type":{"type":"struct","fields":[{"name":"connectEnd","type":"long","nullable":true,"metadata":{}},{"name":"connectStart","type":"long","nullable":true,"metadata":{}},{"name":"domComplete","type":"long","nullable":true,"metadata":{}},{"name":"domContentLoadedEventEnd","type":"long","nullable":true,"metadata":{}},{"name":"domContentLoadedEventStart","type":"long","nullable":true,"metadata":{}},{"name":"domInteractive","type":"long","nullable":true,"metadata":{}},{"name":"domLoading","type":"long","nullable":true,"metadata":{}},{"name":"domainLookupEnd","type":"long","nullable":true,"metadata":{}},{"name":"domainLookupStart","type":"long","nullable":true,"metadata":{}},{"name":"fetchStart","type":"long","nullable":true,"metadata":{}},{"name":"id","type":"string","nullable":true,"metadata":{}},{"name":"loadEventEnd","type":"long","nullable":true,"metadata":{}},{"name":"loadEventStart","type":"long","nullable":true,"metadata":{}},{"name":"navigationStart","type":"long","nullable":true,"metadata":{}},{"name":"redirectEnd","type":"long","nullable":true,"metadata":{}},{"name":"redirectStart","type":"long","nullable":true,"metadata":{}},{"name":"requestStart","type":"long","nullable":true,"metadata":{}},{"name":"responseEnd","type":"long","nullable":true,"metadata":{}},{"name":"responseStart","type":"long","nullable":true,"metadata":{}},{"name":"secureConnectionStart","type":"long","nullable":true,"metadata":{}},{"name":"unloadEventEnd","type":"long","nullable":true,"metadata":{}},{"name":"unloadEventStart","type":"long","nullable":true,"metadata":{}}]},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]},"containsNull":true},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]}', '["{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\",\"data\":[{\"data\":{},\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\"},{\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\"},{\"data\":{\"connectEnd\":1540992375673,\"connectStart\":1540992375671,\"domComplete\":0,\"domContentLoadedEventEnd\":1540992375723,\"domContentLoadedEventStart\":1540992375718,\"domInteractive\":1540992375716,\"domLoading\":1540992375687,\"domainLookupEnd\":1540992375671,\"domainLookupStart\":1540992375671,\"fetchStart\":1540992375641,\"loadEventEnd\":0,\"loadEventStart\":0,\"navigationStart\":1540992375640,\"redirectEnd\":0,\"redirectStart\":0,\"requestStart\":1540992375673,\"responseEnd\":1540992375673,\"responseStart\":1540992375673,\"secureConnectionStart\":0,\"unloadEventEnd\":1540992375687,\"unloadEventStart\":1540992375687},\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\"}],\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Json_contexts_Discard', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Json_contexts_Discard', 0, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}}]}', '[]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Json_derived_contexts', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Json_derived_contexts', 1, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"data","type":{"type":"array","elementType":{"type":"struct","fields":[{"name":"data","type":{"type":"struct","fields":[{"name":"deviceFamily","type":"string","nullable":true,"metadata":{}},{"name":"osFamily","type":"string","nullable":true,"metadata":{}},{"name":"osMajor","type":"null","nullable":true,"metadata":{}},{"name":"osMinor","type":"null","nullable":true,"metadata":{}},{"name":"osPatch","type":"null","nullable":true,"metadata":{}},{"name":"osPatchMinor","type":"null","nullable":true,"metadata":{}},{"name":"osVersion","type":"string","nullable":true,"metadata":{}},{"name":"useragentFamily","type":"string","nullable":true,"metadata":{}},{"name":"useragentMajor","type":"string","nullable":true,"metadata":{}},{"name":"useragentMinor","type":"string","nullable":true,"metadata":{}},{"name":"useragentPatch","type":"null","nullable":true,"metadata":{}},{"name":"useragentVersion","type":"string","nullable":true,"metadata":{}}]},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]},"containsNull":true},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]}', '["{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\",\"data\":[{\"data\":{\"deviceFamily\":\"Other\",\"osFamily\":\"Ubuntu\",\"osVersion\":\"Ubuntu\",\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentVersion\":\"Firefox 63.0\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\"}],\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Json_derived_contexts_Discard', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Json_derived_contexts_Discard', 0, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}}]}', '[]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-SelectColumns', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'SelectColumns', 1, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"timestamp","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"timestamp","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"timestamp","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"integer","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"integer","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"double","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"double","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"integer","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"integer","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"double","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"double","nullable":true,"metadata":{}},{"name":"tr_tax","type":"double","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"double","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"double","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"integer","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"integer","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"integer","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"integer","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"integer","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_java","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_director","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"boolean","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"boolean","nullable":true,"metadata":{}},{"name":"br_cookies","type":"boolean","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"integer","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"integer","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"boolean","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"integer","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"integer","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"integer","nullable":true,"metadata":{}},{"name":"doc_height","type":"integer","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"double","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"double","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"double","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"double","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"timestamp","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"timestamp","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"timestamp","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"timestamp","nullable":true,"metadata":{}}]}', '["{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31T13:26:15.823Z\",\"collector_tstamp\":\"2018-10-31T13:26:15.819Z\",\"dvce_created_tstamp\":\"2018-10-31T13:26:15.811Z\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":13,\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":37.751,\"geo_longitude\":-97.822,\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":8080,\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":8080,\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":false,\"br_features_flash\":true,\"br_features_java\":false,\"br_features_director\":false,\"br_features_quicktime\":false,\"br_features_realplayer\":false,\"br_features_windowsmedia\":false,\"br_features_gears\":false,\"br_features_silverlight\":false,\"br_cookies\":true,\"br_colordepth\":\"24\",\"br_viewwidth\":1920,\"br_viewheight\":677,\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":1920,\"dvce_screenheight\":1080,\"doc_charset\":\"UTF-8\",\"doc_width\":1906,\"doc_height\":772,\"dvce_sent_tstamp\":\"2018-10-31T13:26:15.812Z\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31T13:26:15.818Z\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Explode', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Explode', 3, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"data","type":{"type":"struct","fields":[{"name":"data","type":{"type":"struct","fields":[{"name":"connectEnd","type":"long","nullable":true,"metadata":{}},{"name":"connectStart","type":"long","nullable":true,"metadata":{}},{"name":"domComplete","type":"long","nullable":true,"metadata":{}},{"name":"domContentLoadedEventEnd","type":"long","nullable":true,"metadata":{}},{"name":"domContentLoadedEventStart","type":"long","nullable":true,"metadata":{}},{"name":"domInteractive","type":"long","nullable":true,"metadata":{}},{"name":"domLoading","type":"long","nullable":true,"metadata":{}},{"name":"domainLookupEnd","type":"long","nullable":true,"metadata":{}},{"name":"domainLookupStart","type":"long","nullable":true,"metadata":{}},{"name":"fetchStart","type":"long","nullable":true,"metadata":{}},{"name":"id","type":"string","nullable":true,"metadata":{}},{"name":"loadEventEnd","type":"long","nullable":true,"metadata":{}},{"name":"loadEventStart","type":"long","nullable":true,"metadata":{}},{"name":"navigationStart","type":"long","nullable":true,"metadata":{}},{"name":"redirectEnd","type":"long","nullable":true,"metadata":{}},{"name":"redirectStart","type":"long","nullable":true,"metadata":{}},{"name":"requestStart","type":"long","nullable":true,"metadata":{}},{"name":"responseEnd","type":"long","nullable":true,"metadata":{}},{"name":"responseStart","type":"long","nullable":true,"metadata":{}},{"name":"secureConnectionStart","type":"long","nullable":true,"metadata":{}},{"name":"unloadEventEnd","type":"long","nullable":true,"metadata":{}},{"name":"unloadEventStart","type":"long","nullable":true,"metadata":{}}]},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]}', '["{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\",\"data\":{\"data\":{},\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\"}","{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\",\"data\":{\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\"}","{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\",\"data\":{\"data\":{\"connectEnd\":1540992375673,\"connectStart\":1540992375671,\"domComplete\":0,\"domContentLoadedEventEnd\":1540992375723,\"domContentLoadedEventStart\":1540992375718,\"domInteractive\":1540992375716,\"domLoading\":1540992375687,\"domainLookupEnd\":1540992375671,\"domainLookupStart\":1540992375671,\"fetchStart\":1540992375641,\"loadEventEnd\":0,\"loadEventStart\":0,\"navigationStart\":1540992375640,\"redirectEnd\":0,\"redirectStart\":0,\"requestStart\":1540992375673,\"responseEnd\":1540992375673,\"responseStart\":1540992375673,\"secureConnectionStart\":0,\"unloadEventEnd\":1540992375687,\"unloadEventStart\":1540992375687},\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Explode_1', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Explode_1', 1, '{"type":"struct","fields":[{"name":"app_id","type":"string","nullable":true,"metadata":{}},{"name":"platform","type":"string","nullable":true,"metadata":{}},{"name":"etl_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"collector_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"dvce_created_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event","type":"string","nullable":true,"metadata":{}},{"name":"event_id","type":"string","nullable":true,"metadata":{}},{"name":"txn_id","type":"string","nullable":true,"metadata":{}},{"name":"name_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_tracker","type":"string","nullable":true,"metadata":{}},{"name":"v_collector","type":"string","nullable":true,"metadata":{}},{"name":"v_etl","type":"string","nullable":true,"metadata":{}},{"name":"user_id","type":"string","nullable":true,"metadata":{}},{"name":"user_ipaddress","type":"string","nullable":true,"metadata":{}},{"name":"user_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionidx","type":"string","nullable":true,"metadata":{}},{"name":"network_userid","type":"string","nullable":true,"metadata":{}},{"name":"geo_country","type":"string","nullable":true,"metadata":{}},{"name":"geo_region","type":"string","nullable":true,"metadata":{}},{"name":"geo_city","type":"string","nullable":true,"metadata":{}},{"name":"geo_zipcode","type":"string","nullable":true,"metadata":{}},{"name":"geo_latitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_longitude","type":"string","nullable":true,"metadata":{}},{"name":"geo_region_name","type":"string","nullable":true,"metadata":{}},{"name":"ip_isp","type":"string","nullable":true,"metadata":{}},{"name":"ip_organization","type":"string","nullable":true,"metadata":{}},{"name":"ip_domain","type":"string","nullable":true,"metadata":{}},{"name":"ip_netspeed","type":"string","nullable":true,"metadata":{}},{"name":"page_url","type":"string","nullable":true,"metadata":{}},{"name":"page_title","type":"string","nullable":true,"metadata":{}},{"name":"page_referrer","type":"string","nullable":true,"metadata":{}},{"name":"page_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"page_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"page_urlport","type":"string","nullable":true,"metadata":{}},{"name":"page_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"page_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"page_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlscheme","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlhost","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlport","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlpath","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlquery","type":"string","nullable":true,"metadata":{}},{"name":"refr_urlfragment","type":"string","nullable":true,"metadata":{}},{"name":"refr_medium","type":"string","nullable":true,"metadata":{}},{"name":"refr_source","type":"string","nullable":true,"metadata":{}},{"name":"refr_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_medium","type":"string","nullable":true,"metadata":{}},{"name":"mkt_source","type":"string","nullable":true,"metadata":{}},{"name":"mkt_term","type":"string","nullable":true,"metadata":{}},{"name":"mkt_content","type":"string","nullable":true,"metadata":{}},{"name":"mkt_campaign","type":"string","nullable":true,"metadata":{}},{"name":"contexts","type":"string","nullable":true,"metadata":{}},{"name":"se_category","type":"string","nullable":true,"metadata":{}},{"name":"se_action","type":"string","nullable":true,"metadata":{}},{"name":"se_label","type":"string","nullable":true,"metadata":{}},{"name":"se_property","type":"string","nullable":true,"metadata":{}},{"name":"se_value","type":"string","nullable":true,"metadata":{}},{"name":"unstruct_event","type":"string","nullable":true,"metadata":{}},{"name":"tr_orderid","type":"string","nullable":true,"metadata":{}},{"name":"tr_affiliation","type":"string","nullable":true,"metadata":{}},{"name":"tr_total","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping","type":"string","nullable":true,"metadata":{}},{"name":"tr_city","type":"string","nullable":true,"metadata":{}},{"name":"tr_state","type":"string","nullable":true,"metadata":{}},{"name":"tr_country","type":"string","nullable":true,"metadata":{}},{"name":"ti_orderid","type":"string","nullable":true,"metadata":{}},{"name":"ti_sku","type":"string","nullable":true,"metadata":{}},{"name":"ti_name","type":"string","nullable":true,"metadata":{}},{"name":"ti_category","type":"string","nullable":true,"metadata":{}},{"name":"ti_price","type":"string","nullable":true,"metadata":{}},{"name":"ti_quantity","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_xoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_min","type":"string","nullable":true,"metadata":{}},{"name":"pp_yoffset_max","type":"string","nullable":true,"metadata":{}},{"name":"useragent","type":"string","nullable":true,"metadata":{}},{"name":"br_name","type":"string","nullable":true,"metadata":{}},{"name":"br_family","type":"string","nullable":true,"metadata":{}},{"name":"br_version","type":"string","nullable":true,"metadata":{}},{"name":"br_type","type":"string","nullable":true,"metadata":{}},{"name":"br_renderengine","type":"string","nullable":true,"metadata":{}},{"name":"br_lang","type":"string","nullable":true,"metadata":{}},{"name":"br_features_pdf","type":"string","nullable":true,"metadata":{}},{"name":"br_features_flash","type":"string","nullable":true,"metadata":{}},{"name":"br_features_java","type":"string","nullable":true,"metadata":{}},{"name":"br_features_director","type":"string","nullable":true,"metadata":{}},{"name":"br_features_quicktime","type":"string","nullable":true,"metadata":{}},{"name":"br_features_realplayer","type":"string","nullable":true,"metadata":{}},{"name":"br_features_windowsmedia","type":"string","nullable":true,"metadata":{}},{"name":"br_features_gears","type":"string","nullable":true,"metadata":{}},{"name":"br_features_silverlight","type":"string","nullable":true,"metadata":{}},{"name":"br_cookies","type":"string","nullable":true,"metadata":{}},{"name":"br_colordepth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewwidth","type":"string","nullable":true,"metadata":{}},{"name":"br_viewheight","type":"string","nullable":true,"metadata":{}},{"name":"os_name","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_manufacturer","type":"string","nullable":true,"metadata":{}},{"name":"os_timezone","type":"string","nullable":true,"metadata":{}},{"name":"dvce_type","type":"string","nullable":true,"metadata":{}},{"name":"dvce_ismobile","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenwidth","type":"string","nullable":true,"metadata":{}},{"name":"dvce_screenheight","type":"string","nullable":true,"metadata":{}},{"name":"doc_charset","type":"string","nullable":true,"metadata":{}},{"name":"doc_width","type":"string","nullable":true,"metadata":{}},{"name":"doc_height","type":"string","nullable":true,"metadata":{}},{"name":"tr_currency","type":"string","nullable":true,"metadata":{}},{"name":"tr_total_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_tax_base","type":"string","nullable":true,"metadata":{}},{"name":"tr_shipping_base","type":"string","nullable":true,"metadata":{}},{"name":"ti_currency","type":"string","nullable":true,"metadata":{}},{"name":"ti_price_base","type":"string","nullable":true,"metadata":{}},{"name":"base_currency","type":"string","nullable":true,"metadata":{}},{"name":"geo_timezone","type":"string","nullable":true,"metadata":{}},{"name":"mkt_clickid","type":"string","nullable":true,"metadata":{}},{"name":"mkt_network","type":"string","nullable":true,"metadata":{}},{"name":"etl_tags","type":"string","nullable":true,"metadata":{}},{"name":"dvce_sent_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"refr_domain_userid","type":"string","nullable":true,"metadata":{}},{"name":"refr_dvce_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"derived_contexts","type":"string","nullable":true,"metadata":{}},{"name":"domain_sessionid","type":"string","nullable":true,"metadata":{}},{"name":"derived_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"event_vendor","type":"string","nullable":true,"metadata":{}},{"name":"event_name","type":"string","nullable":true,"metadata":{}},{"name":"event_format","type":"string","nullable":true,"metadata":{}},{"name":"event_version","type":"string","nullable":true,"metadata":{}},{"name":"event_fingerprint","type":"string","nullable":true,"metadata":{}},{"name":"true_tstamp","type":"string","nullable":true,"metadata":{}},{"name":"data","type":{"type":"struct","fields":[{"name":"data","type":{"type":"struct","fields":[{"name":"deviceFamily","type":"string","nullable":true,"metadata":{}},{"name":"osFamily","type":"string","nullable":true,"metadata":{}},{"name":"osMajor","type":"null","nullable":true,"metadata":{}},{"name":"osMinor","type":"null","nullable":true,"metadata":{}},{"name":"osPatch","type":"null","nullable":true,"metadata":{}},{"name":"osPatchMinor","type":"null","nullable":true,"metadata":{}},{"name":"osVersion","type":"string","nullable":true,"metadata":{}},{"name":"useragentFamily","type":"string","nullable":true,"metadata":{}},{"name":"useragentMajor","type":"string","nullable":true,"metadata":{}},{"name":"useragentMinor","type":"string","nullable":true,"metadata":{}},{"name":"useragentPatch","type":"null","nullable":true,"metadata":{}},{"name":"useragentVersion","type":"string","nullable":true,"metadata":{}}]},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]},"nullable":true,"metadata":{}},{"name":"schema","type":"string","nullable":true,"metadata":{}}]}', '["{\"app_id\":\"touchai-test\",\"platform\":\"web\",\"etl_tstamp\":\"2018-10-31 13:26:15.823\",\"collector_tstamp\":\"2018-10-31 13:26:15.819\",\"dvce_created_tstamp\":\"2018-10-31 13:26:15.811\",\"event\":\"page_view\",\"event_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"name_tracker\":\"cf\",\"v_tracker\":\"js-0.1.0-SNAPSHOT\",\"v_collector\":\"ssc-0.14.0-kafka\",\"v_etl\":\"stream-enrich-0.18.0-common-0.34.0\",\"user_id\":\"alex123\",\"user_ipaddress\":\"192.100.11.1\",\"user_fingerprint\":\"2536032505\",\"domain_userid\":\"05508805-07cb-480c-93c4-f8ed074fb1cf\",\"domain_sessionidx\":\"13\",\"network_userid\":\"5e1061b0-798e-4b25-a2b9-62ae9cb1f350\",\"geo_country\":\"US\",\"geo_latitude\":\"37.751\",\"geo_longitude\":\"-97.822\",\"page_url\":\"http://0.0.0.0:8080/test.html?enableActivityTracking=true\",\"page_title\":\"TouchAI Test\",\"page_referrer\":\"http://0.0.0.0:8080/test.html\",\"page_urlscheme\":\"http\",\"page_urlhost\":\"0.0.0.0\",\"page_urlport\":\"8080\",\"page_urlpath\":\"/test.html\",\"page_urlquery\":\"enableActivityTracking=true\",\"refr_urlscheme\":\"http\",\"refr_urlhost\":\"0.0.0.0\",\"refr_urlport\":\"8080\",\"refr_urlpath\":\"/test.html\",\"refr_medium\":\"internal\",\"contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\\\",\\\"data\\\":{}},{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"id\\\":\\\"82a16cde-1931-4eaa-977d-3753a035e329\\\"}},{\\\"schema\\\":\\\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"navigationStart\\\":1540992375640,\\\"unloadEventStart\\\":1540992375687,\\\"unloadEventEnd\\\":1540992375687,\\\"redirectStart\\\":0,\\\"redirectEnd\\\":0,\\\"fetchStart\\\":1540992375641,\\\"domainLookupStart\\\":1540992375671,\\\"domainLookupEnd\\\":1540992375671,\\\"connectStart\\\":1540992375671,\\\"connectEnd\\\":1540992375673,\\\"secureConnectionStart\\\":0,\\\"requestStart\\\":1540992375673,\\\"responseStart\\\":1540992375673,\\\"responseEnd\\\":1540992375673,\\\"domLoading\\\":1540992375687,\\\"domInteractive\\\":1540992375716,\\\"domContentLoadedEventStart\\\":1540992375718,\\\"domContentLoadedEventEnd\\\":1540992375723,\\\"domComplete\\\":0,\\\"loadEventStart\\\":0,\\\"loadEventEnd\\\":0}}]}\",\"useragent\":\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\",\"br_lang\":\"es-ES\",\"br_features_pdf\":\"0\",\"br_features_flash\":\"1\",\"br_features_java\":\"0\",\"br_features_director\":\"0\",\"br_features_quicktime\":\"0\",\"br_features_realplayer\":\"0\",\"br_features_windowsmedia\":\"0\",\"br_features_gears\":\"0\",\"br_features_silverlight\":\"0\",\"br_cookies\":\"1\",\"br_colordepth\":\"24\",\"br_viewwidth\":\"1920\",\"br_viewheight\":\"677\",\"os_timezone\":\"Europe/Berlin\",\"dvce_screenwidth\":\"1920\",\"dvce_screenheight\":\"1080\",\"doc_charset\":\"UTF-8\",\"doc_width\":\"1906\",\"doc_height\":\"772\",\"dvce_sent_tstamp\":\"2018-10-31 13:26:15.812\",\"derived_contexts\":\"{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\\\",\\\"data\\\":[{\\\"schema\\\":\\\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\\\",\\\"data\\\":{\\\"useragentFamily\\\":\\\"Firefox\\\",\\\"useragentMajor\\\":\\\"63\\\",\\\"useragentMinor\\\":\\\"0\\\",\\\"useragentPatch\\\":null,\\\"useragentVersion\\\":\\\"Firefox 63.0\\\",\\\"osFamily\\\":\\\"Ubuntu\\\",\\\"osMajor\\\":null,\\\"osMinor\\\":null,\\\"osPatch\\\":null,\\\"osPatchMinor\\\":null,\\\"osVersion\\\":\\\"Ubuntu\\\",\\\"deviceFamily\\\":\\\"Other\\\"}}]}\",\"domain_sessionid\":\"b592b4d0-36dd-4e7d-955a-ac348e017086\",\"derived_tstamp\":\"2018-10-31 13:26:15.818\",\"event_vendor\":\"com.snowplowanalytics.snowplow\",\"event_name\":\"page_view\",\"event_format\":\"jsonschema\",\"event_version\":\"1-0-0\",\"true_tstamp\":\"0\",\"data\":{\"data\":{\"deviceFamily\":\"Other\",\"osFamily\":\"Ubuntu\",\"osVersion\":\"Ubuntu\",\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentVersion\":\"Firefox 63.0\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\"},\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Trigger', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Trigger', 1, '{"type":"struct","fields":[{"name":"root_id","type":"string","nullable":true,"metadata":{}},{"name":"id","type":"string","nullable":true,"metadata":{}}]}', '["{\"root_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Trigger_1_1', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Trigger_1_1', 1, '{"type":"struct","fields":[{"name":"root_id","type":"string","nullable":true,"metadata":{}},{"name":"navigation_start","type":"long","nullable":true,"metadata":{}},{"name":"unload_event_start","type":"long","nullable":true,"metadata":{}},{"name":"unload_event_end","type":"long","nullable":true,"metadata":{}},{"name":"redirect_start","type":"long","nullable":true,"metadata":{}},{"name":"redirect_end","type":"long","nullable":true,"metadata":{}},{"name":"fetch_start","type":"long","nullable":true,"metadata":{}},{"name":"domain_lookup_start","type":"long","nullable":true,"metadata":{}},{"name":"domain_lookup_end","type":"long","nullable":true,"metadata":{}},{"name":"connect_start","type":"long","nullable":true,"metadata":{}},{"name":"connect_end","type":"long","nullable":true,"metadata":{}},{"name":"secure_connection_start","type":"long","nullable":true,"metadata":{}},{"name":"request_start","type":"long","nullable":true,"metadata":{}},{"name":"response_start","type":"long","nullable":true,"metadata":{}},{"name":"response_end","type":"long","nullable":true,"metadata":{}},{"name":"dom_loading","type":"long","nullable":true,"metadata":{}},{"name":"dom_interactive","type":"long","nullable":true,"metadata":{}},{"name":"dom_content_loaded_event_start","type":"long","nullable":true,"metadata":{}},{"name":"dom_content_loaded_event_end","type":"long","nullable":true,"metadata":{}},{"name":"dom_complete","type":"long","nullable":true,"metadata":{}},{"name":"load_event_start","type":"long","nullable":true,"metadata":{}},{"name":"load_event_end","type":"long","nullable":true,"metadata":{}}]}', '["{\"root_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"navigation_start\":1540992375640,\"unload_event_start\":1540992375687,\"unload_event_end\":1540992375687,\"redirect_start\":0,\"redirect_end\":0,\"fetch_start\":1540992375641,\"domain_lookup_start\":1540992375671,\"domain_lookup_end\":1540992375671,\"connect_start\":1540992375671,\"connect_end\":1540992375673,\"secure_connection_start\":0,\"request_start\":1540992375673,\"response_start\":1540992375673,\"response_end\":1540992375673,\"dom_loading\":1540992375687,\"dom_interactive\":1540992375716,\"dom_content_loaded_event_start\":1540992375718,\"dom_content_loaded_event_end\":1540992375723,\"dom_complete\":0,\"load_event_start\":0,\"load_event_end\":0}"]');
INSERT INTO sparta.debug_step_data (id, workflow_id, step, num_events, schema, data) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db-Trigger_1', '2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'Trigger_1', 1, '{"type":"struct","fields":[{"name":"root_id","type":"string","nullable":true,"metadata":{}},{"name":"useragent_family","type":"string","nullable":true,"metadata":{}},{"name":"useragent_major","type":"string","nullable":true,"metadata":{}},{"name":"useragent_minor","type":"string","nullable":true,"metadata":{}},{"name":"useragent_patch","type":"string","nullable":true,"metadata":{}},{"name":"useragent_version","type":"string","nullable":true,"metadata":{}},{"name":"os_family","type":"string","nullable":true,"metadata":{}},{"name":"os_major","type":"string","nullable":true,"metadata":{}},{"name":"os_minor","type":"string","nullable":true,"metadata":{}},{"name":"os_patch","type":"string","nullable":true,"metadata":{}},{"name":"os_patch_minor","type":"string","nullable":true,"metadata":{}},{"name":"os_version","type":"string","nullable":true,"metadata":{}},{"name":"device_family","type":"string","nullable":true,"metadata":{}}]}', '["{\"root_id\":\"05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\",\"useragent_family\":\"Firefox\",\"useragent_major\":\"63\",\"useragent_minor\":\"0\",\"useragent_version\":\"Firefox 63.0\",\"os_family\":\"Ubuntu\",\"os_version\":\"Ubuntu\",\"device_family\":\"Other\"}"]');


--
-- Data for Name: global_parameters; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_MEMORY_FRACTION', '0.6');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_DRIVER_CORES', '1');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_EXECUTOR_MEMORY', '2G');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_DRIVER_JAVA_OPTIONS', '-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_LOCAL_PATH', '/opt/spark/dist');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_DRIVER_MEMORY', '2G');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_TASK_MAX_FAILURES', '8');
INSERT INTO sparta.global_parameters (name, value) VALUES ('DEFAULT_OUTPUT_FIELD', 'raw');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_STREAMING_CHECKPOINT_PATH', 'sparta/checkpoint');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_STREAMING_BLOCK_INTERVAL', '100ms');
INSERT INTO sparta.global_parameters (name, value) VALUES ('DEFAULT_DELIMITER', ',');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_LOCALITY_WAIT', '100');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_CORES_MAX', '2');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_STREAMING_WINDOW', '2s');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS', '-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_EXECUTOR_CORES', '1');
INSERT INTO sparta.global_parameters (name, value) VALUES ('SPARK_EXECUTOR_BASE_IMAGE', 'qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428');


--
-- Data for Name: groups; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.groups (group_id, name) VALUES ('940800b2-6d81-44a8-84d9-26913a2faea4', '/home');


--
-- Data for Name: lookup_pageview; Type: TABLE DATA; Schema: sparta; Owner: sparta
--



--
-- Data for Name: parameter_list; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.parameter_list (name, id, parameters, tags, description, creation_date, last_update_date, parent, "versionSparta") VALUES ('Default', '1b8d86a8-c7d5-11e8-a8d5-f2801f1b9fd1', '[]', '[]', NULL, '2018-10-29 14:27:52.375', '2018-11-05 15:03:28.587', NULL, NULL);
INSERT INTO sparta.parameter_list (name, id, parameters, tags, description, creation_date, last_update_date, parent, "versionSparta") VALUES ('Environment', 'f16e9034-ab81-11e8-98d0-529269fb1459', '[{"name":"JDBC_DRIVER","value":"org.postgresql.Driver"},{"name":"ES_PORT","value":"9200"},{"name":"CASSANDRA_HOST","value":"localhost"},{"name":"REDIS_HOST","value":"localhost"},{"name":"CROSSDATA_ZOOKEEPER_CONNECTION","value":"localhost:2181"},{"name":"KAFKA_MAX_POLL_TIMEOUT","value":"512"},{"name":"ES_CLUSTER","value":"elasticsearch"},{"name":"REDIS_PORT","value":"6379"},{"name":"KAFKA_MAX_RATE_PER_PARTITION","value":"0"},{"name":"CROSSDATA_ZOOKEEPER_PATH","value":"/crossdata/offsets"},{"name":"MONGODB_PORT","value":"27017"},{"name":"JDBC_URL","value":"jdbc:postgresql://dbserver:port/database?user=postgres"},{"name":"ES_HOST","value":"localhost"},{"name":"MONGODB_HOST","value":"localhost"},{"name":"MONGODB_DB","value":"sparta"},{"name":"KAFKA_BROKER_PORT","value":"9092"},{"name":"POSTGRES_URL","value":"jdbc:postgresql://dbserver:port/database?user=postgres"},{"name":"ES_INDEX_MAPPING","value":"sparta"},{"name":"CASSANDRA_CLUSTER","value":"sparta"},{"name":"WEBSOCKET_URL","value":"ws://stream.meetup.com/2/rsvps"},{"name":"KAFKA_BROKER_HOST","value":"localhost"},{"name":"KAFKA_GROUP_ID","value":"sparta"},{"name":"CASSANDRA_PORT","value":"9042"},{"name":"CASSANDRA_KEYSPACE","value":"sparta"}]', '[]', NULL, '2018-10-29 14:27:52.375', '2018-11-05 15:03:28.607', NULL, NULL);


--
-- Data for Name: template; Type: TABLE DATA; Schema: sparta; Owner: sparta
--



--
-- Data for Name: workflow; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.workflow (workflow_id, name, description, settings, pipeline_graph, execution_engine, ui_settings, creation_date, last_update_date, version, "group", tags, debug_mode, version_sparta, parameters_used_in_execution, execution_id, group_id) VALUES ('2f2c4839-9d7a-4b73-9554-5d98f682c9db', 'touchai-postgres', '', '{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}}', '{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]}', '"Streaming"', '{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}}', NULL, '2018-11-05 14:17:43.335', 2, '{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"}', NULL, false, NULL, NULL, NULL, '940800b2-6d81-44a8-84d9-26913a2faea4');


--
-- Data for Name: workflow_execution; Type: TABLE DATA; Schema: sparta; Owner: sparta
--

INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('d8740043-17ab-499f-83ac-e2b171e78d30', '[{"state":"Failed","statusInfo":"An error was encountered while executing input step Kafka","lastUpdateDate":"2018-11-05T14:19:21Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:19:21Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:19:21Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:19:21Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"d8740043-17ab-499f-83ac-e2b171e78d30","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:19:21Z","startDate":"2018-11-05T14:19:21Z","endDate":"2018-11-05T14:19:21Z","lastError":{"message":"An error was encountered while executing input step Kafka","phase":"Input","exceptionMsg":"java.lang.IllegalStateException: Adding new inputs, transformations, and output operations after starting a context is not supported","localizedMsg":"Adding new inputs, transformations, and output operations after starting a context is not supported","date":"2018-11-05T14:19:21Z","step":"Kafka"}}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('f7f3faf0-1d5c-4353-8fff-b945945399ca', '[{"state":"Finished","statusInfo":"The workflow was successfully finished with local scheduler","lastUpdateDate":"2018-11-05T14:53:04Z"},{"state":"Stopped","statusInfo":"The workflow was successfully stopped","lastUpdateDate":"2018-11-05T14:53:04Z"},{"state":"Stopping","statusInfo":"Execution state changed to Stopping","lastUpdateDate":"2018-11-05T14:53:03Z"},{"state":"Started","statusInfo":"Checker: the workflow execution  started correctly","lastUpdateDate":"2018-11-05T14:28:21Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:28:19Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:28:19Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:28:19Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"f7f3faf0-1d5c-4353-8fff-b945945399ca","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:28:19Z","startDate":"2018-11-05T14:28:19Z","endDate":"2018-11-05T14:53:04Z"}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('068f0dd8-41ee-4eb2-aa27-110e016fcb76', '[{"state":"Failed","statusInfo":"Error initiating the workflow","lastUpdateDate":"2018-11-05T14:18:16Z"},{"state":"Started","statusInfo":"Workflow started successfully","lastUpdateDate":"2018-11-05T14:17:54Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:17:53Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:17:53Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:17:53Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"068f0dd8-41ee-4eb2-aa27-110e016fcb76","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:17:53Z","startDate":"2018-11-05T14:17:53Z","endDate":"2018-11-05T14:18:16Z","lastError":{"message":"Error initiating the workflow","phase":"Execution","exceptionMsg":"org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 123.0 failed 1 times, most recent failure: Lost task 0.0 in stage 123.0 (TID 241, localhost, executor driver): java.lang.RuntimeException: Error while encoding: java.lang.RuntimeException: java.lang.String is not a valid external type for schema of bigint\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, app_id), StringType), true) AS app_id#85181\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, platform), StringType), true) AS platform#85182\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, etl_tstamp), StringType), true) AS etl_tstamp#85183\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, collector_tstamp), StringType), true) AS collector_tstamp#85184\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, dvce_created_tstamp), StringType), true) AS dvce_created_tstamp#85185\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, event), StringType), true) AS event#85186\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, event_id), StringType), true) AS event_id#85187\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, txn_id), StringType), true) AS txn_id#85188\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, name_tracker), StringType), true) AS name_tracker#85189\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, v_tracker), StringType), true) AS v_tracker#85190\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, v_collector), StringType), true) AS v_collector#85191\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, v_etl), StringType), true) AS v_etl#85192\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 12, user_id), StringType), true) AS user_id#85193\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 13, user_ipaddress), StringType), true) AS user_ipaddress#85194\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 14, user_fingerprint), StringType), true) AS user_fingerprint#85195\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 15, domain_userid), StringType), true) AS domain_userid#85196\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 16, domain_sessionidx), StringType), true) AS domain_sessionidx#85197\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 17, network_userid), StringType), true) AS network_userid#85198\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 18, geo_country), StringType), true) AS geo_country#85199\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 19, geo_region), StringType), true) AS geo_region#85200\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 20, geo_city), StringType), true) AS geo_city#85201\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 21, geo_zipcode), StringType), true) AS geo_zipcode#85202\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 22, geo_latitude), StringType), true) AS geo_latitude#85203\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 23, geo_longitude), StringType), true) AS geo_longitude#85204\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 24, geo_region_name), StringType), true) AS geo_region_name#85205\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 25, ip_isp), StringType), true) AS ip_isp#85206\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 26, ip_organization), StringType), true) AS ip_organization#85207\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 27, ip_domain), StringType), true) AS ip_domain#85208\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 28, ip_netspeed), StringType), true) AS ip_netspeed#85209\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 29, page_url), StringType), true) AS page_url#85210\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 30, page_title), StringType), true) AS page_title#85211\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 31, page_referrer), StringType), true) AS page_referrer#85212\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 32, page_urlscheme), StringType), true) AS page_urlscheme#85213\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 33, page_urlhost), StringType), true) AS page_urlhost#85214\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 34, page_urlport), StringType), true) AS page_urlport#85215\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 35, page_urlpath), StringType), true) AS page_urlpath#85216\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 36, page_urlquery), StringType), true) AS page_urlquery#85217\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 37, page_urlfragment), StringType), true) AS page_urlfragment#85218\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 38, refr_urlscheme), StringType), true) AS refr_urlscheme#85219\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 39, refr_urlhost), StringType), true) AS refr_urlhost#85220\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 40, refr_urlport), StringType), true) AS refr_urlport#85221\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 41, refr_urlpath), StringType), true) AS refr_urlpath#85222\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 42, refr_urlquery), StringType), true) AS refr_urlquery#85223\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 43, refr_urlfragment), StringType), true) AS refr_urlfragment#85224\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 44, refr_medium), StringType), true) AS refr_medium#85225\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 45, refr_source), StringType), true) AS refr_source#85226\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 46, refr_term), StringType), true) AS refr_term#85227\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 47, mkt_medium), StringType), true) AS mkt_medium#85228\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 48, mkt_source), StringType), true) AS mkt_source#85229\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 49, mkt_term), StringType), true) AS mkt_term#85230\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 50, mkt_content), StringType), true) AS mkt_content#85231\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 51, mkt_campaign), StringType), true) AS mkt_campaign#85232\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 52, contexts), StringType), true) AS contexts#85233\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 53, se_category), StringType), true) AS se_category#85234\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 54, se_action), StringType), true) AS se_action#85235\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 55, se_label), StringType), true) AS se_label#85236\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 56, se_property), StringType), true) AS se_property#85237\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 57, se_value), StringType), true) AS se_value#85238\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 58, unstruct_event), StringType), true) AS unstruct_event#85239\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 59, tr_orderid), StringType), true) AS tr_orderid#85240\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 60, tr_affiliation), StringType), true) AS tr_affiliation#85241\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 61, tr_total), StringType), true) AS tr_total#85242\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 62, tr_tax), StringType), true) AS tr_tax#85243\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 63, tr_shipping), StringType), true) AS tr_shipping#85244\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 64, tr_city), StringType), true) AS tr_city#85245\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 65, tr_state), StringType), true) AS tr_state#85246\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 66, tr_country), StringType), true) AS tr_country#85247\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 67, ti_orderid), StringType), true) AS ti_orderid#85248\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 68, ti_sku), StringType), true) AS ti_sku#85249\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 69, ti_name), StringType), true) AS ti_name#85250\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 70, ti_category), StringType), true) AS ti_category#85251\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 71, ti_price), StringType), true) AS ti_price#85252\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 72, ti_quantity), StringType), true) AS ti_quantity#85253\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 73, pp_xoffset_min), StringType), true) AS pp_xoffset_min#85254\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 74, pp_xoffset_max), StringType), true) AS pp_xoffset_max#85255\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 75, pp_yoffset_min), StringType), true) AS pp_yoffset_min#85256\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 76, pp_yoffset_max), StringType), true) AS pp_yoffset_max#85257\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 77, useragent), StringType), true) AS useragent#85258\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 78, br_name), StringType), true) AS br_name#85259\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 79, br_family), StringType), true) AS br_family#85260\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 80, br_version), StringType), true) AS br_version#85261\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 81, br_type), StringType), true) AS br_type#85262\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 82, br_renderengine), StringType), true) AS br_renderengine#85263\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 83, br_lang), StringType), true) AS br_lang#85264\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 84, br_features_pdf), StringType), true) AS br_features_pdf#85265\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 85, br_features_flash), StringType), true) AS br_features_flash#85266\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 86, br_features_java), StringType), true) AS br_features_java#85267\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 87, br_features_director), StringType), true) AS br_features_director#85268\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 88, br_features_quicktime), StringType), true) AS br_features_quicktime#85269\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 89, br_features_realplayer), StringType), true) AS br_features_realplayer#85270\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 90, br_features_windowsmedia), StringType), true) AS br_features_windowsmedia#85271\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 91, br_features_gears), StringType), true) AS br_features_gears#85272\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 92, br_features_silverlight), StringType), true) AS br_features_silverlight#85273\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 93, br_cookies), StringType), true) AS br_cookies#85274\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 94, br_colordepth), StringType), true) AS br_colordepth#85275\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 95, br_viewwidth), StringType), true) AS br_viewwidth#85276\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 96, br_viewheight), StringType), true) AS br_viewheight#85277\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 97, os_name), StringType), true) AS os_name#85278\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 98, os_family), StringType), true) AS os_family#85279\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 99, os_manufacturer), StringType), true) AS os_manufacturer#85280\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 100, os_timezone), StringType), true) AS os_timezone#85281\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 101, dvce_type), StringType), true) AS dvce_type#85282\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 102, dvce_ismobile), StringType), true) AS dvce_ismobile#85283\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 103, dvce_screenwidth), StringType), true) AS dvce_screenwidth#85284\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 104, dvce_screenheight), StringType), true) AS dvce_screenheight#85285\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 105, doc_charset), StringType), true) AS doc_charset#85286\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 106, doc_width), StringType), true) AS doc_width#85287\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 107, doc_height), StringType), true) AS doc_height#85288\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 108, tr_currency), StringType), true) AS tr_currency#85289\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 109, tr_total_base), StringType), true) AS tr_total_base#85290\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 110, tr_tax_base), StringType), true) AS tr_tax_base#85291\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 111, tr_shipping_base), StringType), true) AS tr_shipping_base#85292\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 112, ti_currency), StringType), true) AS ti_currency#85293\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 113, ti_price_base), StringType), true) AS ti_price_base#85294\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 114, base_currency), StringType), true) AS base_currency#85295\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 115, geo_timezone), StringType), true) AS geo_timezone#85296\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 116, mkt_clickid), StringType), true) AS mkt_clickid#85297\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 117, mkt_network), StringType), true) AS mkt_network#85298\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 118, etl_tags), StringType), true) AS etl_tags#85299\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 119, dvce_sent_tstamp), StringType), true) AS dvce_sent_tstamp#85300\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 120, refr_domain_userid), StringType), true) AS refr_domain_userid#85301\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 121, refr_dvce_tstamp), StringType), true) AS refr_dvce_tstamp#85302\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 122, derived_contexts), StringType), true) AS derived_contexts#85303\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 123, domain_sessionid), StringType), true) AS domain_sessionid#85304\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 124, derived_tstamp), StringType), true) AS derived_tstamp#85305\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 125, event_vendor), StringType), true) AS event_vendor#85306\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 126, event_name), StringType), true) AS event_name#85307\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 127, event_format), StringType), true) AS event_format#85308\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 128, event_version), StringType), true) AS event_version#85309\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 129, event_fingerprint), StringType), true) AS event_fingerprint#85310\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 130, true_tstamp), StringType), true) AS true_tstamp#85311\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else mapobjects(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), if (isnull(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)))) null else named_struct(data, if (validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else named_struct(connectEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 0, connectEnd), LongType), connectStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 1, connectStart), LongType), domComplete, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 2, domComplete), LongType), domContentLoadedEventEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 3, domContentLoadedEventEnd), LongType), domContentLoadedEventStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 4, domContentLoadedEventStart), LongType), domInteractive, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 5, domInteractive), LongType), domLoading, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 6, domLoading), LongType), domainLookupEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 7, domainLookupEnd), LongType), domainLookupStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 8, domainLookupStart), LongType), fetchStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 9, fetchStart), LongType), id, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 10, id), StringType), true), loadEventEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 11, loadEventEnd), LongType), ... 20 more fields), schema, if (validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 1, schema), StringType), true)), validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 131, data), ArrayType(StructType(StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)),true)), None) AS data#85312\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 132, schema), StringType), true) AS schema#85313\n\tat org.apache.spark.sql.catalyst.encoders.ExpressionEncoder.toRow(ExpressionEncoder.scala:290)\n\tat org.apache.spark.sql.SparkSession$$anonfun$3.apply(SparkSession.scala:581)\n\tat org.apache.spark.sql.SparkSession$$anonfun$3.apply(SparkSession.scala:581)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n\tat scala.collection.Iterator$JoinIterator.hasNext(Iterator.scala:211)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1.apply(SpartaJdbcUtils.scala:237)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1.apply(SpartaJdbcUtils.scala:236)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2093)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2093)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:88)\n\tat org.apache.spark.scheduler.Task$$anonfun$run$2.apply(Task.scala:109)\n\tat org.apache.spark.scheduler.Task$$anonfun$run$2.apply(Task.scala:109)\n\tat org.apache.spark.scheduler.KerberosFunction$.executeSecure(KerberosFunction.scala:35)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:109)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.RuntimeException: java.lang.String is not a valid external type for schema of bigint\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.evalIfFalseExpr131$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply1_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.evalIfFalseExpr154$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply4_64$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply(Unknown Source)\n\tat org.apache.spark.sql.catalyst.encoders.ExpressionEncoder.toRow(ExpressionEncoder.scala:287)\n\t... 36 more\n\nDriver stacktrace:","localizedMsg":"Error while encoding: java.lang.RuntimeException: java.lang.String is not a valid external type for schema of bigint\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, app_id), StringType), true) AS app_id#85181\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, platform), StringType), true) AS platform#85182\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, etl_tstamp), StringType), true) AS etl_tstamp#85183\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, collector_tstamp), StringType), true) AS collector_tstamp#85184\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, dvce_created_tstamp), StringType), true) AS dvce_created_tstamp#85185\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, event), StringType), true) AS event#85186\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, event_id), StringType), true) AS event_id#85187\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, txn_id), StringType), true) AS txn_id#85188\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, name_tracker), StringType), true) AS name_tracker#85189\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, v_tracker), StringType), true) AS v_tracker#85190\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, v_collector), StringType), true) AS v_collector#85191\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, v_etl), StringType), true) AS v_etl#85192\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 12, user_id), StringType), true) AS user_id#85193\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 13, user_ipaddress), StringType), true) AS user_ipaddress#85194\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 14, user_fingerprint), StringType), true) AS user_fingerprint#85195\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 15, domain_userid), StringType), true) AS domain_userid#85196\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 16, domain_sessionidx), StringType), true) AS domain_sessionidx#85197\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 17, network_userid), StringType), true) AS network_userid#85198\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 18, geo_country), StringType), true) AS geo_country#85199\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 19, geo_region), StringType), true) AS geo_region#85200\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 20, geo_city), StringType), true) AS geo_city#85201\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 21, geo_zipcode), StringType), true) AS geo_zipcode#85202\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 22, geo_latitude), StringType), true) AS geo_latitude#85203\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 23, geo_longitude), StringType), true) AS geo_longitude#85204\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 24, geo_region_name), StringType), true) AS geo_region_name#85205\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 25, ip_isp), StringType), true) AS ip_isp#85206\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 26, ip_organization), StringType), true) AS ip_organization#85207\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 27, ip_domain), StringType), true) AS ip_domain#85208\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 28, ip_netspeed), StringType), true) AS ip_netspeed#85209\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 29, page_url), StringType), true) AS page_url#85210\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 30, page_title), StringType), true) AS page_title#85211\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 31, page_referrer), StringType), true) AS page_referrer#85212\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 32, page_urlscheme), StringType), true) AS page_urlscheme#85213\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 33, page_urlhost), StringType), true) AS page_urlhost#85214\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 34, page_urlport), StringType), true) AS page_urlport#85215\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 35, page_urlpath), StringType), true) AS page_urlpath#85216\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 36, page_urlquery), StringType), true) AS page_urlquery#85217\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 37, page_urlfragment), StringType), true) AS page_urlfragment#85218\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 38, refr_urlscheme), StringType), true) AS refr_urlscheme#85219\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 39, refr_urlhost), StringType), true) AS refr_urlhost#85220\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 40, refr_urlport), StringType), true) AS refr_urlport#85221\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 41, refr_urlpath), StringType), true) AS refr_urlpath#85222\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 42, refr_urlquery), StringType), true) AS refr_urlquery#85223\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 43, refr_urlfragment), StringType), true) AS refr_urlfragment#85224\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 44, refr_medium), StringType), true) AS refr_medium#85225\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 45, refr_source), StringType), true) AS refr_source#85226\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 46, refr_term), StringType), true) AS refr_term#85227\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 47, mkt_medium), StringType), true) AS mkt_medium#85228\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 48, mkt_source), StringType), true) AS mkt_source#85229\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 49, mkt_term), StringType), true) AS mkt_term#85230\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 50, mkt_content), StringType), true) AS mkt_content#85231\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 51, mkt_campaign), StringType), true) AS mkt_campaign#85232\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 52, contexts), StringType), true) AS contexts#85233\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 53, se_category), StringType), true) AS se_category#85234\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 54, se_action), StringType), true) AS se_action#85235\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 55, se_label), StringType), true) AS se_label#85236\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 56, se_property), StringType), true) AS se_property#85237\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 57, se_value), StringType), true) AS se_value#85238\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 58, unstruct_event), StringType), true) AS unstruct_event#85239\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 59, tr_orderid), StringType), true) AS tr_orderid#85240\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 60, tr_affiliation), StringType), true) AS tr_affiliation#85241\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 61, tr_total), StringType), true) AS tr_total#85242\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 62, tr_tax), StringType), true) AS tr_tax#85243\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 63, tr_shipping), StringType), true) AS tr_shipping#85244\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 64, tr_city), StringType), true) AS tr_city#85245\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 65, tr_state), StringType), true) AS tr_state#85246\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 66, tr_country), StringType), true) AS tr_country#85247\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 67, ti_orderid), StringType), true) AS ti_orderid#85248\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 68, ti_sku), StringType), true) AS ti_sku#85249\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 69, ti_name), StringType), true) AS ti_name#85250\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 70, ti_category), StringType), true) AS ti_category#85251\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 71, ti_price), StringType), true) AS ti_price#85252\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 72, ti_quantity), StringType), true) AS ti_quantity#85253\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 73, pp_xoffset_min), StringType), true) AS pp_xoffset_min#85254\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 74, pp_xoffset_max), StringType), true) AS pp_xoffset_max#85255\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 75, pp_yoffset_min), StringType), true) AS pp_yoffset_min#85256\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 76, pp_yoffset_max), StringType), true) AS pp_yoffset_max#85257\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 77, useragent), StringType), true) AS useragent#85258\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 78, br_name), StringType), true) AS br_name#85259\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 79, br_family), StringType), true) AS br_family#85260\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 80, br_version), StringType), true) AS br_version#85261\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 81, br_type), StringType), true) AS br_type#85262\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 82, br_renderengine), StringType), true) AS br_renderengine#85263\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 83, br_lang), StringType), true) AS br_lang#85264\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 84, br_features_pdf), StringType), true) AS br_features_pdf#85265\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 85, br_features_flash), StringType), true) AS br_features_flash#85266\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 86, br_features_java), StringType), true) AS br_features_java#85267\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 87, br_features_director), StringType), true) AS br_features_director#85268\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 88, br_features_quicktime), StringType), true) AS br_features_quicktime#85269\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 89, br_features_realplayer), StringType), true) AS br_features_realplayer#85270\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 90, br_features_windowsmedia), StringType), true) AS br_features_windowsmedia#85271\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 91, br_features_gears), StringType), true) AS br_features_gears#85272\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 92, br_features_silverlight), StringType), true) AS br_features_silverlight#85273\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 93, br_cookies), StringType), true) AS br_cookies#85274\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 94, br_colordepth), StringType), true) AS br_colordepth#85275\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 95, br_viewwidth), StringType), true) AS br_viewwidth#85276\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 96, br_viewheight), StringType), true) AS br_viewheight#85277\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 97, os_name), StringType), true) AS os_name#85278\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 98, os_family), StringType), true) AS os_family#85279\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 99, os_manufacturer), StringType), true) AS os_manufacturer#85280\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 100, os_timezone), StringType), true) AS os_timezone#85281\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 101, dvce_type), StringType), true) AS dvce_type#85282\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 102, dvce_ismobile), StringType), true) AS dvce_ismobile#85283\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 103, dvce_screenwidth), StringType), true) AS dvce_screenwidth#85284\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 104, dvce_screenheight), StringType), true) AS dvce_screenheight#85285\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 105, doc_charset), StringType), true) AS doc_charset#85286\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 106, doc_width), StringType), true) AS doc_width#85287\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 107, doc_height), StringType), true) AS doc_height#85288\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 108, tr_currency), StringType), true) AS tr_currency#85289\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 109, tr_total_base), StringType), true) AS tr_total_base#85290\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 110, tr_tax_base), StringType), true) AS tr_tax_base#85291\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 111, tr_shipping_base), StringType), true) AS tr_shipping_base#85292\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 112, ti_currency), StringType), true) AS ti_currency#85293\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 113, ti_price_base), StringType), true) AS ti_price_base#85294\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 114, base_currency), StringType), true) AS base_currency#85295\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 115, geo_timezone), StringType), true) AS geo_timezone#85296\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 116, mkt_clickid), StringType), true) AS mkt_clickid#85297\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 117, mkt_network), StringType), true) AS mkt_network#85298\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 118, etl_tags), StringType), true) AS etl_tags#85299\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 119, dvce_sent_tstamp), StringType), true) AS dvce_sent_tstamp#85300\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 120, refr_domain_userid), StringType), true) AS refr_domain_userid#85301\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 121, refr_dvce_tstamp), StringType), true) AS refr_dvce_tstamp#85302\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 122, derived_contexts), StringType), true) AS derived_contexts#85303\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 123, domain_sessionid), StringType), true) AS domain_sessionid#85304\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 124, derived_tstamp), StringType), true) AS derived_tstamp#85305\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 125, event_vendor), StringType), true) AS event_vendor#85306\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 126, event_name), StringType), true) AS event_name#85307\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 127, event_format), StringType), true) AS event_format#85308\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 128, event_version), StringType), true) AS event_version#85309\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 129, event_fingerprint), StringType), true) AS event_fingerprint#85310\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 130, true_tstamp), StringType), true) AS true_tstamp#85311\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else mapobjects(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), if (isnull(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)))) null else named_struct(data, if (validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else named_struct(connectEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 0, connectEnd), LongType), connectStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 1, connectStart), LongType), domComplete, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 2, domComplete), LongType), domContentLoadedEventEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 3, domContentLoadedEventEnd), LongType), domContentLoadedEventStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 4, domContentLoadedEventStart), LongType), domInteractive, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 5, domInteractive), LongType), domLoading, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 6, domLoading), LongType), domainLookupEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 7, domainLookupEnd), LongType), domainLookupStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 8, domainLookupStart), LongType), fetchStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 9, fetchStart), LongType), id, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 10, id), StringType), true), loadEventEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 11, loadEventEnd), LongType), ... 20 more fields), schema, if (validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue240, MapObjects_loopIsNull240, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 1, schema), StringType), true)), validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 131, data), ArrayType(StructType(StructField(data,StructType(StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)),true)), None) AS data#85312\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 132, schema), StringType), true) AS schema#85313","date":"2018-11-05T14:18:16Z"}}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('a200c58b-3c5c-4dcc-942f-783304fdad17', '[{"state":"Failed","statusInfo":"Error initiating the workflow","lastUpdateDate":"2018-11-05T14:25:16Z"},{"state":"Started","statusInfo":"Workflow started successfully","lastUpdateDate":"2018-11-05T14:25:14Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:25:14Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:25:13Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:25:13Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"a200c58b-3c5c-4dcc-942f-783304fdad17","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:25:13Z","startDate":"2018-11-05T14:25:13Z","endDate":"2018-11-05T14:25:18Z","lastError":{"message":"Error initiating the workflow","phase":"Execution","exceptionMsg":"org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 202.0 failed 1 times, most recent failure: Lost task 0.0 in stage 202.0 (TID 202, localhost, executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO atomic.events (\"app_id\",\"platform\",\"etl_tstamp\",\"collector_tstamp\",\"dvce_created_tstamp\",\"event\",\"event_id\",\"txn_id\",\"name_tracker\",\"v_tracker\",\"v_collector\",\"v_etl\",\"user_id\",\"user_ipaddress\",\"user_fingerprint\",\"domain_userid\",\"domain_sessionidx\",\"network_userid\",\"geo_country\",\"geo_region\",\"geo_city\",\"geo_zipcode\",\"geo_latitude\",\"geo_longitude\",\"geo_region_name\",\"ip_isp\",\"ip_organization\",\"ip_domain\",\"ip_netspeed\",\"page_url\",\"page_title\",\"page_referrer\",\"page_urlscheme\",\"page_urlhost\",\"page_urlport\",\"page_urlpath\",\"page_urlquery\",\"page_urlfragment\",\"refr_urlscheme\",\"refr_urlhost\",\"refr_urlport\",\"refr_urlpath\",\"refr_urlquery\",\"refr_urlfragment\",\"refr_medium\",\"refr_source\",\"refr_term\",\"mkt_medium\",\"mkt_source\",\"mkt_term\",\"mkt_content\",\"mkt_campaign\",\"se_category\",\"se_action\",\"se_label\",\"se_property\",\"se_value\",\"tr_orderid\",\"tr_affiliation\",\"tr_total\",\"tr_tax\",\"tr_shipping\",\"tr_city\",\"tr_state\",\"tr_country\",\"ti_orderid\",\"ti_sku\",\"ti_name\",\"ti_category\",\"ti_price\",\"ti_quantity\",\"pp_xoffset_min\",\"pp_xoffset_max\",\"pp_yoffset_min\",\"pp_yoffset_max\",\"useragent\",\"br_name\",\"br_family\",\"br_version\",\"br_type\",\"br_renderengine\",\"br_lang\",\"br_features_pdf\",\"br_features_flash\",\"br_features_java\",\"br_features_director\",\"br_features_quicktime\",\"br_features_realplayer\",\"br_features_windowsmedia\",\"br_features_gears\",\"br_features_silverlight\",\"br_cookies\",\"br_colordepth\",\"br_viewwidth\",\"br_viewheight\",\"os_name\",\"os_family\",\"os_manufacturer\",\"os_timezone\",\"dvce_type\",\"dvce_ismobile\",\"dvce_screenwidth\",\"dvce_screenheight\",\"doc_charset\",\"doc_width\",\"doc_height\",\"tr_currency\",\"tr_total_base\",\"tr_tax_base\",\"tr_shipping_base\",\"ti_currency\",\"ti_price_base\",\"base_currency\",\"geo_timezone\",\"mkt_clickid\",\"mkt_network\",\"etl_tags\",\"dvce_sent_tstamp\",\"refr_domain_userid\",\"refr_dvce_tstamp\",\"domain_sessionid\",\"derived_tstamp\",\"event_vendor\",\"event_name\",\"event_format\",\"event_version\",\"event_fingerprint\",\"true_tstamp\") VALUES (''snowplowsmall'',''mob'',''2018-11-05 14:23:12.478+00'',''2018-11-05 14:23:12.476+00'',''2018-11-05 14:23:12.471+00'',''unstruct'',''2919f98c-b0b1-40bb-9d63-b0d6a5ff77be'',NULL,''cf'',''js-0.1.0-SNAPSHOT'',''ssc-0.14.0-kafka'',''stream-enrich-0.18.0-common-0.34.0'',''alex123'',''192.100.11.1'',''695536893'',''b79cc757-ec9d-43f4-8635-f7f46824cf4c'',1,''4ad7ebd8-620f-4899-aabe-27082519caa7'',''US'',NULL,NULL,NULL,37.751,-97.822,NULL,NULL,NULL,NULL,NULL,''http://0.0.0.0:8080/test.html#'',NULL,''http://0.0.0.0:8080/'',''http'',''0.0.0.0'',8080,''/test.html'',NULL,NULL,''http'',''0.0.0.0'',8080,''/'',NULL,NULL,''internal'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,''Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'',NULL,NULL,NULL,NULL,NULL,''es-ES'',''TRUE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''TRUE'',''24'',2133,527,NULL,NULL,NULL,''Europe/Berlin'',NULL,NULL,1920,1080,''UTF-8'',2133,528,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,''2018-11-05 14:23:12.473+00'',NULL,NULL,''1265cae6-aebd-4ca2-b8e9-47246b0a7367'',''2018-11-05 14:23:12.474+00'',''com.snowplowanalytics.snowplow'',''link_click'',''jsonschema'',''1-0-1'',NULL,NULL) was aborted: ERROR: duplicate key value violates unique constraint \"events_pkey\"\n  Detail: Key (event_id)=(2919f98c-b0b1-40bb-9d63-b0d6a5ff77be) already exists.  Call getNextException to see other errors in the batch.\n\tat org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:148)\n\tat org.postgresql.core.ResultHandlerDelegate.handleError(ResultHandlerDelegate.java:50)\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2184)\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:481)\n\tat org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:840)\n\tat org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1538)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$.org$apache$spark$sql$jdbc$SpartaJdbcUtils$$savePartition(SpartaJdbcUtils.scala:523)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1$$anonfun$7.apply$mcZ$sp(SpartaJdbcUtils.scala:239)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1$$anonfun$7.apply(SpartaJdbcUtils.scala:239)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1$$anonfun$7.apply(SpartaJdbcUtils.scala:239)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1.apply(SpartaJdbcUtils.scala:238)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1.apply(SpartaJdbcUtils.scala:236)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2093)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2093)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:88)\n\tat org.apache.spark.scheduler.Task$$anonfun$run$2.apply(Task.scala:109)\n\tat org.apache.spark.scheduler.Task$$anonfun$run$2.apply(Task.scala:109)\n\tat org.apache.spark.scheduler.KerberosFunction$.executeSecure(KerberosFunction.scala:35)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:109)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint \"events_pkey\"\n  Detail: Key (event_id)=(2919f98c-b0b1-40bb-9d63-b0d6a5ff77be) already exists.\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440)\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183)\n\t... 23 more\n\nDriver stacktrace:","localizedMsg":"Batch entry 0 INSERT INTO atomic.events (\"app_id\",\"platform\",\"etl_tstamp\",\"collector_tstamp\",\"dvce_created_tstamp\",\"event\",\"event_id\",\"txn_id\",\"name_tracker\",\"v_tracker\",\"v_collector\",\"v_etl\",\"user_id\",\"user_ipaddress\",\"user_fingerprint\",\"domain_userid\",\"domain_sessionidx\",\"network_userid\",\"geo_country\",\"geo_region\",\"geo_city\",\"geo_zipcode\",\"geo_latitude\",\"geo_longitude\",\"geo_region_name\",\"ip_isp\",\"ip_organization\",\"ip_domain\",\"ip_netspeed\",\"page_url\",\"page_title\",\"page_referrer\",\"page_urlscheme\",\"page_urlhost\",\"page_urlport\",\"page_urlpath\",\"page_urlquery\",\"page_urlfragment\",\"refr_urlscheme\",\"refr_urlhost\",\"refr_urlport\",\"refr_urlpath\",\"refr_urlquery\",\"refr_urlfragment\",\"refr_medium\",\"refr_source\",\"refr_term\",\"mkt_medium\",\"mkt_source\",\"mkt_term\",\"mkt_content\",\"mkt_campaign\",\"se_category\",\"se_action\",\"se_label\",\"se_property\",\"se_value\",\"tr_orderid\",\"tr_affiliation\",\"tr_total\",\"tr_tax\",\"tr_shipping\",\"tr_city\",\"tr_state\",\"tr_country\",\"ti_orderid\",\"ti_sku\",\"ti_name\",\"ti_category\",\"ti_price\",\"ti_quantity\",\"pp_xoffset_min\",\"pp_xoffset_max\",\"pp_yoffset_min\",\"pp_yoffset_max\",\"useragent\",\"br_name\",\"br_family\",\"br_version\",\"br_type\",\"br_renderengine\",\"br_lang\",\"br_features_pdf\",\"br_features_flash\",\"br_features_java\",\"br_features_director\",\"br_features_quicktime\",\"br_features_realplayer\",\"br_features_windowsmedia\",\"br_features_gears\",\"br_features_silverlight\",\"br_cookies\",\"br_colordepth\",\"br_viewwidth\",\"br_viewheight\",\"os_name\",\"os_family\",\"os_manufacturer\",\"os_timezone\",\"dvce_type\",\"dvce_ismobile\",\"dvce_screenwidth\",\"dvce_screenheight\",\"doc_charset\",\"doc_width\",\"doc_height\",\"tr_currency\",\"tr_total_base\",\"tr_tax_base\",\"tr_shipping_base\",\"ti_currency\",\"ti_price_base\",\"base_currency\",\"geo_timezone\",\"mkt_clickid\",\"mkt_network\",\"etl_tags\",\"dvce_sent_tstamp\",\"refr_domain_userid\",\"refr_dvce_tstamp\",\"domain_sessionid\",\"derived_tstamp\",\"event_vendor\",\"event_name\",\"event_format\",\"event_version\",\"event_fingerprint\",\"true_tstamp\") VALUES (''snowplowsmall'',''mob'',''2018-11-05 14:23:12.478+00'',''2018-11-05 14:23:12.476+00'',''2018-11-05 14:23:12.471+00'',''unstruct'',''2919f98c-b0b1-40bb-9d63-b0d6a5ff77be'',NULL,''cf'',''js-0.1.0-SNAPSHOT'',''ssc-0.14.0-kafka'',''stream-enrich-0.18.0-common-0.34.0'',''alex123'',''192.100.11.1'',''695536893'',''b79cc757-ec9d-43f4-8635-f7f46824cf4c'',1,''4ad7ebd8-620f-4899-aabe-27082519caa7'',''US'',NULL,NULL,NULL,37.751,-97.822,NULL,NULL,NULL,NULL,NULL,''http://0.0.0.0:8080/test.html#'',NULL,''http://0.0.0.0:8080/'',''http'',''0.0.0.0'',8080,''/test.html'',NULL,NULL,''http'',''0.0.0.0'',8080,''/'',NULL,NULL,''internal'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,''Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36'',NULL,NULL,NULL,NULL,NULL,''es-ES'',''TRUE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''FALSE'',''TRUE'',''24'',2133,527,NULL,NULL,NULL,''Europe/Berlin'',NULL,NULL,1920,1080,''UTF-8'',2133,528,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,''2018-11-05 14:23:12.473+00'',NULL,NULL,''1265cae6-aebd-4ca2-b8e9-47246b0a7367'',''2018-11-05 14:23:12.474+00'',''com.snowplowanalytics.snowplow'',''link_click'',''jsonschema'',''1-0-1'',NULL,NULL) was aborted: ERROR: duplicate key value violates unique constraint \"events_pkey\"\n  Detail: Key (event_id)=(2919f98c-b0b1-40bb-9d63-b0d6a5ff77be) already exists.  Call getNextException to see other errors in the batch.","date":"2018-11-05T14:25:16Z"}}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('9e56af2d-adb3-4959-9b08-fe6110b705c4', '[{"state":"Failed","statusInfo":"Error initiating the workflow","lastUpdateDate":"2018-11-05T14:23:15Z"},{"state":"Started","statusInfo":"Workflow started successfully","lastUpdateDate":"2018-11-05T14:22:51Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:22:50Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:22:50Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:22:50Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"9e56af2d-adb3-4959-9b08-fe6110b705c4","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:22:50Z","startDate":"2018-11-05T14:22:50Z","endDate":"2018-11-05T14:23:17Z","lastError":{"message":"Error initiating the workflow","phase":"Execution","exceptionMsg":"org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 189.0 failed 1 times, most recent failure: Lost task 0.0 in stage 189.0 (TID 189, localhost, executor driver): org.apache.spark.sql.AnalysisException: No such struct field navigationStart in _ga, id; line 25 pos 6\n\tat org.apache.spark.sql.catalyst.expressions.ExtractValue$.findField(complexTypeExtractors.scala:85)\n\tat org.apache.spark.sql.catalyst.expressions.ExtractValue$.apply(complexTypeExtractors.scala:53)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$3.apply(LogicalPlan.scala:276)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$3.apply(LogicalPlan.scala:275)\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n\tat scala.collection.immutable.List.foldLeft(List.scala:84)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren(LogicalPlan.scala:171)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6$$anonfun$37.apply(Analyzer.scala:851)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6$$anonfun$37.apply(Analyzer.scala:851)\n\tat org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6.applyOrElse(Analyzer.scala:851)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6.applyOrElse(Analyzer.scala:848)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:288)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:306)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:304)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:286)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:279)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:289)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$6.apply(QueryPlan.scala:298)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:298)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:848)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:790)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:62)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:62)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:61)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:59)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:59)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:306)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:304)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:59)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:790)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:668)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:85)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:82)\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n\tat scala.collection.immutable.List.foldLeft(List.scala:84)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:82)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:74)\n\tat scala.collection.immutable.List.foreach(List.scala:381)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:74)\n\tat org.apache.spark.sql.crossdata.execution.XDQueryExecution.analyzed$lzycompute(XDQueryExecution.scala:311)\n\tat org.apache.spark.sql.crossdata.execution.XDQueryExecution.analyzed(XDQueryExecution.scala:309)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:50)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:66)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:631)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1$$anonfun$2.apply(TriggerTransformStepStreaming.scala:62)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1$$anonfun$2.apply(TriggerTransformStepStreaming.scala:55)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1.apply(TriggerTransformStepStreaming.scala:55)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1.apply(TriggerTransformStepStreaming.scala:54)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$1$$anonfun$apply$21.apply(DStream.scala:667)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$1$$anonfun$apply$21.apply(DStream.scala:667)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$2$$anonfun$5.apply(DStream.scala:681)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$2$$anonfun$5.apply(DStream.scala:679)\n\tat org.apache.spark.streaming.dstream.TransformedDStream.compute(TransformedDStream.scala:46)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1$$anonfun$apply$7.apply(DStream.scala:342)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1$$anonfun$apply$7.apply(DStream.scala:342)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1.apply(DStream.scala:341)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1.apply(DStream.scala:341)\n\tat org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties(DStream.scala:416)\n\tat org.apache.spark.streaming.dstream.TransformedDStream.createRDDWithLocalProperties(TransformedDStream.scala:65)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1.apply(DStream.scala:336)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1.apply(DStream.scala:334)\n\tat scala.Option.orElse(Option.scala:289)\n\tat org.apache.spark.streaming.dstream.DStream.getOrCompute(DStream.scala:331)\n\tat org.apache.spark.streaming.dstream.ForEachDStream.generateJob(ForEachDStream.scala:48)\n\tat org.apache.spark.streaming.DStreamGraph$$anonfun$1.apply(DStreamGraph.scala:122)\n\tat org.apache.spark.streaming.DStreamGraph$$anonfun$1.apply(DStreamGraph.scala:121)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\n\tat scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\n\tat org.apache.spark.streaming.DStreamGraph.generateJobs(DStreamGraph.scala:121)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anonfun$3.apply(JobGenerator.scala:249)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anonfun$3.apply(JobGenerator.scala:247)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat org.apache.spark.streaming.scheduler.JobGenerator.generateJobs(JobGenerator.scala:247)\n\tat org.apache.spark.streaming.scheduler.JobGenerator.org$apache$spark$streaming$scheduler$JobGenerator$$processEvent(JobGenerator.scala:183)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anon$1.onReceive(JobGenerator.scala:89)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anon$1.onReceive(JobGenerator.scala:88)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n\nDriver stacktrace:","localizedMsg":"No such struct field navigationStart in _ga, id; line 25 pos 6","date":"2018-11-05T14:23:15Z"}}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('7aeb4cc5-40d5-4ed9-ace6-b436f79c07b2', '[{"state":"Finished","statusInfo":"The workflow was successfully finished with local scheduler","lastUpdateDate":"2018-11-05T14:54:24Z"},{"state":"Stopped","statusInfo":"The workflow was successfully stopped","lastUpdateDate":"2018-11-05T14:54:24Z"},{"state":"Stopping","statusInfo":"Execution state changed to Stopping","lastUpdateDate":"2018-11-05T14:54:24Z"},{"state":"Started","statusInfo":"Workflow started successfully","lastUpdateDate":"2018-11-05T14:53:40Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:53:39Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:53:39Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:53:39Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"7aeb4cc5-40d5-4ed9-ace6-b436f79c07b2","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:53:39Z","startDate":"2018-11-05T14:53:39Z","endDate":"2018-11-05T14:54:24Z"}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('080b6112-d3f0-4109-bfe3-73da6f500423', '[{"state":"Failed","statusInfo":"Error initiating the workflow","lastUpdateDate":"2018-11-05T15:10:27Z"},{"state":"Started","statusInfo":"Checker: the workflow execution  started correctly","lastUpdateDate":"2018-11-05T15:03:59Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T15:03:57Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T15:03:57Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T15:03:57Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"080b6112-d3f0-4109-bfe3-73da6f500423","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T15:03:56Z","startDate":"2018-11-05T15:03:56Z","endDate":"2018-11-05T15:10:27Z","lastError":{"message":"Error initiating the workflow","phase":"Execution","exceptionMsg":"org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 1215.0 failed 1 times, most recent failure: Lost task 0.0 in stage 1215.0 (TID 1215, localhost, executor driver): java.lang.RuntimeException: Error while encoding: java.lang.ArrayIndexOutOfBoundsException: 23\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, app_id), StringType), true) AS app_id#1174140\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, platform), StringType), true) AS platform#1174141\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, etl_tstamp), StringType), true) AS etl_tstamp#1174142\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, collector_tstamp), StringType), true) AS collector_tstamp#1174143\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, dvce_created_tstamp), StringType), true) AS dvce_created_tstamp#1174144\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, event), StringType), true) AS event#1174145\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, event_id), StringType), true) AS event_id#1174146\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, txn_id), StringType), true) AS txn_id#1174147\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, name_tracker), StringType), true) AS name_tracker#1174148\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, v_tracker), StringType), true) AS v_tracker#1174149\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, v_collector), StringType), true) AS v_collector#1174150\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, v_etl), StringType), true) AS v_etl#1174151\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 12, user_id), StringType), true) AS user_id#1174152\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 13, user_ipaddress), StringType), true) AS user_ipaddress#1174153\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 14, user_fingerprint), StringType), true) AS user_fingerprint#1174154\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 15, domain_userid), StringType), true) AS domain_userid#1174155\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 16, domain_sessionidx), StringType), true) AS domain_sessionidx#1174156\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 17, network_userid), StringType), true) AS network_userid#1174157\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 18, geo_country), StringType), true) AS geo_country#1174158\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 19, geo_region), StringType), true) AS geo_region#1174159\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 20, geo_city), StringType), true) AS geo_city#1174160\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 21, geo_zipcode), StringType), true) AS geo_zipcode#1174161\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 22, geo_latitude), StringType), true) AS geo_latitude#1174162\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 23, geo_longitude), StringType), true) AS geo_longitude#1174163\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 24, geo_region_name), StringType), true) AS geo_region_name#1174164\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 25, ip_isp), StringType), true) AS ip_isp#1174165\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 26, ip_organization), StringType), true) AS ip_organization#1174166\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 27, ip_domain), StringType), true) AS ip_domain#1174167\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 28, ip_netspeed), StringType), true) AS ip_netspeed#1174168\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 29, page_url), StringType), true) AS page_url#1174169\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 30, page_title), StringType), true) AS page_title#1174170\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 31, page_referrer), StringType), true) AS page_referrer#1174171\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 32, page_urlscheme), StringType), true) AS page_urlscheme#1174172\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 33, page_urlhost), StringType), true) AS page_urlhost#1174173\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 34, page_urlport), StringType), true) AS page_urlport#1174174\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 35, page_urlpath), StringType), true) AS page_urlpath#1174175\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 36, page_urlquery), StringType), true) AS page_urlquery#1174176\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 37, page_urlfragment), StringType), true) AS page_urlfragment#1174177\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 38, refr_urlscheme), StringType), true) AS refr_urlscheme#1174178\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 39, refr_urlhost), StringType), true) AS refr_urlhost#1174179\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 40, refr_urlport), StringType), true) AS refr_urlport#1174180\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 41, refr_urlpath), StringType), true) AS refr_urlpath#1174181\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 42, refr_urlquery), StringType), true) AS refr_urlquery#1174182\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 43, refr_urlfragment), StringType), true) AS refr_urlfragment#1174183\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 44, refr_medium), StringType), true) AS refr_medium#1174184\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 45, refr_source), StringType), true) AS refr_source#1174185\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 46, refr_term), StringType), true) AS refr_term#1174186\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 47, mkt_medium), StringType), true) AS mkt_medium#1174187\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 48, mkt_source), StringType), true) AS mkt_source#1174188\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 49, mkt_term), StringType), true) AS mkt_term#1174189\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 50, mkt_content), StringType), true) AS mkt_content#1174190\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 51, mkt_campaign), StringType), true) AS mkt_campaign#1174191\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 52, contexts), StringType), true) AS contexts#1174192\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 53, se_category), StringType), true) AS se_category#1174193\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 54, se_action), StringType), true) AS se_action#1174194\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 55, se_label), StringType), true) AS se_label#1174195\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 56, se_property), StringType), true) AS se_property#1174196\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 57, se_value), StringType), true) AS se_value#1174197\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 58, unstruct_event), StringType), true) AS unstruct_event#1174198\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 59, tr_orderid), StringType), true) AS tr_orderid#1174199\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 60, tr_affiliation), StringType), true) AS tr_affiliation#1174200\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 61, tr_total), StringType), true) AS tr_total#1174201\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 62, tr_tax), StringType), true) AS tr_tax#1174202\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 63, tr_shipping), StringType), true) AS tr_shipping#1174203\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 64, tr_city), StringType), true) AS tr_city#1174204\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 65, tr_state), StringType), true) AS tr_state#1174205\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 66, tr_country), StringType), true) AS tr_country#1174206\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 67, ti_orderid), StringType), true) AS ti_orderid#1174207\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 68, ti_sku), StringType), true) AS ti_sku#1174208\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 69, ti_name), StringType), true) AS ti_name#1174209\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 70, ti_category), StringType), true) AS ti_category#1174210\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 71, ti_price), StringType), true) AS ti_price#1174211\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 72, ti_quantity), StringType), true) AS ti_quantity#1174212\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 73, pp_xoffset_min), StringType), true) AS pp_xoffset_min#1174213\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 74, pp_xoffset_max), StringType), true) AS pp_xoffset_max#1174214\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 75, pp_yoffset_min), StringType), true) AS pp_yoffset_min#1174215\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 76, pp_yoffset_max), StringType), true) AS pp_yoffset_max#1174216\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 77, useragent), StringType), true) AS useragent#1174217\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 78, br_name), StringType), true) AS br_name#1174218\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 79, br_family), StringType), true) AS br_family#1174219\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 80, br_version), StringType), true) AS br_version#1174220\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 81, br_type), StringType), true) AS br_type#1174221\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 82, br_renderengine), StringType), true) AS br_renderengine#1174222\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 83, br_lang), StringType), true) AS br_lang#1174223\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 84, br_features_pdf), StringType), true) AS br_features_pdf#1174224\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 85, br_features_flash), StringType), true) AS br_features_flash#1174225\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 86, br_features_java), StringType), true) AS br_features_java#1174226\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 87, br_features_director), StringType), true) AS br_features_director#1174227\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 88, br_features_quicktime), StringType), true) AS br_features_quicktime#1174228\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 89, br_features_realplayer), StringType), true) AS br_features_realplayer#1174229\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 90, br_features_windowsmedia), StringType), true) AS br_features_windowsmedia#1174230\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 91, br_features_gears), StringType), true) AS br_features_gears#1174231\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 92, br_features_silverlight), StringType), true) AS br_features_silverlight#1174232\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 93, br_cookies), StringType), true) AS br_cookies#1174233\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 94, br_colordepth), StringType), true) AS br_colordepth#1174234\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 95, br_viewwidth), StringType), true) AS br_viewwidth#1174235\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 96, br_viewheight), StringType), true) AS br_viewheight#1174236\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 97, os_name), StringType), true) AS os_name#1174237\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 98, os_family), StringType), true) AS os_family#1174238\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 99, os_manufacturer), StringType), true) AS os_manufacturer#1174239\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 100, os_timezone), StringType), true) AS os_timezone#1174240\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 101, dvce_type), StringType), true) AS dvce_type#1174241\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 102, dvce_ismobile), StringType), true) AS dvce_ismobile#1174242\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 103, dvce_screenwidth), StringType), true) AS dvce_screenwidth#1174243\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 104, dvce_screenheight), StringType), true) AS dvce_screenheight#1174244\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 105, doc_charset), StringType), true) AS doc_charset#1174245\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 106, doc_width), StringType), true) AS doc_width#1174246\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 107, doc_height), StringType), true) AS doc_height#1174247\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 108, tr_currency), StringType), true) AS tr_currency#1174248\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 109, tr_total_base), StringType), true) AS tr_total_base#1174249\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 110, tr_tax_base), StringType), true) AS tr_tax_base#1174250\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 111, tr_shipping_base), StringType), true) AS tr_shipping_base#1174251\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 112, ti_currency), StringType), true) AS ti_currency#1174252\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 113, ti_price_base), StringType), true) AS ti_price_base#1174253\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 114, base_currency), StringType), true) AS base_currency#1174254\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 115, geo_timezone), StringType), true) AS geo_timezone#1174255\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 116, mkt_clickid), StringType), true) AS mkt_clickid#1174256\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 117, mkt_network), StringType), true) AS mkt_network#1174257\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 118, etl_tags), StringType), true) AS etl_tags#1174258\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 119, dvce_sent_tstamp), StringType), true) AS dvce_sent_tstamp#1174259\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 120, refr_domain_userid), StringType), true) AS refr_domain_userid#1174260\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 121, refr_dvce_tstamp), StringType), true) AS refr_dvce_tstamp#1174261\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 122, derived_contexts), StringType), true) AS derived_contexts#1174262\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 123, domain_sessionid), StringType), true) AS domain_sessionid#1174263\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 124, derived_tstamp), StringType), true) AS derived_tstamp#1174264\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 125, event_vendor), StringType), true) AS event_vendor#1174265\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 126, event_name), StringType), true) AS event_name#1174266\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 127, event_format), StringType), true) AS event_format#1174267\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 128, event_version), StringType), true) AS event_version#1174268\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 129, event_fingerprint), StringType), true) AS event_fingerprint#1174269\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 130, true_tstamp), StringType), true) AS true_tstamp#1174270\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else mapobjects(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), if (isnull(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)))) null else named_struct(data, if (validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else named_struct(_ga, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 0, _ga), StringType), true), chromeFirstPaint, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 1, chromeFirstPaint), LongType), connectEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 2, connectEnd), LongType), connectStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 3, connectStart), LongType), domComplete, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 4, domComplete), LongType), domContentLoadedEventEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 5, domContentLoadedEventEnd), LongType), domContentLoadedEventStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 6, domContentLoadedEventStart), LongType), domInteractive, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 7, domInteractive), LongType), domLoading, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 8, domLoading), LongType), domainLookupEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 9, domainLookupEnd), LongType), domainLookupStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 10, domainLookupStart), LongType), fetchStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 11, fetchStart), LongType), ... 24 more fields), schema, if (validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 1, schema), StringType), true)), validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 131, data), ArrayType(StructType(StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)),true)), None) AS data#1174271\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 132, schema), StringType), true) AS schema#1174272\n\tat org.apache.spark.sql.catalyst.encoders.ExpressionEncoder.toRow(ExpressionEncoder.scala:290)\n\tat org.apache.spark.sql.SparkSession$$anonfun$3.apply(SparkSession.scala:581)\n\tat org.apache.spark.sql.SparkSession$$anonfun$3.apply(SparkSession.scala:581)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n\tat scala.collection.Iterator$JoinIterator.hasNext(Iterator.scala:211)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1.apply(SpartaJdbcUtils.scala:237)\n\tat org.apache.spark.sql.jdbc.SpartaJdbcUtils$$anonfun$saveTable$1.apply(SpartaJdbcUtils.scala:236)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1$$anonfun$apply$29.apply(RDD.scala:926)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2093)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2093)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:88)\n\tat org.apache.spark.scheduler.Task$$anonfun$run$2.apply(Task.scala:109)\n\tat org.apache.spark.scheduler.Task$$anonfun$run$2.apply(Task.scala:109)\n\tat org.apache.spark.scheduler.KerberosFunction$.executeSecure(KerberosFunction.scala:35)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:109)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 23\n\tat org.apache.spark.sql.catalyst.expressions.GenericRow.get(rows.scala:173)\n\tat org.apache.spark.sql.Row$class.isNullAt(Row.scala:191)\n\tat org.apache.spark.sql.catalyst.expressions.GenericRow.isNullAt(rows.scala:165)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.evalIfCondExpr154$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply_7$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply1_0$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.evalIfFalseExpr156$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply4_64$(Unknown Source)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply(Unknown Source)\n\tat org.apache.spark.sql.catalyst.encoders.ExpressionEncoder.toRow(ExpressionEncoder.scala:287)\n\t... 36 more\n\nDriver stacktrace:","localizedMsg":"Error while encoding: java.lang.ArrayIndexOutOfBoundsException: 23\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, app_id), StringType), true) AS app_id#1174140\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, platform), StringType), true) AS platform#1174141\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, etl_tstamp), StringType), true) AS etl_tstamp#1174142\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, collector_tstamp), StringType), true) AS collector_tstamp#1174143\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, dvce_created_tstamp), StringType), true) AS dvce_created_tstamp#1174144\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, event), StringType), true) AS event#1174145\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, event_id), StringType), true) AS event_id#1174146\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, txn_id), StringType), true) AS txn_id#1174147\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, name_tracker), StringType), true) AS name_tracker#1174148\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, v_tracker), StringType), true) AS v_tracker#1174149\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, v_collector), StringType), true) AS v_collector#1174150\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, v_etl), StringType), true) AS v_etl#1174151\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 12, user_id), StringType), true) AS user_id#1174152\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 13, user_ipaddress), StringType), true) AS user_ipaddress#1174153\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 14, user_fingerprint), StringType), true) AS user_fingerprint#1174154\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 15, domain_userid), StringType), true) AS domain_userid#1174155\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 16, domain_sessionidx), StringType), true) AS domain_sessionidx#1174156\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 17, network_userid), StringType), true) AS network_userid#1174157\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 18, geo_country), StringType), true) AS geo_country#1174158\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 19, geo_region), StringType), true) AS geo_region#1174159\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 20, geo_city), StringType), true) AS geo_city#1174160\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 21, geo_zipcode), StringType), true) AS geo_zipcode#1174161\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 22, geo_latitude), StringType), true) AS geo_latitude#1174162\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 23, geo_longitude), StringType), true) AS geo_longitude#1174163\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 24, geo_region_name), StringType), true) AS geo_region_name#1174164\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 25, ip_isp), StringType), true) AS ip_isp#1174165\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 26, ip_organization), StringType), true) AS ip_organization#1174166\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 27, ip_domain), StringType), true) AS ip_domain#1174167\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 28, ip_netspeed), StringType), true) AS ip_netspeed#1174168\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 29, page_url), StringType), true) AS page_url#1174169\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 30, page_title), StringType), true) AS page_title#1174170\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 31, page_referrer), StringType), true) AS page_referrer#1174171\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 32, page_urlscheme), StringType), true) AS page_urlscheme#1174172\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 33, page_urlhost), StringType), true) AS page_urlhost#1174173\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 34, page_urlport), StringType), true) AS page_urlport#1174174\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 35, page_urlpath), StringType), true) AS page_urlpath#1174175\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 36, page_urlquery), StringType), true) AS page_urlquery#1174176\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 37, page_urlfragment), StringType), true) AS page_urlfragment#1174177\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 38, refr_urlscheme), StringType), true) AS refr_urlscheme#1174178\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 39, refr_urlhost), StringType), true) AS refr_urlhost#1174179\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 40, refr_urlport), StringType), true) AS refr_urlport#1174180\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 41, refr_urlpath), StringType), true) AS refr_urlpath#1174181\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 42, refr_urlquery), StringType), true) AS refr_urlquery#1174182\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 43, refr_urlfragment), StringType), true) AS refr_urlfragment#1174183\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 44, refr_medium), StringType), true) AS refr_medium#1174184\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 45, refr_source), StringType), true) AS refr_source#1174185\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 46, refr_term), StringType), true) AS refr_term#1174186\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 47, mkt_medium), StringType), true) AS mkt_medium#1174187\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 48, mkt_source), StringType), true) AS mkt_source#1174188\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 49, mkt_term), StringType), true) AS mkt_term#1174189\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 50, mkt_content), StringType), true) AS mkt_content#1174190\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 51, mkt_campaign), StringType), true) AS mkt_campaign#1174191\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 52, contexts), StringType), true) AS contexts#1174192\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 53, se_category), StringType), true) AS se_category#1174193\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 54, se_action), StringType), true) AS se_action#1174194\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 55, se_label), StringType), true) AS se_label#1174195\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 56, se_property), StringType), true) AS se_property#1174196\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 57, se_value), StringType), true) AS se_value#1174197\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 58, unstruct_event), StringType), true) AS unstruct_event#1174198\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 59, tr_orderid), StringType), true) AS tr_orderid#1174199\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 60, tr_affiliation), StringType), true) AS tr_affiliation#1174200\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 61, tr_total), StringType), true) AS tr_total#1174201\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 62, tr_tax), StringType), true) AS tr_tax#1174202\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 63, tr_shipping), StringType), true) AS tr_shipping#1174203\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 64, tr_city), StringType), true) AS tr_city#1174204\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 65, tr_state), StringType), true) AS tr_state#1174205\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 66, tr_country), StringType), true) AS tr_country#1174206\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 67, ti_orderid), StringType), true) AS ti_orderid#1174207\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 68, ti_sku), StringType), true) AS ti_sku#1174208\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 69, ti_name), StringType), true) AS ti_name#1174209\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 70, ti_category), StringType), true) AS ti_category#1174210\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 71, ti_price), StringType), true) AS ti_price#1174211\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 72, ti_quantity), StringType), true) AS ti_quantity#1174212\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 73, pp_xoffset_min), StringType), true) AS pp_xoffset_min#1174213\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 74, pp_xoffset_max), StringType), true) AS pp_xoffset_max#1174214\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 75, pp_yoffset_min), StringType), true) AS pp_yoffset_min#1174215\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 76, pp_yoffset_max), StringType), true) AS pp_yoffset_max#1174216\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 77, useragent), StringType), true) AS useragent#1174217\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 78, br_name), StringType), true) AS br_name#1174218\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 79, br_family), StringType), true) AS br_family#1174219\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 80, br_version), StringType), true) AS br_version#1174220\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 81, br_type), StringType), true) AS br_type#1174221\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 82, br_renderengine), StringType), true) AS br_renderengine#1174222\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 83, br_lang), StringType), true) AS br_lang#1174223\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 84, br_features_pdf), StringType), true) AS br_features_pdf#1174224\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 85, br_features_flash), StringType), true) AS br_features_flash#1174225\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 86, br_features_java), StringType), true) AS br_features_java#1174226\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 87, br_features_director), StringType), true) AS br_features_director#1174227\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 88, br_features_quicktime), StringType), true) AS br_features_quicktime#1174228\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 89, br_features_realplayer), StringType), true) AS br_features_realplayer#1174229\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 90, br_features_windowsmedia), StringType), true) AS br_features_windowsmedia#1174230\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 91, br_features_gears), StringType), true) AS br_features_gears#1174231\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 92, br_features_silverlight), StringType), true) AS br_features_silverlight#1174232\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 93, br_cookies), StringType), true) AS br_cookies#1174233\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 94, br_colordepth), StringType), true) AS br_colordepth#1174234\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 95, br_viewwidth), StringType), true) AS br_viewwidth#1174235\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 96, br_viewheight), StringType), true) AS br_viewheight#1174236\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 97, os_name), StringType), true) AS os_name#1174237\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 98, os_family), StringType), true) AS os_family#1174238\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 99, os_manufacturer), StringType), true) AS os_manufacturer#1174239\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 100, os_timezone), StringType), true) AS os_timezone#1174240\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 101, dvce_type), StringType), true) AS dvce_type#1174241\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 102, dvce_ismobile), StringType), true) AS dvce_ismobile#1174242\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 103, dvce_screenwidth), StringType), true) AS dvce_screenwidth#1174243\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 104, dvce_screenheight), StringType), true) AS dvce_screenheight#1174244\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 105, doc_charset), StringType), true) AS doc_charset#1174245\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 106, doc_width), StringType), true) AS doc_width#1174246\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 107, doc_height), StringType), true) AS doc_height#1174247\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 108, tr_currency), StringType), true) AS tr_currency#1174248\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 109, tr_total_base), StringType), true) AS tr_total_base#1174249\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 110, tr_tax_base), StringType), true) AS tr_tax_base#1174250\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 111, tr_shipping_base), StringType), true) AS tr_shipping_base#1174251\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 112, ti_currency), StringType), true) AS ti_currency#1174252\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 113, ti_price_base), StringType), true) AS ti_price_base#1174253\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 114, base_currency), StringType), true) AS base_currency#1174254\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 115, geo_timezone), StringType), true) AS geo_timezone#1174255\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 116, mkt_clickid), StringType), true) AS mkt_clickid#1174256\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 117, mkt_network), StringType), true) AS mkt_network#1174257\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 118, etl_tags), StringType), true) AS etl_tags#1174258\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 119, dvce_sent_tstamp), StringType), true) AS dvce_sent_tstamp#1174259\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 120, refr_domain_userid), StringType), true) AS refr_domain_userid#1174260\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 121, refr_dvce_tstamp), StringType), true) AS refr_dvce_tstamp#1174261\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 122, derived_contexts), StringType), true) AS derived_contexts#1174262\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 123, domain_sessionid), StringType), true) AS domain_sessionid#1174263\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 124, derived_tstamp), StringType), true) AS derived_tstamp#1174264\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 125, event_vendor), StringType), true) AS event_vendor#1174265\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 126, event_name), StringType), true) AS event_name#1174266\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 127, event_format), StringType), true) AS event_format#1174267\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 128, event_version), StringType), true) AS event_version#1174268\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 129, event_fingerprint), StringType), true) AS event_fingerprint#1174269\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 130, true_tstamp), StringType), true) AS true_tstamp#1174270\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else mapobjects(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), if (isnull(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)))) null else named_struct(data, if (validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else named_struct(_ga, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 0, _ga), StringType), true), chromeFirstPaint, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 1, chromeFirstPaint), LongType), connectEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 2, connectEnd), LongType), connectStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 3, connectStart), LongType), domComplete, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 4, domComplete), LongType), domContentLoadedEventEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 5, domContentLoadedEventEnd), LongType), domContentLoadedEventStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 6, domContentLoadedEventStart), LongType), domInteractive, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 7, domInteractive), LongType), domLoading, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 8, domLoading), LongType), domainLookupEnd, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 9, domainLookupEnd), LongType), domainLookupStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 10, domainLookupStart), LongType), fetchStart, if (validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)).isNullAt) null else validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 0, data), StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)), 11, fetchStart), LongType), ... 24 more fields), schema, if (validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(lambdavariable(MapObjects_loopValue3344, MapObjects_loopIsNull3344, ObjectType(class java.lang.Object), true), StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)), 1, schema), StringType), true)), validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 131, data), ArrayType(StructType(StructField(data,StructType(StructField(_ga,StringType,true), StructField(chromeFirstPaint,LongType,true), StructField(connectEnd,LongType,true), StructField(connectStart,LongType,true), StructField(domComplete,LongType,true), StructField(domContentLoadedEventEnd,LongType,true), StructField(domContentLoadedEventStart,LongType,true), StructField(domInteractive,LongType,true), StructField(domLoading,LongType,true), StructField(domainLookupEnd,LongType,true), StructField(domainLookupStart,LongType,true), StructField(fetchStart,LongType,true), StructField(id,StringType,true), StructField(loadEventEnd,LongType,true), StructField(loadEventStart,LongType,true), StructField(navigationStart,LongType,true), StructField(redirectEnd,LongType,true), StructField(redirectStart,LongType,true), StructField(requestStart,LongType,true), StructField(responseEnd,LongType,true), StructField(responseStart,LongType,true), StructField(secureConnectionStart,LongType,true), StructField(unloadEventEnd,LongType,true), StructField(unloadEventStart,LongType,true)),true), StructField(schema,StringType,true)),true)), None) AS data#1174271\nif (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 132, schema), StringType), true) AS schema#1174272","date":"2018-11-05T15:10:27Z"}}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);
INSERT INTO sparta.workflow_execution (workflow_execution_id, execution_status, generic_data_execution, spark_submit_execution, spark_execution, spark_dispatcher_execution, marathon_execution, local_execution, archived) VALUES ('ce71a3bc-ae21-49a9-b397-648016a3851f', '[{"state":"Failed","statusInfo":"Error initiating the workflow","lastUpdateDate":"2018-11-05T14:54:47Z"},{"state":"Started","statusInfo":"Workflow started successfully","lastUpdateDate":"2018-11-05T14:54:29Z"},{"state":"Starting","statusInfo":"Starting workflow in local mode","lastUpdateDate":"2018-11-05T14:54:29Z"},{"state":"NotStarted","statusInfo":"Execution state changed to NotStarted","lastUpdateDate":"2018-11-05T14:54:29Z"},{"state":"Created","statusInfo":"Workflow execution created correctly","lastUpdateDate":"2018-11-05T14:54:29Z"}]', '{"workflow":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"2s","remember":"","backpressure":false,"blockInterval":"100ms","stopGracefully":true,"checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml"},"sparkConf":{"sparkResourcesConf":{"coresMax":"2","executorMemory":"2G","executorCores":"1","driverCores":"1","driverMemory":"2G","mesosExtraCores":"","localityWait":"100","taskMaxFailures":"8","sparkMemoryFraction":"0.6","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"/opt/spark/dist","executorDockerImage":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"raw","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"parametersUsedInExecution":{"Global.SPARK_DRIVER_MEMORY":"2G","Global.SPARK_LOCALITY_WAIT":"100","Global.SPARK_EXECUTOR_CORES":"1","Global.SPARK_LOCAL_PATH":"/opt/spark/dist","Global.SPARK_STREAMING_BLOCK_INTERVAL":"100ms","Global.SPARK_CORES_MAX":"2","Global.SPARK_STREAMING_CHECKPOINT_PATH":"sparta/checkpoint","Global.SPARK_MEMORY_FRACTION":"0.6","Global.SPARK_EXECUTOR_MEMORY":"2G","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS":"-Dfile.encoding=UTF-8  -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC","Global.SPARK_TASK_MAX_FAILURES":"8","Global.SPARK_EXECUTOR_BASE_IMAGE":"qa.stratio.com/stratio/spark-stratio-driver:2.2.0-2.0.0-ae1b428","Global.SPARK_STREAMING_WINDOW":"2s","Global.SPARK_DRIVER_JAVA_OPTIONS":"-Dfile.encoding=UTF-8 -Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml -Djava.util.logging.config.file=file:///etc/sds/sparta/log4j2.xml","Global.SPARK_DRIVER_CORES":"1","Global.DEFAULT_OUTPUT_FIELD":"raw"},"executionId":"ce71a3bc-ae21-49a9-b397-648016a3851f","groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"workflowRaw":{"id":"2f2c4839-9d7a-4b73-9554-5d98f682c9db","name":"touchai-postgres","description":"","settings":{"global":{"executionMode":"local","userPluginsJars":[],"preExecutionSqlSentences":[],"postExecutionSqlSentences":[],"addAllUploadedPlugins":false,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER","parametersLists":[],"parametersUsed":["Global.DEFAULT_OUTPUT_FIELD","Global.SPARK_CORES_MAX","Global.SPARK_DRIVER_CORES","Global.SPARK_DRIVER_JAVA_OPTIONS","Global.SPARK_DRIVER_MEMORY","Global.SPARK_EXECUTOR_BASE_IMAGE","Global.SPARK_EXECUTOR_CORES","Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS","Global.SPARK_EXECUTOR_MEMORY","Global.SPARK_LOCALITY_WAIT","Global.SPARK_LOCAL_PATH","Global.SPARK_MEMORY_FRACTION","Global.SPARK_STREAMING_BLOCK_INTERVAL","Global.SPARK_STREAMING_CHECKPOINT_PATH","Global.SPARK_STREAMING_WINDOW","Global.SPARK_TASK_MAX_FAILURES"],"udfsToRegister":[],"udafsToRegister":[]},"streamingSettings":{"window":"{{{Global.SPARK_STREAMING_WINDOW}}}","remember":"","backpressure":false,"blockInterval":"{{{Global.SPARK_STREAMING_BLOCK_INTERVAL}}}","stopGracefully":true,"checkpointSettings":{"checkpointPath":"{{{Global.SPARK_STREAMING_CHECKPOINT_PATH}}}","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"mesos://leader.mesos:5050","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{Global.SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"{{{Global.SPARK_CORES_MAX}}}","executorMemory":"{{{Global.SPARK_EXECUTOR_MEMORY}}}","executorCores":"{{{Global.SPARK_EXECUTOR_CORES}}}","driverCores":"{{{Global.SPARK_DRIVER_CORES}}}","driverMemory":"{{{Global.SPARK_DRIVER_MEMORY}}}","mesosExtraCores":"","localityWait":"{{{Global.SPARK_LOCALITY_WAIT}}}","taskMaxFailures":"{{{Global.SPARK_TASK_MAX_FAILURES}}}","sparkMemoryFraction":"{{{Global.SPARK_MEMORY_FRACTION}}}","sparkParallelism":""},"userSparkConf":[],"coarse":true,"sparkUser":"","sparkLocalDir":"{{{Global.SPARK_LOCAL_PATH}}}","executorDockerImage":"{{{Global.SPARK_EXECUTOR_BASE_IMAGE}}}","sparkKryoSerialization":false,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{Global.SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"Csv","stepType":"Transformation","className":"CsvTransformStep","classPrettyName":"Csv","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":633.2083740234375,"y":179.99996948242188}},"configuration":{"schema.inputMode":"HEADER","schema.header":"app_id\tplatform\tetl_tstamp\tcollector_tstamp\tdvce_created_tstamp\tevent\tevent_id\ttxn_id\tname_tracker\tv_tracker\tv_collector\tv_etl\tuser_id\tuser_ipaddress\tuser_fingerprint\tdomain_userid\tdomain_sessionidx\tnetwork_userid\tgeo_country\tgeo_region\tgeo_city\tgeo_zipcode\tgeo_latitude\tgeo_longitude\tgeo_region_name\tip_isp\tip_organization\tip_domain\tip_netspeed\tpage_url\tpage_title\tpage_referrer\tpage_urlscheme\tpage_urlhost\tpage_urlport\tpage_urlpath\tpage_urlquery\tpage_urlfragment\trefr_urlscheme\trefr_urlhost\trefr_urlport\trefr_urlpath\trefr_urlquery\trefr_urlfragment\trefr_medium\trefr_source\trefr_term\tmkt_medium\tmkt_source\tmkt_term\tmkt_content\tmkt_campaign\tcontexts\tse_category\tse_action\tse_label\tse_property\tse_value\tunstruct_event\ttr_orderid\ttr_affiliation\ttr_total\ttr_tax\ttr_shipping\ttr_city\ttr_state\ttr_country\tti_orderid\tti_sku\tti_name\tti_category\tti_price\tti_quantity\tpp_xoffset_min\tpp_xoffset_max\tpp_yoffset_min\tpp_yoffset_max\tuseragent\tbr_name\tbr_family\tbr_version\tbr_type\tbr_renderengine\tbr_lang\tbr_features_pdf\tbr_features_flash\tbr_features_java\tbr_features_director\tbr_features_quicktime\tbr_features_realplayer\tbr_features_windowsmedia\tbr_features_gears\tbr_features_silverlight\tbr_cookies\tbr_colordepth\tbr_viewwidth\tbr_viewheight\tos_name\tos_family\tos_manufacturer\tos_timezone\tdvce_type\tdvce_ismobile\tdvce_screenwidth\tdvce_screenheight\tdoc_charset\tdoc_width\tdoc_height\ttr_currency\ttr_total_base\ttr_tax_base\ttr_shipping_base\tti_currency\tti_price_base\tbase_currency\tgeo_timezone\tmkt_clickid\tmkt_network\tetl_tags\tdvce_sent_tstamp\trefr_domain_userid\trefr_dvce_tstamp\tderived_contexts\tdomain_sessionid\tderived_tstamp\tevent_vendor\tevent_name\tevent_format\tevent_version\tevent_fingerprint\ttrue_tstamp","delimiterType":"CHARACTER","inputSchemas":"[]","headerRemoval":false,"splitLimit":"-1","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"raw","delimiter":"\t"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Postgres","stepType":"Output","className":"PostgresOutputStep","classPrettyName":"Postgres","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":1570.638427734375,"y":181.3982084362409}},"configuration":{"errorSink":false,"url":"jdbc:postgresql://sparta-pg:5432/postgres?user=sparta","postgresSaveMode":"STATEMENT","batchsize":"1","isolationLevel":"READ_UNCOMMITTED","failFast":true,"tlsEnabled":false,"driver":"","schemaFromDatabase":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","lineageProperties":[]},{"name":"SelectColumns","stepType":"Transformation","className":"SelectTransformStep","classPrettyName":"Select","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.events","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":881.3718058268228,"y":180.79045403921577}},"configuration":{"selectType":"EXPRESSION","selectExp":"CAST(app_id AS string), \nCAST(platform AS string), \nCAST(etl_tstamp AS timestamp), \nCAST(collector_tstamp AS timestamp), \nCAST(dvce_created_tstamp AS timestamp), \nCAST(event AS string), \nCAST(event_id AS string), \nCAST(txn_id AS integer), \nCAST(name_tracker AS string), \nCAST(v_tracker AS string), \nCAST(v_collector AS string), \nCAST(v_etl AS string), \nCAST(user_id AS string), \nCAST(user_ipaddress AS string), \nCAST(user_fingerprint AS string), \nCAST(domain_userid AS string), \nCAST(domain_sessionidx AS integer), \nCAST(network_userid AS string), \nCAST(geo_country AS string), \nCAST(geo_region AS string), \nCAST(geo_city AS string), \nCAST(geo_zipcode AS string), \nCAST(geo_latitude AS double), \nCAST(geo_longitude AS double), \nCAST(geo_region_name AS string), \nCAST(ip_isp AS string), \nCAST(ip_organization AS string), \nCAST(ip_domain AS string), \nCAST(ip_netspeed AS string), \nCAST(page_url AS string), \nCAST(page_title AS string), \nCAST(page_referrer AS string), \nCAST(page_urlscheme AS string), \nCAST(page_urlhost AS string), \nCAST(page_urlport AS integer), \nCAST(page_urlpath AS string), \nCAST(page_urlquery AS string), \nCAST(page_urlfragment AS string), \nCAST(refr_urlscheme AS string), \nCAST(refr_urlhost AS string), \nCAST(refr_urlport AS integer), \nCAST(refr_urlpath AS string), \nCAST(refr_urlquery AS string), \nCAST(refr_urlfragment AS string), \nCAST(refr_medium AS string), \nCAST(refr_source AS string), \nCAST(refr_term AS string), \nCAST(mkt_medium AS string), \nCAST(mkt_source AS string), \nCAST(mkt_term AS string), \nCAST(mkt_content AS string), \nCAST(mkt_campaign AS string), \nCAST(se_category AS string), \nCAST(se_action AS string), \nCAST(se_label AS string), \nCAST(se_property AS string), \nCAST(se_value AS double), \nCAST(tr_orderid AS string), \nCAST(tr_affiliation AS string), \nCAST(tr_total AS double), \nCAST(tr_tax AS double), \nCAST(tr_shipping AS double), \nCAST(tr_city AS string), \nCAST(tr_state AS string), \nCAST(tr_country AS string), \nCAST(ti_orderid AS string), \nCAST(ti_sku AS string), \nCAST(ti_name AS string), \nCAST(ti_category AS string), \nCAST(ti_price AS double), \nCAST(ti_quantity AS integer), \nCAST(pp_xoffset_min AS integer), \nCAST(pp_xoffset_max AS integer), \nCAST(pp_yoffset_min AS integer), \nCAST(pp_yoffset_max AS integer), \nCAST(useragent AS string), \nCAST(br_name AS string), \nCAST(br_family AS string), \nCAST(br_version AS string), \nCAST(br_type AS string), \nCAST(br_renderengine AS string), \nCAST(br_lang AS string), \nCAST(br_features_pdf AS boolean), \nCAST(br_features_flash AS boolean), \nCAST(br_features_java AS boolean), \nCAST(br_features_director AS boolean), \nCAST(br_features_quicktime AS boolean), \nCAST(br_features_realplayer AS boolean), \nCAST(br_features_windowsmedia AS boolean), \nCAST(br_features_gears AS boolean), \nCAST(br_features_silverlight AS boolean), \nCAST(br_cookies AS boolean), \nCAST(br_colordepth AS string), \nCAST(br_viewwidth AS integer), \nCAST(br_viewheight AS integer), \nCAST(os_name AS string), \nCAST(os_family AS string), \nCAST(os_manufacturer AS string), \nCAST(os_timezone AS string), \nCAST(dvce_type AS string), \nCAST(dvce_ismobile AS boolean), \nCAST(dvce_screenwidth AS integer), \nCAST(dvce_screenheight AS integer), \nCAST(doc_charset AS string), \nCAST(doc_width AS integer), \nCAST(doc_height AS integer), \nCAST(tr_currency AS string), \nCAST(tr_total_base AS double), \nCAST(tr_tax_base AS double), \nCAST(tr_shipping_base AS double), \nCAST(ti_currency AS string), \nCAST(ti_price_base AS double), \nCAST(base_currency AS string), \nCAST(geo_timezone AS string), \nCAST(mkt_clickid AS string), \nCAST(mkt_network AS string), \nCAST(etl_tags AS string), \nCAST(dvce_sent_tstamp AS timestamp), \nCAST(refr_domain_userid AS string), \nCAST(refr_dvce_tstamp AS timestamp), \nCAST(domain_sessionid AS string), \nCAST(derived_tstamp AS timestamp), \nCAST(event_vendor AS string), \nCAST(event_name AS string), \nCAST(event_format AS string), \nCAST(event_version AS string), \nCAST(event_fingerprint AS string), \nCAST(true_tstamp AS timestamp)\n","inputSchemas":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Json_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":882.3877766927081,"y":306.150118956208}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Kafka","stepType":"Input","className":"KafkaInputStep","classPrettyName":"Kafka","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":410.8470708668809,"y":179.11746794610082}},"configuration":{"spark.streaming.kafka.consumer.poll.ms":"","locationStrategy":"preferconsistent","inputOptions":"[]","topics":[{"topic":"snowplow_enrich_good"}],"auto.offset.reset":"latest","partition.assignment.strategy":"range","outputField":"{{{Global.DEFAULT_OUTPUT_FIELD}}}","debugOptions":{"userProvidedExample":"touchai-test\tweb\t2018-10-31 13:26:15.823\t2018-10-31 13:26:15.819\t2018-10-31 13:26:15.811\tpage_view\t05b9aa2c-59e6-4e9c-a0b8-ae576fb54791\t\tcf\tjs-0.1.0-SNAPSHOT\tssc-0.14.0-kafka\tstream-enrich-0.18.0-common-0.34.0\talex123\t192.100.11.1\t2536032505\t05508805-07cb-480c-93c4-f8ed074fb1cf\t13\t5e1061b0-798e-4b25-a2b9-62ae9cb1f350\tUS\t\t\t\t37.751\t-97.822\t\t\t\t\t\thttp://0.0.0.0:8080/test.html?enableActivityTracking=true\tTouchAI Test\thttp://0.0.0.0:8080/test.html\thttp\t0.0.0.0\t8080\t/test.html\tenableActivityTracking=true\t\thttp\t0.0.0.0\t8080\t/test.html\t\t\tinternal\t\t\t\t\t\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\",\"data\":[{\"schema\":\"iglu:com.google.analytics/cookies/jsonschema/1-0-0\",\"data\":{}},{\"schema\":\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\",\"data\":{\"id\":\"82a16cde-1931-4eaa-977d-3753a035e329\"}},{\"schema\":\"iglu:org.w3/PerformanceTiming/jsonschema/1-0-0\",\"data\":{\"navigationStart\":1540992375640,\"unloadEventStart\":1540992375687,\"unloadEventEnd\":1540992375687,\"redirectStart\":0,\"redirectEnd\":0,\"fetchStart\":1540992375641,\"domainLookupStart\":1540992375671,\"domainLookupEnd\":1540992375671,\"connectStart\":1540992375671,\"connectEnd\":1540992375673,\"secureConnectionStart\":0,\"requestStart\":1540992375673,\"responseStart\":1540992375673,\"responseEnd\":1540992375673,\"domLoading\":1540992375687,\"domInteractive\":1540992375716,\"domContentLoadedEventStart\":1540992375718,\"domContentLoadedEventEnd\":1540992375723,\"domComplete\":0,\"loadEventStart\":0,\"loadEventEnd\":0}}]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\t\t\t\t\t\tes-ES\t0\t1\t0\t0\t0\t0\t0\t0\t0\t1\t24\t1920\t677\t\t\t\tEurope/Berlin\t\t\t1920\t1080\tUTF-8\t1906\t772\t\t\t\t\t\t\t\t\t\t\t\t2018-10-31 13:26:15.812\t\t\t{\"schema\":\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1\",\"data\":[{\"schema\":\"iglu:com.snowplowanalytics.snowplow/ua_parser_context/jsonschema/1-0-0\",\"data\":{\"useragentFamily\":\"Firefox\",\"useragentMajor\":\"63\",\"useragentMinor\":\"0\",\"useragentPatch\":null,\"useragentVersion\":\"Firefox 63.0\",\"osFamily\":\"Ubuntu\",\"osMajor\":null,\"osMinor\":null,\"osPatch\":null,\"osPatchMinor\":null,\"osVersion\":\"Ubuntu\",\"deviceFamily\":\"Other\"}}]}\tb592b4d0-36dd-4e7d-955a-ac348e017086\t2018-10-31 13:26:15.818\tcom.snowplowanalytics.snowplow\tpage_view\tjsonschema\t1-0-0\t\t0"},"value.deserializer.inputFormat":"STRING","spark.streaming.kafka.maxRatePerPartition":"","tlsEnabled":false,"spark.streaming.kafka.consumer.cache.enabled":false,"group.id":"group1","bootstrap.servers":[{"host":"sparta-kafka","port":"9092"}],"enable.auto.commit":false,"storeOffsetInKafka":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Explode","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1111.6912053518827,"y":306.42761543371904}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_web_page_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.9685989516345,"y":306.42764950612906}},"configuration":{"sql":"select \nevent_id as root_id, \ndata.data.id as id\nfrom Explode\nwhere data.data.id is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Json_derived_contexts","stepType":"Transformation","className":"JsonTransformStep","classPrettyName":"Json","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":878.2273525573465,"y":516.3503021400531}},"configuration":{"inputSchemas":"[]","schema.fromRow":true,"whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"APPEND","inputField":"derived_contexts"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Trigger_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.com_snowplowanalytics_snowplow_ua_parser_context_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1336.5523987910224,"y":515.0934763461398}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.useragentFamily AS string) AS useragent_family,\nCAST(data.data.useragentMajor AS string) AS useragent_major,\nCAST(data.data.useragentMinor AS string) AS useragent_minor,\nCAST(data.data.useragentPatch AS string) AS useragent_patch,\nCAST(data.data.useragentVersion AS string) AS useragent_version,\nCAST(data.data.osFamily AS string) AS os_family,\nCAST(data.data.osMajor AS string) AS os_major,\nCAST(data.data.osMinor AS string) AS os_minor,\nCAST(data.data.osPatch AS string) AS os_patch,\nCAST(data.data.osPatchMinor AS string) AS os_patch_minor,\nCAST(data.data.osVersion AS string) AS os_version,\nCAST(data.data.deviceFamily AS string) AS device_family\nfrom Explode_1","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]},{"name":"Explode_1","stepType":"Transformation","className":"ExplodeTransformStep","classPrettyName":"Explode","arity":["UnaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1114.7807991844643,"y":515.482659494252}},"configuration":{"explodedField":"data","inputSchemas":"[]","whenFieldError":"","whenRowError":"","fieldsPreservationPolicy":"REPLACE","inputField":"data"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Streaming","supportedDataRelations":["ValidData"],"lineageProperties":[]},{"name":"Trigger_1_1","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary"],"writer":{"saveMode":"Append","tableName":"atomic.org_w3_performance_timing_1","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1338.4827414096906,"y":409.91550559078473}},"configuration":{"sql":"select \nevent_id as root_id,\nCAST(data.data.navigationStart AS long) AS navigation_start,\nCAST(data.data.unloadEventStart AS long) AS unload_event_start,\nCAST(data.data.unloadEventEnd AS long) AS unload_event_end,\nCAST(data.data.redirectStart AS long) AS redirect_start,\nCAST(data.data.redirectEnd AS long) AS redirect_end,\nCAST(data.data.fetchStart AS long) AS fetch_start,\nCAST(data.data.domainLookupStart AS long) AS domain_lookup_start,\nCAST(data.data.domainLookupEnd AS long) AS domain_lookup_end,\nCAST(data.data.connectStart AS long) AS connect_start,\nCAST(data.data.connectEnd AS long) AS connect_end,\nCAST(data.data.secureConnectionStart AS long) AS secure_connection_start,\nCAST(data.data.requestStart AS long) AS request_start,\nCAST(data.data.responseStart AS long) AS response_start,\nCAST(data.data.responseEnd AS long) AS response_end,\nCAST(data.data.domLoading AS long) AS dom_loading,\nCAST(data.data.domInteractive AS long) AS dom_interactive,\nCAST(data.data.domContentLoadedEventStart AS long) AS dom_content_loaded_event_start,\nCAST(data.data.domContentLoadedEventEnd AS long) AS dom_content_loaded_event_end,\nCAST(data.data.domComplete AS long) AS dom_complete,\nCAST(data.data.loadEventStart AS long) AS load_event_start,\nCAST(data.data.loadEventEnd AS long) AS load_event_end\nfrom Explode\nwhere data.data.navigationStart is not null","discardConditions":"[]","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Streaming"],"executionEngine":"Streaming","supportedDataRelations":["ValidData","DiscardedData"],"lineageProperties":[]}],"edges":[{"origin":"Csv","destination":"SelectColumns","dataType":"ValidData"},{"origin":"SelectColumns","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_contexts","dataType":"ValidData"},{"origin":"Kafka","destination":"Csv","dataType":"ValidData"},{"origin":"Json_contexts","destination":"Explode","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger","dataType":"ValidData"},{"origin":"Trigger","destination":"Postgres","dataType":"ValidData"},{"origin":"Csv","destination":"Json_derived_contexts","dataType":"ValidData"},{"origin":"Json_derived_contexts","destination":"Explode_1","dataType":"ValidData"},{"origin":"Explode_1","destination":"Trigger_1","dataType":"ValidData"},{"origin":"Trigger_1","destination":"Postgres","dataType":"ValidData"},{"origin":"Explode","destination":"Trigger_1_1","dataType":"ValidData"},{"origin":"Trigger_1_1","destination":"Postgres","dataType":"ValidData"}]},"executionEngine":"Streaming","uiSettings":{"position":{"x":-35.033285998030124,"y":-77.17057033677514,"k":0.7957019281171375}},"lastUpdateDate":"2018-11-05T14:17:43Z","version":2,"group":{"id":"940800b2-6d81-44a8-84d9-26913a2faea4","name":"/home"},"debugMode":false,"groupId":"940800b2-6d81-44a8-84d9-26913a2faea4"},"executionMode":"local","executionContext":{"extraParams":[],"paramsLists":["-"]},"launchDate":"2018-11-05T14:54:29Z","startDate":"2018-11-05T14:54:29Z","endDate":"2018-11-05T14:54:48Z","lastError":{"message":"Error initiating the workflow","phase":"Execution","exceptionMsg":"org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 129.0 failed 1 times, most recent failure: Lost task 0.0 in stage 129.0 (TID 129, localhost, executor driver): org.apache.spark.sql.AnalysisException: No such struct field navigationStart in _ga, id; line 25 pos 6\n\tat org.apache.spark.sql.catalyst.expressions.ExtractValue$.findField(complexTypeExtractors.scala:85)\n\tat org.apache.spark.sql.catalyst.expressions.ExtractValue$.apply(complexTypeExtractors.scala:53)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$3.apply(LogicalPlan.scala:276)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$3.apply(LogicalPlan.scala:275)\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n\tat scala.collection.immutable.List.foldLeft(List.scala:84)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:275)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren(LogicalPlan.scala:171)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6$$anonfun$37.apply(Analyzer.scala:851)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6$$anonfun$37.apply(Analyzer.scala:851)\n\tat org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6.applyOrElse(Analyzer.scala:851)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6.applyOrElse(Analyzer.scala:848)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:288)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:306)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:304)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:286)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:279)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:289)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$6.apply(QueryPlan.scala:298)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:298)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:268)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:848)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:790)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:62)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:62)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:61)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:59)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$1.apply(LogicalPlan.scala:59)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:306)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:304)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:59)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:790)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:668)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:85)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:82)\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n\tat scala.collection.immutable.List.foldLeft(List.scala:84)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:82)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:74)\n\tat scala.collection.immutable.List.foreach(List.scala:381)\n\tat org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:74)\n\tat org.apache.spark.sql.crossdata.execution.XDQueryExecution.analyzed$lzycompute(XDQueryExecution.scala:311)\n\tat org.apache.spark.sql.crossdata.execution.XDQueryExecution.analyzed(XDQueryExecution.scala:309)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:50)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:66)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:631)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1$$anonfun$2.apply(TriggerTransformStepStreaming.scala:62)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1$$anonfun$2.apply(TriggerTransformStepStreaming.scala:55)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1.apply(TriggerTransformStepStreaming.scala:55)\n\tat com.stratio.sparta.plugin.workflow.transformation.trigger.TriggerTransformStepStreaming$$anonfun$1.apply(TriggerTransformStepStreaming.scala:54)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$1$$anonfun$apply$21.apply(DStream.scala:667)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$1$$anonfun$apply$21.apply(DStream.scala:667)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$2$$anonfun$5.apply(DStream.scala:681)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$transform$2$$anonfun$5.apply(DStream.scala:679)\n\tat org.apache.spark.streaming.dstream.TransformedDStream.compute(TransformedDStream.scala:46)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1$$anonfun$apply$7.apply(DStream.scala:342)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1$$anonfun$apply$7.apply(DStream.scala:342)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1.apply(DStream.scala:341)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1$$anonfun$1.apply(DStream.scala:341)\n\tat org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties(DStream.scala:416)\n\tat org.apache.spark.streaming.dstream.TransformedDStream.createRDDWithLocalProperties(TransformedDStream.scala:65)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1.apply(DStream.scala:336)\n\tat org.apache.spark.streaming.dstream.DStream$$anonfun$getOrCompute$1.apply(DStream.scala:334)\n\tat scala.Option.orElse(Option.scala:289)\n\tat org.apache.spark.streaming.dstream.DStream.getOrCompute(DStream.scala:331)\n\tat org.apache.spark.streaming.dstream.ForEachDStream.generateJob(ForEachDStream.scala:48)\n\tat org.apache.spark.streaming.DStreamGraph$$anonfun$1.apply(DStreamGraph.scala:122)\n\tat org.apache.spark.streaming.DStreamGraph$$anonfun$1.apply(DStreamGraph.scala:121)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\n\tat scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\n\tat org.apache.spark.streaming.DStreamGraph.generateJobs(DStreamGraph.scala:121)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anonfun$3.apply(JobGenerator.scala:249)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anonfun$3.apply(JobGenerator.scala:247)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat org.apache.spark.streaming.scheduler.JobGenerator.generateJobs(JobGenerator.scala:247)\n\tat org.apache.spark.streaming.scheduler.JobGenerator.org$apache$spark$streaming$scheduler$JobGenerator$$processEvent(JobGenerator.scala:183)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anon$1.onReceive(JobGenerator.scala:89)\n\tat org.apache.spark.streaming.scheduler.JobGenerator$$anon$1.onReceive(JobGenerator.scala:88)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n\nDriver stacktrace:","localizedMsg":"No such struct field navigationStart in _ga, id; line 25 pos 6","date":"2018-11-05T14:54:47Z"}}', '', '', '', '', '{"sparkURI":"http://localhost:4041"}', false);


--
-- Data for Name: page_views_tmp; Type: TABLE DATA; Schema: web; Owner: sparta
--

INSERT INTO web.page_views_tmp (user_custom_id, user_snowplow_domain_id, user_snowplow_crossdomain_id, session_id, session_index, page_view_id, page_view_index, page_view_in_session_index, page_view_start, page_view_end, page_view_time, page_view_minute, page_view_hour, page_view_date, page_view_week, page_view_month, page_view_quarter, page_view_year, page_view_start_local, page_view_end_local, page_view_local_time, page_view_local_time_of_day, page_view_local_hour_of_day, page_view_local_day_of_week, page_view_local_day_of_week_index, time_engaged_in_s, time_engaged_in_s_tier, horizontal_pixels_scrolled, vertical_pixels_scrolled, horizontal_percentage_scrolled, vertical_percentage_scrolled, vertical_percentage_scrolled_tier, user_bounced, user_engaged, page_url, page_url_scheme, page_url_host, page_url_port, page_url_path, page_url_query, page_url_fragment, page_title, page_width, page_height, referer_url, referer_url_scheme, referer_url_host, referer_url_port, referer_url_path, referer_url_query, referer_url_fragment, referer_medium, referer_source, referer_term, marketing_medium, marketing_source, marketing_term, marketing_content, marketing_campaign, marketing_click_id, marketing_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, ip_address, ip_isp, ip_organization, ip_domain, ip_net_speed, app_id, browser, browser_name, browser_major_version, browser_minor_version, browser_build_version, browser_engine, browser_window_width, browser_window_height, browser_language, os, os_name, os_major_version, os_minor_version, os_build_version, os_manufacturer, os_timezone, device, device_type, device_is_mobile, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '32c1cd2e-ba56-4579-8cd0-74ded027f1c7', 1, 1, '2018-10-31 14:00:28.038', '2018-10-31 14:00:28.038', '2018-10-31 14:00:28', '2018-10-31 14:00', '2018-10-31 14', '2018-10-31', '2018-10-29', '2018-10', '2018-10', 2018, '2018-10-31 14:00:28.038', '2018-10-31 14:00:28.038', '2018-10-31 14:00:28', '14:00', 14, '4', 2, 0, '0s to 9s', 0, 0, 100, 100, '75% to 100%', true, false, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'TouchAI Test', 1920, 936, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Firefox 63.0', 'Firefox', '63', '0', NULL, NULL, 1920, 936, 'es-ES', 'Ubuntu', 'Ubuntu', NULL, NULL, NULL, NULL, 'Europe/Berlin', 'Other', NULL, NULL, NULL, 0, 10, 0, 1, 0, 0, NULL, 26, NULL, NULL, NULL);
INSERT INTO web.page_views_tmp (user_custom_id, user_snowplow_domain_id, user_snowplow_crossdomain_id, session_id, session_index, page_view_id, page_view_index, page_view_in_session_index, page_view_start, page_view_end, page_view_time, page_view_minute, page_view_hour, page_view_date, page_view_week, page_view_month, page_view_quarter, page_view_year, page_view_start_local, page_view_end_local, page_view_local_time, page_view_local_time_of_day, page_view_local_hour_of_day, page_view_local_day_of_week, page_view_local_day_of_week_index, time_engaged_in_s, time_engaged_in_s_tier, horizontal_pixels_scrolled, vertical_pixels_scrolled, horizontal_percentage_scrolled, vertical_percentage_scrolled, vertical_percentage_scrolled_tier, user_bounced, user_engaged, page_url, page_url_scheme, page_url_host, page_url_port, page_url_path, page_url_query, page_url_fragment, page_title, page_width, page_height, referer_url, referer_url_scheme, referer_url_host, referer_url_port, referer_url_path, referer_url_query, referer_url_fragment, referer_medium, referer_source, referer_term, marketing_medium, marketing_source, marketing_term, marketing_content, marketing_campaign, marketing_click_id, marketing_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, ip_address, ip_isp, ip_organization, ip_domain, ip_net_speed, app_id, browser, browser_name, browser_major_version, browser_minor_version, browser_build_version, browser_engine, browser_window_width, browser_window_height, browser_language, os, os_name, os_major_version, os_minor_version, os_build_version, os_manufacturer, os_timezone, device, device_type, device_is_mobile, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '861f1ef6-1fd8-4fee-86e6-a0e3d16bc809', 2, 2, '2018-10-31 14:00:29.899', '2018-10-31 14:00:39.903', '2018-10-31 14:00:29', '2018-10-31 14:00', '2018-10-31 14', '2018-10-31', '2018-10-29', '2018-10', '2018-10', 2018, '2018-10-31 14:00:29.899', '2018-10-31 14:00:39.903', '2018-10-31 14:00:29', '14:00', 14, '4', 2, 10, '10s to 29s', 0, 0, 100, 100, '75% to 100%', false, false, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'TouchAI Test', 1920, 936, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Firefox 63.0', 'Firefox', '63', '0', NULL, NULL, 1920, 936, 'es-ES', 'Ubuntu', 'Ubuntu', NULL, NULL, NULL, NULL, 'Europe/Berlin', 'Other', NULL, NULL, NULL, 1, 0, 0, 0, 0, 0, 94, 25, 69, 2, 115);
INSERT INTO web.page_views_tmp (user_custom_id, user_snowplow_domain_id, user_snowplow_crossdomain_id, session_id, session_index, page_view_id, page_view_index, page_view_in_session_index, page_view_start, page_view_end, page_view_time, page_view_minute, page_view_hour, page_view_date, page_view_week, page_view_month, page_view_quarter, page_view_year, page_view_start_local, page_view_end_local, page_view_local_time, page_view_local_time_of_day, page_view_local_hour_of_day, page_view_local_day_of_week, page_view_local_day_of_week_index, time_engaged_in_s, time_engaged_in_s_tier, horizontal_pixels_scrolled, vertical_pixels_scrolled, horizontal_percentage_scrolled, vertical_percentage_scrolled, vertical_percentage_scrolled_tier, user_bounced, user_engaged, page_url, page_url_scheme, page_url_host, page_url_port, page_url_path, page_url_query, page_url_fragment, page_title, page_width, page_height, referer_url, referer_url_scheme, referer_url_host, referer_url_port, referer_url_path, referer_url_query, referer_url_fragment, referer_medium, referer_source, referer_term, marketing_medium, marketing_source, marketing_term, marketing_content, marketing_campaign, marketing_click_id, marketing_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, ip_address, ip_isp, ip_organization, ip_domain, ip_net_speed, app_id, browser, browser_name, browser_major_version, browser_minor_version, browser_build_version, browser_engine, browser_window_width, browser_window_height, browser_language, os, os_name, os_major_version, os_minor_version, os_build_version, os_manufacturer, os_timezone, device, device_type, device_is_mobile, redirect_time_in_ms, unload_time_in_ms, app_cache_time_in_ms, dns_time_in_ms, tcp_time_in_ms, request_time_in_ms, response_time_in_ms, processing_time_in_ms, dom_loading_to_interactive_time_in_ms, dom_interactive_to_complete_time_in_ms, onload_time_in_ms, total_time_in_ms) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '55183b93-0978-4731-b681-1cc0350cc951', 3, 3, '2018-10-31 14:00:44.024', '2018-10-31 14:00:54.028', '2018-10-31 14:00:44', '2018-10-31 14:00', '2018-10-31 14', '2018-10-31', '2018-10-29', '2018-10', '2018-10', 2018, '2018-10-31 14:00:44.024', '2018-10-31 14:00:54.028', '2018-10-31 14:00:44', '14:00', 14, '4', 2, 10, '10s to 29s', 0, 0, 100, 100, '75% to 100%', false, false, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'TouchAI Test', 1920, 936, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Firefox 63.0', 'Firefox', '63', '0', NULL, NULL, 1920, 936, 'es-ES', 'Ubuntu', 'Ubuntu', NULL, NULL, NULL, NULL, 'Europe/Berlin', 'Other', NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, 88, 24, 64, 2, 99);


--
-- Data for Name: sessions_tmp; Type: TABLE DATA; Schema: web; Owner: sparta
--

INSERT INTO web.sessions_tmp (user_custom_id, user_snowplow_domain_id, user_snowplow_crossdomain_id, session_id, session_index, session_start, session_end, session_time, session_minute, session_hour, session_date, session_week, session_month, session_quarter, session_year, session_start_local, session_end_local, session_local_time, session_local_time_of_day, session_local_hour_of_day, session_local_day_of_week, session_local_day_of_week_index, page_views, bounced_page_views, engaged_page_views, time_engaged_in_s, time_engaged_in_s_tier, user_bounced, user_engaged, first_page_url, first_page_url_scheme, first_page_url_host, first_page_url_port, first_page_url_path, first_page_url_query, first_page_url_fragment, first_page_title, referer_url, referer_url_scheme, referer_url_host, referer_url_port, referer_url_path, referer_url_query, referer_url_fragment, referer_medium, referer_source, referer_term, marketing_medium, marketing_source, marketing_term, marketing_content, marketing_campaign, marketing_click_id, marketing_network, geo_country, geo_region, geo_region_name, geo_city, geo_zipcode, geo_latitude, geo_longitude, geo_timezone, ip_address, ip_isp, ip_organization, ip_domain, ip_net_speed, app_id, browser, browser_name, browser_major_version, browser_minor_version, browser_build_version, browser_engine, browser_language, os, os_name, os_major_version, os_minor_version, os_build_version, os_manufacturer, os_timezone, device, device_type, device_is_mobile) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', 'b592b4d0-36dd-4e7d-955a-ac348e017086', 13, '2018-10-31 14:00:28.038', '2018-10-31 14:00:54.028', '2018-10-31 14:00:28', '2018-10-31 14:00', '2018-10-31 14', '2018-10-31', '2018-10-29', '2018-10', '2018-10', 2018, '2018-10-31 14:00:28.038', '2018-10-31 14:00:54.028', '2018-10-31 14:00:28', '14:00', 14, '4', 2, 3, 1, 0, 20, '10s to 29s', false, false, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'TouchAI Test', '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'US', NULL, NULL, NULL, NULL, 37.7509999999999977, -97.8220000000000027, NULL, '192.100.11.1', NULL, NULL, NULL, NULL, 'touchai-test', 'Firefox 63.0', 'Firefox', '63', '0', NULL, NULL, 'es-ES', 'Ubuntu', 'Ubuntu', NULL, NULL, NULL, NULL, 'Europe/Berlin', 'Other', NULL, NULL);


--
-- Data for Name: users_tmp; Type: TABLE DATA; Schema: web; Owner: sparta
--

INSERT INTO web.users_tmp (user_custom_id, user_snowplow_domain_id, user_snowplow_crossdomain_id, first_session_start, first_session_time, first_session_minute, first_session_hour, first_session_date, first_session_week, first_session_month, first_session_quarter, first_session_year, first_session_start_local, first_session_local_time, first_session_local_time_of_day, first_session_local_hour_of_day, first_session_local_day_of_week, first_session_local_day_of_week_index, last_session_end, page_views, sessions, time_engaged_in_s, first_page_url, first_page_url_scheme, first_page_url_host, first_page_url_port, first_page_url_path, first_page_url_query, first_page_url_fragment, first_page_title, referer_url, referer_url_scheme, referer_url_host, referer_url_port, referer_url_path, referer_url_query, referer_url_fragment, referer_medium, referer_source, referer_term, marketing_medium, marketing_source, marketing_term, marketing_content, marketing_campaign, marketing_click_id, marketing_network, app_id) VALUES ('alex123', '05508805-07cb-480c-93c4-f8ed074fb1cf', '5e1061b0-798e-4b25-a2b9-62ae9cb1f350', '2018-10-31 14:00:28.038', '2018-10-31 14:00:28', '2018-10-31 14:00', '2018-10-31 14', '2018-10-31', '2018-10-29', '2018-10', '2018-10', 2018, '2018-10-31 14:00:28.038', '2018-10-31 14:00:28', '14:00', 14, '4', 2, '2018-10-31 14:00:54.028', 3, 1, 20, '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', 'enableActivityTracking=true', NULL, 'TouchAI Test', '0.0.0.0/test.html', 'http', '0.0.0.0', 8080, '/test.html', NULL, NULL, 'internal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'touchai-test');


--
-- Name: events events_pkey; Type: CONSTRAINT; Schema: atomic; Owner: sparta
--

ALTER TABLE ONLY atomic.events
    ADD CONSTRAINT events_pkey PRIMARY KEY (event_id);


--
-- Name: debug pk_debug; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.debug
    ADD CONSTRAINT pk_debug PRIMARY KEY (debug_id);


--
-- Name: debug_step_data pk_debug_step_data; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.debug_step_data
    ADD CONSTRAINT pk_debug_step_data PRIMARY KEY (id);


--
-- Name: global_parameters pk_global_parameters; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.global_parameters
    ADD CONSTRAINT pk_global_parameters PRIMARY KEY (name);


--
-- Name: groups pk_groups; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.groups
    ADD CONSTRAINT pk_groups PRIMARY KEY (group_id);


--
-- Name: parameter_list pk_parameter_list; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.parameter_list
    ADD CONSTRAINT pk_parameter_list PRIMARY KEY (id);


--
-- Name: template pk_template; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.template
    ADD CONSTRAINT pk_template PRIMARY KEY (id);


--
-- Name: workflow pk_workflow; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.workflow
    ADD CONSTRAINT pk_workflow PRIMARY KEY (workflow_id);


--
-- Name: workflow_execution pk_workflow_execution; Type: CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.workflow_execution
    ADD CONSTRAINT pk_workflow_execution PRIMARY KEY (workflow_execution_id);


--
-- Name: idx_debug_step_data_step; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE INDEX idx_debug_step_data_step ON sparta.debug_step_data USING btree (step);


--
-- Name: idx_groups_name; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE UNIQUE INDEX idx_groups_name ON sparta.groups USING btree (name);


--
-- Name: idx_parameter_list_name; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE UNIQUE INDEX idx_parameter_list_name ON sparta.parameter_list USING btree (name);


--
-- Name: idx_template_name; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE UNIQUE INDEX idx_template_name ON sparta.template USING btree (name);


--
-- Name: idx_workflow_execution_archived; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE INDEX idx_workflow_execution_archived ON sparta.workflow_execution USING btree (archived);


--
-- Name: idx_workflow_group; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE INDEX idx_workflow_group ON sparta.workflow USING btree (group_id);


--
-- Name: pk_workflow_uniqueWorkflow; Type: INDEX; Schema: sparta; Owner: sparta
--

CREATE UNIQUE INDEX "pk_workflow_uniqueWorkflow" ON sparta.workflow USING btree (name, group_id, version);


--
-- Name: com_snowplowanalytics_snowplow_ua_parser_context_1 com_snowplowanalytics_snowplow_ua_parser_context_1_root_id_fkey; Type: FK CONSTRAINT; Schema: atomic; Owner: sparta
--

ALTER TABLE ONLY atomic.com_snowplowanalytics_snowplow_ua_parser_context_1
    ADD CONSTRAINT com_snowplowanalytics_snowplow_ua_parser_context_1_root_id_fkey FOREIGN KEY (root_id) REFERENCES atomic.events(event_id);


--
-- Name: com_snowplowanalytics_snowplow_web_page_1 com_snowplowanalytics_snowplow_web_page_1_root_id_fkey; Type: FK CONSTRAINT; Schema: atomic; Owner: sparta
--

ALTER TABLE ONLY atomic.com_snowplowanalytics_snowplow_web_page_1
    ADD CONSTRAINT com_snowplowanalytics_snowplow_web_page_1_root_id_fkey FOREIGN KEY (root_id) REFERENCES atomic.events(event_id);


--
-- Name: org_w3_performance_timing_1 org_w3_performance_timing_1_root_id_fkey; Type: FK CONSTRAINT; Schema: atomic; Owner: sparta
--

ALTER TABLE ONLY atomic.org_w3_performance_timing_1
    ADD CONSTRAINT org_w3_performance_timing_1_root_id_fkey FOREIGN KEY (root_id) REFERENCES atomic.events(event_id);


--
-- Name: workflow fk_workflow_group; Type: FK CONSTRAINT; Schema: sparta; Owner: sparta
--

ALTER TABLE ONLY sparta.workflow
    ADD CONSTRAINT fk_workflow_group FOREIGN KEY (group_id) REFERENCES sparta.groups(group_id) ON DELETE CASCADE;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

